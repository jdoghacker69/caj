
comoen son!!!.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000044e0  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004e8  08004680  08004680  00005680  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004b68  08004b68  000061f4  2**0
                  CONTENTS
  4 .ARM          00000008  08004b68  08004b68  00005b68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004b70  08004b70  000061f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004b70  08004b70  00005b70  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004b74  08004b74  00005b74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f4  20000000  08004b78  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000061f4  2**0
                  CONTENTS
 10 .bss          000001d8  200001f4  200001f4  000061f4  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200003cc  200003cc  000061f4  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000061f4  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001bf9  00000000  00000000  0000621e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000946  00000000  00000000  00007e17  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001e8  00000000  00000000  00008760  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000150  00000000  00000000  00008948  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00016fef  00000000  00000000  00008a98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002717  00000000  00000000  0001fa87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00078547  00000000  00000000  0002219e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0009a6e5  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000182c  00000000  00000000  0009a728  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000068  00000000  00000000  0009bf54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001f4 	.word	0x200001f4
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004668 	.word	0x08004668

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001f8 	.word	0x200001f8
 80001dc:	08004668 	.word	0x08004668

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <strcmp>:
 8000290:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000294:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000298:	2a01      	cmp	r2, #1
 800029a:	bf28      	it	cs
 800029c:	429a      	cmpcs	r2, r3
 800029e:	d0f7      	beq.n	8000290 <strcmp>
 80002a0:	1ad0      	subs	r0, r2, r3
 80002a2:	4770      	bx	lr

080002a4 <__aeabi_fmul>:
 80002a4:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80002a8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80002ac:	bf1e      	ittt	ne
 80002ae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80002b2:	ea92 0f0c 	teqne	r2, ip
 80002b6:	ea93 0f0c 	teqne	r3, ip
 80002ba:	d06f      	beq.n	800039c <__aeabi_fmul+0xf8>
 80002bc:	441a      	add	r2, r3
 80002be:	ea80 0c01 	eor.w	ip, r0, r1
 80002c2:	0240      	lsls	r0, r0, #9
 80002c4:	bf18      	it	ne
 80002c6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80002ca:	d01e      	beq.n	800030a <__aeabi_fmul+0x66>
 80002cc:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 80002d0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80002d4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80002d8:	fba0 3101 	umull	r3, r1, r0, r1
 80002dc:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 80002e0:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 80002e4:	bf3e      	ittt	cc
 80002e6:	0049      	lslcc	r1, r1, #1
 80002e8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80002ec:	005b      	lslcc	r3, r3, #1
 80002ee:	ea40 0001 	orr.w	r0, r0, r1
 80002f2:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 80002f6:	2afd      	cmp	r2, #253	@ 0xfd
 80002f8:	d81d      	bhi.n	8000336 <__aeabi_fmul+0x92>
 80002fa:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80002fe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000302:	bf08      	it	eq
 8000304:	f020 0001 	biceq.w	r0, r0, #1
 8000308:	4770      	bx	lr
 800030a:	f090 0f00 	teq	r0, #0
 800030e:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000312:	bf08      	it	eq
 8000314:	0249      	lsleq	r1, r1, #9
 8000316:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 800031a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 800031e:	3a7f      	subs	r2, #127	@ 0x7f
 8000320:	bfc2      	ittt	gt
 8000322:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000326:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800032a:	4770      	bxgt	lr
 800032c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000330:	f04f 0300 	mov.w	r3, #0
 8000334:	3a01      	subs	r2, #1
 8000336:	dc5d      	bgt.n	80003f4 <__aeabi_fmul+0x150>
 8000338:	f112 0f19 	cmn.w	r2, #25
 800033c:	bfdc      	itt	le
 800033e:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000342:	4770      	bxle	lr
 8000344:	f1c2 0200 	rsb	r2, r2, #0
 8000348:	0041      	lsls	r1, r0, #1
 800034a:	fa21 f102 	lsr.w	r1, r1, r2
 800034e:	f1c2 0220 	rsb	r2, r2, #32
 8000352:	fa00 fc02 	lsl.w	ip, r0, r2
 8000356:	ea5f 0031 	movs.w	r0, r1, rrx
 800035a:	f140 0000 	adc.w	r0, r0, #0
 800035e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000362:	bf08      	it	eq
 8000364:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000368:	4770      	bx	lr
 800036a:	f092 0f00 	teq	r2, #0
 800036e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000372:	bf02      	ittt	eq
 8000374:	0040      	lsleq	r0, r0, #1
 8000376:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 800037a:	3a01      	subeq	r2, #1
 800037c:	d0f9      	beq.n	8000372 <__aeabi_fmul+0xce>
 800037e:	ea40 000c 	orr.w	r0, r0, ip
 8000382:	f093 0f00 	teq	r3, #0
 8000386:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 800038a:	bf02      	ittt	eq
 800038c:	0049      	lsleq	r1, r1, #1
 800038e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000392:	3b01      	subeq	r3, #1
 8000394:	d0f9      	beq.n	800038a <__aeabi_fmul+0xe6>
 8000396:	ea41 010c 	orr.w	r1, r1, ip
 800039a:	e78f      	b.n	80002bc <__aeabi_fmul+0x18>
 800039c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80003a0:	ea92 0f0c 	teq	r2, ip
 80003a4:	bf18      	it	ne
 80003a6:	ea93 0f0c 	teqne	r3, ip
 80003aa:	d00a      	beq.n	80003c2 <__aeabi_fmul+0x11e>
 80003ac:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 80003b0:	bf18      	it	ne
 80003b2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 80003b6:	d1d8      	bne.n	800036a <__aeabi_fmul+0xc6>
 80003b8:	ea80 0001 	eor.w	r0, r0, r1
 80003bc:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80003c0:	4770      	bx	lr
 80003c2:	f090 0f00 	teq	r0, #0
 80003c6:	bf17      	itett	ne
 80003c8:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 80003cc:	4608      	moveq	r0, r1
 80003ce:	f091 0f00 	teqne	r1, #0
 80003d2:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 80003d6:	d014      	beq.n	8000402 <__aeabi_fmul+0x15e>
 80003d8:	ea92 0f0c 	teq	r2, ip
 80003dc:	d101      	bne.n	80003e2 <__aeabi_fmul+0x13e>
 80003de:	0242      	lsls	r2, r0, #9
 80003e0:	d10f      	bne.n	8000402 <__aeabi_fmul+0x15e>
 80003e2:	ea93 0f0c 	teq	r3, ip
 80003e6:	d103      	bne.n	80003f0 <__aeabi_fmul+0x14c>
 80003e8:	024b      	lsls	r3, r1, #9
 80003ea:	bf18      	it	ne
 80003ec:	4608      	movne	r0, r1
 80003ee:	d108      	bne.n	8000402 <__aeabi_fmul+0x15e>
 80003f0:	ea80 0001 	eor.w	r0, r0, r1
 80003f4:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80003f8:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80003fc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000400:	4770      	bx	lr
 8000402:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000406:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 800040a:	4770      	bx	lr

0800040c <__aeabi_drsub>:
 800040c:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000410:	e002      	b.n	8000418 <__adddf3>
 8000412:	bf00      	nop

08000414 <__aeabi_dsub>:
 8000414:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000418 <__adddf3>:
 8000418:	b530      	push	{r4, r5, lr}
 800041a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800041e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000422:	ea94 0f05 	teq	r4, r5
 8000426:	bf08      	it	eq
 8000428:	ea90 0f02 	teqeq	r0, r2
 800042c:	bf1f      	itttt	ne
 800042e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000432:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000436:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800043a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800043e:	f000 80e2 	beq.w	8000606 <__adddf3+0x1ee>
 8000442:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000446:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800044a:	bfb8      	it	lt
 800044c:	426d      	neglt	r5, r5
 800044e:	dd0c      	ble.n	800046a <__adddf3+0x52>
 8000450:	442c      	add	r4, r5
 8000452:	ea80 0202 	eor.w	r2, r0, r2
 8000456:	ea81 0303 	eor.w	r3, r1, r3
 800045a:	ea82 0000 	eor.w	r0, r2, r0
 800045e:	ea83 0101 	eor.w	r1, r3, r1
 8000462:	ea80 0202 	eor.w	r2, r0, r2
 8000466:	ea81 0303 	eor.w	r3, r1, r3
 800046a:	2d36      	cmp	r5, #54	@ 0x36
 800046c:	bf88      	it	hi
 800046e:	bd30      	pophi	{r4, r5, pc}
 8000470:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000474:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000478:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 800047c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000480:	d002      	beq.n	8000488 <__adddf3+0x70>
 8000482:	4240      	negs	r0, r0
 8000484:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000488:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 800048c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000490:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000494:	d002      	beq.n	800049c <__adddf3+0x84>
 8000496:	4252      	negs	r2, r2
 8000498:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800049c:	ea94 0f05 	teq	r4, r5
 80004a0:	f000 80a7 	beq.w	80005f2 <__adddf3+0x1da>
 80004a4:	f1a4 0401 	sub.w	r4, r4, #1
 80004a8:	f1d5 0e20 	rsbs	lr, r5, #32
 80004ac:	db0d      	blt.n	80004ca <__adddf3+0xb2>
 80004ae:	fa02 fc0e 	lsl.w	ip, r2, lr
 80004b2:	fa22 f205 	lsr.w	r2, r2, r5
 80004b6:	1880      	adds	r0, r0, r2
 80004b8:	f141 0100 	adc.w	r1, r1, #0
 80004bc:	fa03 f20e 	lsl.w	r2, r3, lr
 80004c0:	1880      	adds	r0, r0, r2
 80004c2:	fa43 f305 	asr.w	r3, r3, r5
 80004c6:	4159      	adcs	r1, r3
 80004c8:	e00e      	b.n	80004e8 <__adddf3+0xd0>
 80004ca:	f1a5 0520 	sub.w	r5, r5, #32
 80004ce:	f10e 0e20 	add.w	lr, lr, #32
 80004d2:	2a01      	cmp	r2, #1
 80004d4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80004d8:	bf28      	it	cs
 80004da:	f04c 0c02 	orrcs.w	ip, ip, #2
 80004de:	fa43 f305 	asr.w	r3, r3, r5
 80004e2:	18c0      	adds	r0, r0, r3
 80004e4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004ec:	d507      	bpl.n	80004fe <__adddf3+0xe6>
 80004ee:	f04f 0e00 	mov.w	lr, #0
 80004f2:	f1dc 0c00 	rsbs	ip, ip, #0
 80004f6:	eb7e 0000 	sbcs.w	r0, lr, r0
 80004fa:	eb6e 0101 	sbc.w	r1, lr, r1
 80004fe:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000502:	d31b      	bcc.n	800053c <__adddf3+0x124>
 8000504:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000508:	d30c      	bcc.n	8000524 <__adddf3+0x10c>
 800050a:	0849      	lsrs	r1, r1, #1
 800050c:	ea5f 0030 	movs.w	r0, r0, rrx
 8000510:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000514:	f104 0401 	add.w	r4, r4, #1
 8000518:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800051c:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000520:	f080 809a 	bcs.w	8000658 <__adddf3+0x240>
 8000524:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000528:	bf08      	it	eq
 800052a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800052e:	f150 0000 	adcs.w	r0, r0, #0
 8000532:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000536:	ea41 0105 	orr.w	r1, r1, r5
 800053a:	bd30      	pop	{r4, r5, pc}
 800053c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000540:	4140      	adcs	r0, r0
 8000542:	eb41 0101 	adc.w	r1, r1, r1
 8000546:	3c01      	subs	r4, #1
 8000548:	bf28      	it	cs
 800054a:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800054e:	d2e9      	bcs.n	8000524 <__adddf3+0x10c>
 8000550:	f091 0f00 	teq	r1, #0
 8000554:	bf04      	itt	eq
 8000556:	4601      	moveq	r1, r0
 8000558:	2000      	moveq	r0, #0
 800055a:	fab1 f381 	clz	r3, r1
 800055e:	bf08      	it	eq
 8000560:	3320      	addeq	r3, #32
 8000562:	f1a3 030b 	sub.w	r3, r3, #11
 8000566:	f1b3 0220 	subs.w	r2, r3, #32
 800056a:	da0c      	bge.n	8000586 <__adddf3+0x16e>
 800056c:	320c      	adds	r2, #12
 800056e:	dd08      	ble.n	8000582 <__adddf3+0x16a>
 8000570:	f102 0c14 	add.w	ip, r2, #20
 8000574:	f1c2 020c 	rsb	r2, r2, #12
 8000578:	fa01 f00c 	lsl.w	r0, r1, ip
 800057c:	fa21 f102 	lsr.w	r1, r1, r2
 8000580:	e00c      	b.n	800059c <__adddf3+0x184>
 8000582:	f102 0214 	add.w	r2, r2, #20
 8000586:	bfd8      	it	le
 8000588:	f1c2 0c20 	rsble	ip, r2, #32
 800058c:	fa01 f102 	lsl.w	r1, r1, r2
 8000590:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000594:	bfdc      	itt	le
 8000596:	ea41 010c 	orrle.w	r1, r1, ip
 800059a:	4090      	lslle	r0, r2
 800059c:	1ae4      	subs	r4, r4, r3
 800059e:	bfa2      	ittt	ge
 80005a0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80005a4:	4329      	orrge	r1, r5
 80005a6:	bd30      	popge	{r4, r5, pc}
 80005a8:	ea6f 0404 	mvn.w	r4, r4
 80005ac:	3c1f      	subs	r4, #31
 80005ae:	da1c      	bge.n	80005ea <__adddf3+0x1d2>
 80005b0:	340c      	adds	r4, #12
 80005b2:	dc0e      	bgt.n	80005d2 <__adddf3+0x1ba>
 80005b4:	f104 0414 	add.w	r4, r4, #20
 80005b8:	f1c4 0220 	rsb	r2, r4, #32
 80005bc:	fa20 f004 	lsr.w	r0, r0, r4
 80005c0:	fa01 f302 	lsl.w	r3, r1, r2
 80005c4:	ea40 0003 	orr.w	r0, r0, r3
 80005c8:	fa21 f304 	lsr.w	r3, r1, r4
 80005cc:	ea45 0103 	orr.w	r1, r5, r3
 80005d0:	bd30      	pop	{r4, r5, pc}
 80005d2:	f1c4 040c 	rsb	r4, r4, #12
 80005d6:	f1c4 0220 	rsb	r2, r4, #32
 80005da:	fa20 f002 	lsr.w	r0, r0, r2
 80005de:	fa01 f304 	lsl.w	r3, r1, r4
 80005e2:	ea40 0003 	orr.w	r0, r0, r3
 80005e6:	4629      	mov	r1, r5
 80005e8:	bd30      	pop	{r4, r5, pc}
 80005ea:	fa21 f004 	lsr.w	r0, r1, r4
 80005ee:	4629      	mov	r1, r5
 80005f0:	bd30      	pop	{r4, r5, pc}
 80005f2:	f094 0f00 	teq	r4, #0
 80005f6:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80005fa:	bf06      	itte	eq
 80005fc:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000600:	3401      	addeq	r4, #1
 8000602:	3d01      	subne	r5, #1
 8000604:	e74e      	b.n	80004a4 <__adddf3+0x8c>
 8000606:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800060a:	bf18      	it	ne
 800060c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000610:	d029      	beq.n	8000666 <__adddf3+0x24e>
 8000612:	ea94 0f05 	teq	r4, r5
 8000616:	bf08      	it	eq
 8000618:	ea90 0f02 	teqeq	r0, r2
 800061c:	d005      	beq.n	800062a <__adddf3+0x212>
 800061e:	ea54 0c00 	orrs.w	ip, r4, r0
 8000622:	bf04      	itt	eq
 8000624:	4619      	moveq	r1, r3
 8000626:	4610      	moveq	r0, r2
 8000628:	bd30      	pop	{r4, r5, pc}
 800062a:	ea91 0f03 	teq	r1, r3
 800062e:	bf1e      	ittt	ne
 8000630:	2100      	movne	r1, #0
 8000632:	2000      	movne	r0, #0
 8000634:	bd30      	popne	{r4, r5, pc}
 8000636:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800063a:	d105      	bne.n	8000648 <__adddf3+0x230>
 800063c:	0040      	lsls	r0, r0, #1
 800063e:	4149      	adcs	r1, r1
 8000640:	bf28      	it	cs
 8000642:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000646:	bd30      	pop	{r4, r5, pc}
 8000648:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 800064c:	bf3c      	itt	cc
 800064e:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000652:	bd30      	popcc	{r4, r5, pc}
 8000654:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000658:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 800065c:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000660:	f04f 0000 	mov.w	r0, #0
 8000664:	bd30      	pop	{r4, r5, pc}
 8000666:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800066a:	bf1a      	itte	ne
 800066c:	4619      	movne	r1, r3
 800066e:	4610      	movne	r0, r2
 8000670:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000674:	bf1c      	itt	ne
 8000676:	460b      	movne	r3, r1
 8000678:	4602      	movne	r2, r0
 800067a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800067e:	bf06      	itte	eq
 8000680:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000684:	ea91 0f03 	teqeq	r1, r3
 8000688:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 800068c:	bd30      	pop	{r4, r5, pc}
 800068e:	bf00      	nop

08000690 <__aeabi_ui2d>:
 8000690:	f090 0f00 	teq	r0, #0
 8000694:	bf04      	itt	eq
 8000696:	2100      	moveq	r1, #0
 8000698:	4770      	bxeq	lr
 800069a:	b530      	push	{r4, r5, lr}
 800069c:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80006a0:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80006a4:	f04f 0500 	mov.w	r5, #0
 80006a8:	f04f 0100 	mov.w	r1, #0
 80006ac:	e750      	b.n	8000550 <__adddf3+0x138>
 80006ae:	bf00      	nop

080006b0 <__aeabi_i2d>:
 80006b0:	f090 0f00 	teq	r0, #0
 80006b4:	bf04      	itt	eq
 80006b6:	2100      	moveq	r1, #0
 80006b8:	4770      	bxeq	lr
 80006ba:	b530      	push	{r4, r5, lr}
 80006bc:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80006c0:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80006c4:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80006c8:	bf48      	it	mi
 80006ca:	4240      	negmi	r0, r0
 80006cc:	f04f 0100 	mov.w	r1, #0
 80006d0:	e73e      	b.n	8000550 <__adddf3+0x138>
 80006d2:	bf00      	nop

080006d4 <__aeabi_f2d>:
 80006d4:	0042      	lsls	r2, r0, #1
 80006d6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80006da:	ea4f 0131 	mov.w	r1, r1, rrx
 80006de:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80006e2:	bf1f      	itttt	ne
 80006e4:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80006e8:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80006ec:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80006f0:	4770      	bxne	lr
 80006f2:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80006f6:	bf08      	it	eq
 80006f8:	4770      	bxeq	lr
 80006fa:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80006fe:	bf04      	itt	eq
 8000700:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000704:	4770      	bxeq	lr
 8000706:	b530      	push	{r4, r5, lr}
 8000708:	f44f 7460 	mov.w	r4, #896	@ 0x380
 800070c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	e71c      	b.n	8000550 <__adddf3+0x138>
 8000716:	bf00      	nop

08000718 <__aeabi_ul2d>:
 8000718:	ea50 0201 	orrs.w	r2, r0, r1
 800071c:	bf08      	it	eq
 800071e:	4770      	bxeq	lr
 8000720:	b530      	push	{r4, r5, lr}
 8000722:	f04f 0500 	mov.w	r5, #0
 8000726:	e00a      	b.n	800073e <__aeabi_l2d+0x16>

08000728 <__aeabi_l2d>:
 8000728:	ea50 0201 	orrs.w	r2, r0, r1
 800072c:	bf08      	it	eq
 800072e:	4770      	bxeq	lr
 8000730:	b530      	push	{r4, r5, lr}
 8000732:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000736:	d502      	bpl.n	800073e <__aeabi_l2d+0x16>
 8000738:	4240      	negs	r0, r0
 800073a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800073e:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000742:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000746:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800074a:	f43f aed8 	beq.w	80004fe <__adddf3+0xe6>
 800074e:	f04f 0203 	mov.w	r2, #3
 8000752:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000756:	bf18      	it	ne
 8000758:	3203      	addne	r2, #3
 800075a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800075e:	bf18      	it	ne
 8000760:	3203      	addne	r2, #3
 8000762:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000766:	f1c2 0320 	rsb	r3, r2, #32
 800076a:	fa00 fc03 	lsl.w	ip, r0, r3
 800076e:	fa20 f002 	lsr.w	r0, r0, r2
 8000772:	fa01 fe03 	lsl.w	lr, r1, r3
 8000776:	ea40 000e 	orr.w	r0, r0, lr
 800077a:	fa21 f102 	lsr.w	r1, r1, r2
 800077e:	4414      	add	r4, r2
 8000780:	e6bd      	b.n	80004fe <__adddf3+0xe6>
 8000782:	bf00      	nop

08000784 <__aeabi_dmul>:
 8000784:	b570      	push	{r4, r5, r6, lr}
 8000786:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800078a:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800078e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000792:	bf1d      	ittte	ne
 8000794:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000798:	ea94 0f0c 	teqne	r4, ip
 800079c:	ea95 0f0c 	teqne	r5, ip
 80007a0:	f000 f8de 	bleq	8000960 <__aeabi_dmul+0x1dc>
 80007a4:	442c      	add	r4, r5
 80007a6:	ea81 0603 	eor.w	r6, r1, r3
 80007aa:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80007ae:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80007b2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80007b6:	bf18      	it	ne
 80007b8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80007bc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80007c0:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80007c4:	d038      	beq.n	8000838 <__aeabi_dmul+0xb4>
 80007c6:	fba0 ce02 	umull	ip, lr, r0, r2
 80007ca:	f04f 0500 	mov.w	r5, #0
 80007ce:	fbe1 e502 	umlal	lr, r5, r1, r2
 80007d2:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80007d6:	fbe0 e503 	umlal	lr, r5, r0, r3
 80007da:	f04f 0600 	mov.w	r6, #0
 80007de:	fbe1 5603 	umlal	r5, r6, r1, r3
 80007e2:	f09c 0f00 	teq	ip, #0
 80007e6:	bf18      	it	ne
 80007e8:	f04e 0e01 	orrne.w	lr, lr, #1
 80007ec:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80007f0:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80007f4:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80007f8:	d204      	bcs.n	8000804 <__aeabi_dmul+0x80>
 80007fa:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80007fe:	416d      	adcs	r5, r5
 8000800:	eb46 0606 	adc.w	r6, r6, r6
 8000804:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000808:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 800080c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000810:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000814:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000818:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800081c:	bf88      	it	hi
 800081e:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000822:	d81e      	bhi.n	8000862 <__aeabi_dmul+0xde>
 8000824:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000828:	bf08      	it	eq
 800082a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800082e:	f150 0000 	adcs.w	r0, r0, #0
 8000832:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000836:	bd70      	pop	{r4, r5, r6, pc}
 8000838:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 800083c:	ea46 0101 	orr.w	r1, r6, r1
 8000840:	ea40 0002 	orr.w	r0, r0, r2
 8000844:	ea81 0103 	eor.w	r1, r1, r3
 8000848:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 800084c:	bfc2      	ittt	gt
 800084e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000852:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000856:	bd70      	popgt	{r4, r5, r6, pc}
 8000858:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800085c:	f04f 0e00 	mov.w	lr, #0
 8000860:	3c01      	subs	r4, #1
 8000862:	f300 80ab 	bgt.w	80009bc <__aeabi_dmul+0x238>
 8000866:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800086a:	bfde      	ittt	le
 800086c:	2000      	movle	r0, #0
 800086e:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000872:	bd70      	pople	{r4, r5, r6, pc}
 8000874:	f1c4 0400 	rsb	r4, r4, #0
 8000878:	3c20      	subs	r4, #32
 800087a:	da35      	bge.n	80008e8 <__aeabi_dmul+0x164>
 800087c:	340c      	adds	r4, #12
 800087e:	dc1b      	bgt.n	80008b8 <__aeabi_dmul+0x134>
 8000880:	f104 0414 	add.w	r4, r4, #20
 8000884:	f1c4 0520 	rsb	r5, r4, #32
 8000888:	fa00 f305 	lsl.w	r3, r0, r5
 800088c:	fa20 f004 	lsr.w	r0, r0, r4
 8000890:	fa01 f205 	lsl.w	r2, r1, r5
 8000894:	ea40 0002 	orr.w	r0, r0, r2
 8000898:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 800089c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80008a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80008a4:	fa21 f604 	lsr.w	r6, r1, r4
 80008a8:	eb42 0106 	adc.w	r1, r2, r6
 80008ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80008b0:	bf08      	it	eq
 80008b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80008b6:	bd70      	pop	{r4, r5, r6, pc}
 80008b8:	f1c4 040c 	rsb	r4, r4, #12
 80008bc:	f1c4 0520 	rsb	r5, r4, #32
 80008c0:	fa00 f304 	lsl.w	r3, r0, r4
 80008c4:	fa20 f005 	lsr.w	r0, r0, r5
 80008c8:	fa01 f204 	lsl.w	r2, r1, r4
 80008cc:	ea40 0002 	orr.w	r0, r0, r2
 80008d0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80008d4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80008d8:	f141 0100 	adc.w	r1, r1, #0
 80008dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80008e0:	bf08      	it	eq
 80008e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	f1c4 0520 	rsb	r5, r4, #32
 80008ec:	fa00 f205 	lsl.w	r2, r0, r5
 80008f0:	ea4e 0e02 	orr.w	lr, lr, r2
 80008f4:	fa20 f304 	lsr.w	r3, r0, r4
 80008f8:	fa01 f205 	lsl.w	r2, r1, r5
 80008fc:	ea43 0302 	orr.w	r3, r3, r2
 8000900:	fa21 f004 	lsr.w	r0, r1, r4
 8000904:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000908:	fa21 f204 	lsr.w	r2, r1, r4
 800090c:	ea20 0002 	bic.w	r0, r0, r2
 8000910:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000914:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000918:	bf08      	it	eq
 800091a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800091e:	bd70      	pop	{r4, r5, r6, pc}
 8000920:	f094 0f00 	teq	r4, #0
 8000924:	d10f      	bne.n	8000946 <__aeabi_dmul+0x1c2>
 8000926:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800092a:	0040      	lsls	r0, r0, #1
 800092c:	eb41 0101 	adc.w	r1, r1, r1
 8000930:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000934:	bf08      	it	eq
 8000936:	3c01      	subeq	r4, #1
 8000938:	d0f7      	beq.n	800092a <__aeabi_dmul+0x1a6>
 800093a:	ea41 0106 	orr.w	r1, r1, r6
 800093e:	f095 0f00 	teq	r5, #0
 8000942:	bf18      	it	ne
 8000944:	4770      	bxne	lr
 8000946:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800094a:	0052      	lsls	r2, r2, #1
 800094c:	eb43 0303 	adc.w	r3, r3, r3
 8000950:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000954:	bf08      	it	eq
 8000956:	3d01      	subeq	r5, #1
 8000958:	d0f7      	beq.n	800094a <__aeabi_dmul+0x1c6>
 800095a:	ea43 0306 	orr.w	r3, r3, r6
 800095e:	4770      	bx	lr
 8000960:	ea94 0f0c 	teq	r4, ip
 8000964:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000968:	bf18      	it	ne
 800096a:	ea95 0f0c 	teqne	r5, ip
 800096e:	d00c      	beq.n	800098a <__aeabi_dmul+0x206>
 8000970:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000974:	bf18      	it	ne
 8000976:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800097a:	d1d1      	bne.n	8000920 <__aeabi_dmul+0x19c>
 800097c:	ea81 0103 	eor.w	r1, r1, r3
 8000980:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000984:	f04f 0000 	mov.w	r0, #0
 8000988:	bd70      	pop	{r4, r5, r6, pc}
 800098a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800098e:	bf06      	itte	eq
 8000990:	4610      	moveq	r0, r2
 8000992:	4619      	moveq	r1, r3
 8000994:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000998:	d019      	beq.n	80009ce <__aeabi_dmul+0x24a>
 800099a:	ea94 0f0c 	teq	r4, ip
 800099e:	d102      	bne.n	80009a6 <__aeabi_dmul+0x222>
 80009a0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80009a4:	d113      	bne.n	80009ce <__aeabi_dmul+0x24a>
 80009a6:	ea95 0f0c 	teq	r5, ip
 80009aa:	d105      	bne.n	80009b8 <__aeabi_dmul+0x234>
 80009ac:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80009b0:	bf1c      	itt	ne
 80009b2:	4610      	movne	r0, r2
 80009b4:	4619      	movne	r1, r3
 80009b6:	d10a      	bne.n	80009ce <__aeabi_dmul+0x24a>
 80009b8:	ea81 0103 	eor.w	r1, r1, r3
 80009bc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80009c0:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80009c4:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80009c8:	f04f 0000 	mov.w	r0, #0
 80009cc:	bd70      	pop	{r4, r5, r6, pc}
 80009ce:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80009d2:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80009d6:	bd70      	pop	{r4, r5, r6, pc}

080009d8 <__aeabi_ddiv>:
 80009d8:	b570      	push	{r4, r5, r6, lr}
 80009da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80009de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80009e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80009e6:	bf1d      	ittte	ne
 80009e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80009ec:	ea94 0f0c 	teqne	r4, ip
 80009f0:	ea95 0f0c 	teqne	r5, ip
 80009f4:	f000 f8a7 	bleq	8000b46 <__aeabi_ddiv+0x16e>
 80009f8:	eba4 0405 	sub.w	r4, r4, r5
 80009fc:	ea81 0e03 	eor.w	lr, r1, r3
 8000a00:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a04:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000a08:	f000 8088 	beq.w	8000b1c <__aeabi_ddiv+0x144>
 8000a0c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000a10:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000a14:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000a18:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000a1c:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000a20:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000a24:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000a28:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000a2c:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000a30:	429d      	cmp	r5, r3
 8000a32:	bf08      	it	eq
 8000a34:	4296      	cmpeq	r6, r2
 8000a36:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000a3a:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000a3e:	d202      	bcs.n	8000a46 <__aeabi_ddiv+0x6e>
 8000a40:	085b      	lsrs	r3, r3, #1
 8000a42:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a46:	1ab6      	subs	r6, r6, r2
 8000a48:	eb65 0503 	sbc.w	r5, r5, r3
 8000a4c:	085b      	lsrs	r3, r3, #1
 8000a4e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a52:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000a56:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000a5a:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a5e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a62:	bf22      	ittt	cs
 8000a64:	1ab6      	subcs	r6, r6, r2
 8000a66:	4675      	movcs	r5, lr
 8000a68:	ea40 000c 	orrcs.w	r0, r0, ip
 8000a6c:	085b      	lsrs	r3, r3, #1
 8000a6e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a72:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a76:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a7a:	bf22      	ittt	cs
 8000a7c:	1ab6      	subcs	r6, r6, r2
 8000a7e:	4675      	movcs	r5, lr
 8000a80:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000a84:	085b      	lsrs	r3, r3, #1
 8000a86:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a8a:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a8e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a92:	bf22      	ittt	cs
 8000a94:	1ab6      	subcs	r6, r6, r2
 8000a96:	4675      	movcs	r5, lr
 8000a98:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000a9c:	085b      	lsrs	r3, r3, #1
 8000a9e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000aa2:	ebb6 0e02 	subs.w	lr, r6, r2
 8000aa6:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000aaa:	bf22      	ittt	cs
 8000aac:	1ab6      	subcs	r6, r6, r2
 8000aae:	4675      	movcs	r5, lr
 8000ab0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000ab4:	ea55 0e06 	orrs.w	lr, r5, r6
 8000ab8:	d018      	beq.n	8000aec <__aeabi_ddiv+0x114>
 8000aba:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000abe:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000ac2:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000ac6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000aca:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000ace:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000ad2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000ad6:	d1c0      	bne.n	8000a5a <__aeabi_ddiv+0x82>
 8000ad8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000adc:	d10b      	bne.n	8000af6 <__aeabi_ddiv+0x11e>
 8000ade:	ea41 0100 	orr.w	r1, r1, r0
 8000ae2:	f04f 0000 	mov.w	r0, #0
 8000ae6:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8000aea:	e7b6      	b.n	8000a5a <__aeabi_ddiv+0x82>
 8000aec:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000af0:	bf04      	itt	eq
 8000af2:	4301      	orreq	r1, r0
 8000af4:	2000      	moveq	r0, #0
 8000af6:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000afa:	bf88      	it	hi
 8000afc:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000b00:	f63f aeaf 	bhi.w	8000862 <__aeabi_dmul+0xde>
 8000b04:	ebb5 0c03 	subs.w	ip, r5, r3
 8000b08:	bf04      	itt	eq
 8000b0a:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000b0e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000b12:	f150 0000 	adcs.w	r0, r0, #0
 8000b16:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000b1a:	bd70      	pop	{r4, r5, r6, pc}
 8000b1c:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000b20:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000b24:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000b28:	bfc2      	ittt	gt
 8000b2a:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000b2e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000b32:	bd70      	popgt	{r4, r5, r6, pc}
 8000b34:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b38:	f04f 0e00 	mov.w	lr, #0
 8000b3c:	3c01      	subs	r4, #1
 8000b3e:	e690      	b.n	8000862 <__aeabi_dmul+0xde>
 8000b40:	ea45 0e06 	orr.w	lr, r5, r6
 8000b44:	e68d      	b.n	8000862 <__aeabi_dmul+0xde>
 8000b46:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000b4a:	ea94 0f0c 	teq	r4, ip
 8000b4e:	bf08      	it	eq
 8000b50:	ea95 0f0c 	teqeq	r5, ip
 8000b54:	f43f af3b 	beq.w	80009ce <__aeabi_dmul+0x24a>
 8000b58:	ea94 0f0c 	teq	r4, ip
 8000b5c:	d10a      	bne.n	8000b74 <__aeabi_ddiv+0x19c>
 8000b5e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000b62:	f47f af34 	bne.w	80009ce <__aeabi_dmul+0x24a>
 8000b66:	ea95 0f0c 	teq	r5, ip
 8000b6a:	f47f af25 	bne.w	80009b8 <__aeabi_dmul+0x234>
 8000b6e:	4610      	mov	r0, r2
 8000b70:	4619      	mov	r1, r3
 8000b72:	e72c      	b.n	80009ce <__aeabi_dmul+0x24a>
 8000b74:	ea95 0f0c 	teq	r5, ip
 8000b78:	d106      	bne.n	8000b88 <__aeabi_ddiv+0x1b0>
 8000b7a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000b7e:	f43f aefd 	beq.w	800097c <__aeabi_dmul+0x1f8>
 8000b82:	4610      	mov	r0, r2
 8000b84:	4619      	mov	r1, r3
 8000b86:	e722      	b.n	80009ce <__aeabi_dmul+0x24a>
 8000b88:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000b8c:	bf18      	it	ne
 8000b8e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000b92:	f47f aec5 	bne.w	8000920 <__aeabi_dmul+0x19c>
 8000b96:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000b9a:	f47f af0d 	bne.w	80009b8 <__aeabi_dmul+0x234>
 8000b9e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000ba2:	f47f aeeb 	bne.w	800097c <__aeabi_dmul+0x1f8>
 8000ba6:	e712      	b.n	80009ce <__aeabi_dmul+0x24a>

08000ba8 <__gedf2>:
 8000ba8:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000bac:	e006      	b.n	8000bbc <__cmpdf2+0x4>
 8000bae:	bf00      	nop

08000bb0 <__ledf2>:
 8000bb0:	f04f 0c01 	mov.w	ip, #1
 8000bb4:	e002      	b.n	8000bbc <__cmpdf2+0x4>
 8000bb6:	bf00      	nop

08000bb8 <__cmpdf2>:
 8000bb8:	f04f 0c01 	mov.w	ip, #1
 8000bbc:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000bc0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000bc4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000bc8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000bcc:	bf18      	it	ne
 8000bce:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000bd2:	d01b      	beq.n	8000c0c <__cmpdf2+0x54>
 8000bd4:	b001      	add	sp, #4
 8000bd6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000bda:	bf0c      	ite	eq
 8000bdc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000be0:	ea91 0f03 	teqne	r1, r3
 8000be4:	bf02      	ittt	eq
 8000be6:	ea90 0f02 	teqeq	r0, r2
 8000bea:	2000      	moveq	r0, #0
 8000bec:	4770      	bxeq	lr
 8000bee:	f110 0f00 	cmn.w	r0, #0
 8000bf2:	ea91 0f03 	teq	r1, r3
 8000bf6:	bf58      	it	pl
 8000bf8:	4299      	cmppl	r1, r3
 8000bfa:	bf08      	it	eq
 8000bfc:	4290      	cmpeq	r0, r2
 8000bfe:	bf2c      	ite	cs
 8000c00:	17d8      	asrcs	r0, r3, #31
 8000c02:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000c06:	f040 0001 	orr.w	r0, r0, #1
 8000c0a:	4770      	bx	lr
 8000c0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000c10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c14:	d102      	bne.n	8000c1c <__cmpdf2+0x64>
 8000c16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000c1a:	d107      	bne.n	8000c2c <__cmpdf2+0x74>
 8000c1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000c20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c24:	d1d6      	bne.n	8000bd4 <__cmpdf2+0x1c>
 8000c26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000c2a:	d0d3      	beq.n	8000bd4 <__cmpdf2+0x1c>
 8000c2c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000c30:	4770      	bx	lr
 8000c32:	bf00      	nop

08000c34 <__aeabi_cdrcmple>:
 8000c34:	4684      	mov	ip, r0
 8000c36:	4610      	mov	r0, r2
 8000c38:	4662      	mov	r2, ip
 8000c3a:	468c      	mov	ip, r1
 8000c3c:	4619      	mov	r1, r3
 8000c3e:	4663      	mov	r3, ip
 8000c40:	e000      	b.n	8000c44 <__aeabi_cdcmpeq>
 8000c42:	bf00      	nop

08000c44 <__aeabi_cdcmpeq>:
 8000c44:	b501      	push	{r0, lr}
 8000c46:	f7ff ffb7 	bl	8000bb8 <__cmpdf2>
 8000c4a:	2800      	cmp	r0, #0
 8000c4c:	bf48      	it	mi
 8000c4e:	f110 0f00 	cmnmi.w	r0, #0
 8000c52:	bd01      	pop	{r0, pc}

08000c54 <__aeabi_dcmpeq>:
 8000c54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c58:	f7ff fff4 	bl	8000c44 <__aeabi_cdcmpeq>
 8000c5c:	bf0c      	ite	eq
 8000c5e:	2001      	moveq	r0, #1
 8000c60:	2000      	movne	r0, #0
 8000c62:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c66:	bf00      	nop

08000c68 <__aeabi_dcmplt>:
 8000c68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c6c:	f7ff ffea 	bl	8000c44 <__aeabi_cdcmpeq>
 8000c70:	bf34      	ite	cc
 8000c72:	2001      	movcc	r0, #1
 8000c74:	2000      	movcs	r0, #0
 8000c76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c7a:	bf00      	nop

08000c7c <__aeabi_dcmple>:
 8000c7c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c80:	f7ff ffe0 	bl	8000c44 <__aeabi_cdcmpeq>
 8000c84:	bf94      	ite	ls
 8000c86:	2001      	movls	r0, #1
 8000c88:	2000      	movhi	r0, #0
 8000c8a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c8e:	bf00      	nop

08000c90 <__aeabi_dcmpge>:
 8000c90:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c94:	f7ff ffce 	bl	8000c34 <__aeabi_cdrcmple>
 8000c98:	bf94      	ite	ls
 8000c9a:	2001      	movls	r0, #1
 8000c9c:	2000      	movhi	r0, #0
 8000c9e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ca2:	bf00      	nop

08000ca4 <__aeabi_dcmpgt>:
 8000ca4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ca8:	f7ff ffc4 	bl	8000c34 <__aeabi_cdrcmple>
 8000cac:	bf34      	ite	cc
 8000cae:	2001      	movcc	r0, #1
 8000cb0:	2000      	movcs	r0, #0
 8000cb2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000cb6:	bf00      	nop

08000cb8 <__aeabi_dcmpun>:
 8000cb8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000cbc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000cc0:	d102      	bne.n	8000cc8 <__aeabi_dcmpun+0x10>
 8000cc2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000cc6:	d10a      	bne.n	8000cde <__aeabi_dcmpun+0x26>
 8000cc8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ccc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000cd0:	d102      	bne.n	8000cd8 <__aeabi_dcmpun+0x20>
 8000cd2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000cd6:	d102      	bne.n	8000cde <__aeabi_dcmpun+0x26>
 8000cd8:	f04f 0000 	mov.w	r0, #0
 8000cdc:	4770      	bx	lr
 8000cde:	f04f 0001 	mov.w	r0, #1
 8000ce2:	4770      	bx	lr

08000ce4 <__aeabi_d2iz>:
 8000ce4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ce8:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000cec:	d215      	bcs.n	8000d1a <__aeabi_d2iz+0x36>
 8000cee:	d511      	bpl.n	8000d14 <__aeabi_d2iz+0x30>
 8000cf0:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000cf4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000cf8:	d912      	bls.n	8000d20 <__aeabi_d2iz+0x3c>
 8000cfa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000cfe:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000d02:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000d06:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000d0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000d0e:	bf18      	it	ne
 8000d10:	4240      	negne	r0, r0
 8000d12:	4770      	bx	lr
 8000d14:	f04f 0000 	mov.w	r0, #0
 8000d18:	4770      	bx	lr
 8000d1a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000d1e:	d105      	bne.n	8000d2c <__aeabi_d2iz+0x48>
 8000d20:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000d24:	bf08      	it	eq
 8000d26:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000d2a:	4770      	bx	lr
 8000d2c:	f04f 0000 	mov.w	r0, #0
 8000d30:	4770      	bx	lr
 8000d32:	bf00      	nop

08000d34 <__aeabi_frsub>:
 8000d34:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000d38:	e002      	b.n	8000d40 <__addsf3>
 8000d3a:	bf00      	nop

08000d3c <__aeabi_fsub>:
 8000d3c:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000d40 <__addsf3>:
 8000d40:	0042      	lsls	r2, r0, #1
 8000d42:	bf1f      	itttt	ne
 8000d44:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000d48:	ea92 0f03 	teqne	r2, r3
 8000d4c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000d50:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000d54:	d06a      	beq.n	8000e2c <__addsf3+0xec>
 8000d56:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000d5a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000d5e:	bfc1      	itttt	gt
 8000d60:	18d2      	addgt	r2, r2, r3
 8000d62:	4041      	eorgt	r1, r0
 8000d64:	4048      	eorgt	r0, r1
 8000d66:	4041      	eorgt	r1, r0
 8000d68:	bfb8      	it	lt
 8000d6a:	425b      	neglt	r3, r3
 8000d6c:	2b19      	cmp	r3, #25
 8000d6e:	bf88      	it	hi
 8000d70:	4770      	bxhi	lr
 8000d72:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000d76:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d7a:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000d7e:	bf18      	it	ne
 8000d80:	4240      	negne	r0, r0
 8000d82:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000d86:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000d8a:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000d8e:	bf18      	it	ne
 8000d90:	4249      	negne	r1, r1
 8000d92:	ea92 0f03 	teq	r2, r3
 8000d96:	d03f      	beq.n	8000e18 <__addsf3+0xd8>
 8000d98:	f1a2 0201 	sub.w	r2, r2, #1
 8000d9c:	fa41 fc03 	asr.w	ip, r1, r3
 8000da0:	eb10 000c 	adds.w	r0, r0, ip
 8000da4:	f1c3 0320 	rsb	r3, r3, #32
 8000da8:	fa01 f103 	lsl.w	r1, r1, r3
 8000dac:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000db0:	d502      	bpl.n	8000db8 <__addsf3+0x78>
 8000db2:	4249      	negs	r1, r1
 8000db4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000db8:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000dbc:	d313      	bcc.n	8000de6 <__addsf3+0xa6>
 8000dbe:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000dc2:	d306      	bcc.n	8000dd2 <__addsf3+0x92>
 8000dc4:	0840      	lsrs	r0, r0, #1
 8000dc6:	ea4f 0131 	mov.w	r1, r1, rrx
 8000dca:	f102 0201 	add.w	r2, r2, #1
 8000dce:	2afe      	cmp	r2, #254	@ 0xfe
 8000dd0:	d251      	bcs.n	8000e76 <__addsf3+0x136>
 8000dd2:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000dd6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000dda:	bf08      	it	eq
 8000ddc:	f020 0001 	biceq.w	r0, r0, #1
 8000de0:	ea40 0003 	orr.w	r0, r0, r3
 8000de4:	4770      	bx	lr
 8000de6:	0049      	lsls	r1, r1, #1
 8000de8:	eb40 0000 	adc.w	r0, r0, r0
 8000dec:	3a01      	subs	r2, #1
 8000dee:	bf28      	it	cs
 8000df0:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000df4:	d2ed      	bcs.n	8000dd2 <__addsf3+0x92>
 8000df6:	fab0 fc80 	clz	ip, r0
 8000dfa:	f1ac 0c08 	sub.w	ip, ip, #8
 8000dfe:	ebb2 020c 	subs.w	r2, r2, ip
 8000e02:	fa00 f00c 	lsl.w	r0, r0, ip
 8000e06:	bfaa      	itet	ge
 8000e08:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000e0c:	4252      	neglt	r2, r2
 8000e0e:	4318      	orrge	r0, r3
 8000e10:	bfbc      	itt	lt
 8000e12:	40d0      	lsrlt	r0, r2
 8000e14:	4318      	orrlt	r0, r3
 8000e16:	4770      	bx	lr
 8000e18:	f092 0f00 	teq	r2, #0
 8000e1c:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000e20:	bf06      	itte	eq
 8000e22:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000e26:	3201      	addeq	r2, #1
 8000e28:	3b01      	subne	r3, #1
 8000e2a:	e7b5      	b.n	8000d98 <__addsf3+0x58>
 8000e2c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000e30:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000e34:	bf18      	it	ne
 8000e36:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000e3a:	d021      	beq.n	8000e80 <__addsf3+0x140>
 8000e3c:	ea92 0f03 	teq	r2, r3
 8000e40:	d004      	beq.n	8000e4c <__addsf3+0x10c>
 8000e42:	f092 0f00 	teq	r2, #0
 8000e46:	bf08      	it	eq
 8000e48:	4608      	moveq	r0, r1
 8000e4a:	4770      	bx	lr
 8000e4c:	ea90 0f01 	teq	r0, r1
 8000e50:	bf1c      	itt	ne
 8000e52:	2000      	movne	r0, #0
 8000e54:	4770      	bxne	lr
 8000e56:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000e5a:	d104      	bne.n	8000e66 <__addsf3+0x126>
 8000e5c:	0040      	lsls	r0, r0, #1
 8000e5e:	bf28      	it	cs
 8000e60:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000e64:	4770      	bx	lr
 8000e66:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000e6a:	bf3c      	itt	cc
 8000e6c:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000e70:	4770      	bxcc	lr
 8000e72:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000e76:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000e7a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e7e:	4770      	bx	lr
 8000e80:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000e84:	bf16      	itet	ne
 8000e86:	4608      	movne	r0, r1
 8000e88:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000e8c:	4601      	movne	r1, r0
 8000e8e:	0242      	lsls	r2, r0, #9
 8000e90:	bf06      	itte	eq
 8000e92:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000e96:	ea90 0f01 	teqeq	r0, r1
 8000e9a:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000e9e:	4770      	bx	lr

08000ea0 <__aeabi_ui2f>:
 8000ea0:	f04f 0300 	mov.w	r3, #0
 8000ea4:	e004      	b.n	8000eb0 <__aeabi_i2f+0x8>
 8000ea6:	bf00      	nop

08000ea8 <__aeabi_i2f>:
 8000ea8:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000eac:	bf48      	it	mi
 8000eae:	4240      	negmi	r0, r0
 8000eb0:	ea5f 0c00 	movs.w	ip, r0
 8000eb4:	bf08      	it	eq
 8000eb6:	4770      	bxeq	lr
 8000eb8:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000ebc:	4601      	mov	r1, r0
 8000ebe:	f04f 0000 	mov.w	r0, #0
 8000ec2:	e01c      	b.n	8000efe <__aeabi_l2f+0x2a>

08000ec4 <__aeabi_ul2f>:
 8000ec4:	ea50 0201 	orrs.w	r2, r0, r1
 8000ec8:	bf08      	it	eq
 8000eca:	4770      	bxeq	lr
 8000ecc:	f04f 0300 	mov.w	r3, #0
 8000ed0:	e00a      	b.n	8000ee8 <__aeabi_l2f+0x14>
 8000ed2:	bf00      	nop

08000ed4 <__aeabi_l2f>:
 8000ed4:	ea50 0201 	orrs.w	r2, r0, r1
 8000ed8:	bf08      	it	eq
 8000eda:	4770      	bxeq	lr
 8000edc:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000ee0:	d502      	bpl.n	8000ee8 <__aeabi_l2f+0x14>
 8000ee2:	4240      	negs	r0, r0
 8000ee4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ee8:	ea5f 0c01 	movs.w	ip, r1
 8000eec:	bf02      	ittt	eq
 8000eee:	4684      	moveq	ip, r0
 8000ef0:	4601      	moveq	r1, r0
 8000ef2:	2000      	moveq	r0, #0
 8000ef4:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000ef8:	bf08      	it	eq
 8000efa:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000efe:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000f02:	fabc f28c 	clz	r2, ip
 8000f06:	3a08      	subs	r2, #8
 8000f08:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000f0c:	db10      	blt.n	8000f30 <__aeabi_l2f+0x5c>
 8000f0e:	fa01 fc02 	lsl.w	ip, r1, r2
 8000f12:	4463      	add	r3, ip
 8000f14:	fa00 fc02 	lsl.w	ip, r0, r2
 8000f18:	f1c2 0220 	rsb	r2, r2, #32
 8000f1c:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000f20:	fa20 f202 	lsr.w	r2, r0, r2
 8000f24:	eb43 0002 	adc.w	r0, r3, r2
 8000f28:	bf08      	it	eq
 8000f2a:	f020 0001 	biceq.w	r0, r0, #1
 8000f2e:	4770      	bx	lr
 8000f30:	f102 0220 	add.w	r2, r2, #32
 8000f34:	fa01 fc02 	lsl.w	ip, r1, r2
 8000f38:	f1c2 0220 	rsb	r2, r2, #32
 8000f3c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000f40:	fa21 f202 	lsr.w	r2, r1, r2
 8000f44:	eb43 0002 	adc.w	r0, r3, r2
 8000f48:	bf08      	it	eq
 8000f4a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000f4e:	4770      	bx	lr

08000f50 <finished_transmission>:
#endif



// Optional visual delay after transmission
void finished_transmission(uint32_t bytes_sent) {
 8000f50:	b480      	push	{r7}
 8000f52:	b085      	sub	sp, #20
 8000f54:	af00      	add	r7, sp, #0
 8000f56:	6078      	str	r0, [r7, #4]
    for (volatile uint32_t i = 0; i < 0x3ffff; i++) { }
 8000f58:	2300      	movs	r3, #0
 8000f5a:	60fb      	str	r3, [r7, #12]
 8000f5c:	e002      	b.n	8000f64 <finished_transmission+0x14>
 8000f5e:	68fb      	ldr	r3, [r7, #12]
 8000f60:	3301      	adds	r3, #1
 8000f62:	60fb      	str	r3, [r7, #12]
 8000f64:	68fb      	ldr	r3, [r7, #12]
 8000f66:	4a04      	ldr	r2, [pc, #16]	@ (8000f78 <finished_transmission+0x28>)
 8000f68:	4293      	cmp	r3, r2
 8000f6a:	d9f8      	bls.n	8000f5e <finished_transmission+0xe>
}
 8000f6c:	bf00      	nop
 8000f6e:	bf00      	nop
 8000f70:	3714      	adds	r7, #20
 8000f72:	46bd      	mov	sp, r7
 8000f74:	bc80      	pop	{r7}
 8000f76:	4770      	bx	lr
 8000f78:	0003fffe 	.word	0x0003fffe

08000f7c <main>:
void ShapeDemo();
int is_start_command(char *input);//  Function to check if input is the command "start"


int main(void)
{
 8000f7c:	b580      	push	{r7, lr}
 8000f7e:	af00      	add	r7, sp, #0
	SerialInitialise(BAUD_115200, &USART1_PORT, &finished_transmission);
 8000f80:	4a04      	ldr	r2, [pc, #16]	@ (8000f94 <main+0x18>)
 8000f82:	4905      	ldr	r1, [pc, #20]	@ (8000f98 <main+0x1c>)
 8000f84:	2004      	movs	r0, #4
 8000f86:	f000 f9f9 	bl	800137c <SerialInitialise>
	setupNVIC();
 8000f8a:	f000 fb85 	bl	8001698 <setupNVIC>

//	/* Loop forever */
	for(;;)
		__WFI();
 8000f8e:	bf30      	wfi
 8000f90:	e7fd      	b.n	8000f8e <main+0x12>
 8000f92:	bf00      	nop
 8000f94:	08000f51 	.word	0x08000f51
 8000f98:	20000004 	.word	0x20000004

08000f9c <ShapeDemo>:
}




void ShapeDemo(void) {
 8000f9c:	b5b0      	push	{r4, r5, r7, lr}
 8000f9e:	b0f4      	sub	sp, #464	@ 0x1d0
 8000fa0:	af00      	add	r7, sp, #0

	struct shape shape_1 = generate_shape(SHAPE_SPHERE, 5, 5);
 8000fa2:	f507 70d6 	add.w	r0, r7, #428	@ 0x1ac
 8000fa6:	2305      	movs	r3, #5
 8000fa8:	2205      	movs	r2, #5
 8000faa:	2100      	movs	r1, #0
 8000fac:	f000 fb83 	bl	80016b6 <generate_shape>

	struct shape shape_array[16];

	uint8_t string_buffer[64];

	shape_string(&shape_1, &string_buffer[0]);
 8000fb0:	f107 0218 	add.w	r2, r7, #24
 8000fb4:	f507 73d6 	add.w	r3, r7, #428	@ 0x1ac
 8000fb8:	4611      	mov	r1, r2
 8000fba:	4618      	mov	r0, r3
 8000fbc:	f000 fbc0 	bl	8001740 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000fc0:	f107 0318 	add.w	r3, r7, #24
 8000fc4:	498c      	ldr	r1, [pc, #560]	@ (80011f8 <ShapeDemo+0x25c>)
 8000fc6:	4618      	mov	r0, r3
 8000fc8:	f000 fa8a 	bl	80014e0 <SerialOutputString>

	shape_string(&shape_2, &string_buffer[0]);
 8000fcc:	f107 0218 	add.w	r2, r7, #24
 8000fd0:	f507 73cc 	add.w	r3, r7, #408	@ 0x198
 8000fd4:	4611      	mov	r1, r2
 8000fd6:	4618      	mov	r0, r3
 8000fd8:	f000 fbb2 	bl	8001740 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 8000fdc:	f107 0318 	add.w	r3, r7, #24
 8000fe0:	4985      	ldr	r1, [pc, #532]	@ (80011f8 <ShapeDemo+0x25c>)
 8000fe2:	4618      	mov	r0, r3
 8000fe4:	f000 fa7c 	bl	80014e0 <SerialOutputString>

	shape_3 = (struct shape*)malloc(sizeof(struct shape));
 8000fe8:	2014      	movs	r0, #20
 8000fea:	f000 ffc3 	bl	8001f74 <malloc>
 8000fee:	4603      	mov	r3, r0
 8000ff0:	f8c7 31c0 	str.w	r3, [r7, #448]	@ 0x1c0
	shape_string(shape_3, &string_buffer[0]);
 8000ff4:	f107 0318 	add.w	r3, r7, #24
 8000ff8:	4619      	mov	r1, r3
 8000ffa:	f8d7 01c0 	ldr.w	r0, [r7, #448]	@ 0x1c0
 8000ffe:	f000 fb9f 	bl	8001740 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 8001002:	f107 0318 	add.w	r3, r7, #24
 8001006:	497c      	ldr	r1, [pc, #496]	@ (80011f8 <ShapeDemo+0x25c>)
 8001008:	4618      	mov	r0, r3
 800100a:	f000 fa69 	bl	80014e0 <SerialOutputString>

	*shape_3 = generate_shape(SHAPE_CONE, 6,3);
 800100e:	f8d7 41c0 	ldr.w	r4, [r7, #448]	@ 0x1c0
 8001012:	4638      	mov	r0, r7
 8001014:	2303      	movs	r3, #3
 8001016:	2206      	movs	r2, #6
 8001018:	2102      	movs	r1, #2
 800101a:	f000 fb4c 	bl	80016b6 <generate_shape>
 800101e:	f507 73e8 	add.w	r3, r7, #464	@ 0x1d0
 8001022:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 8001026:	461d      	mov	r5, r3
 8001028:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800102a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800102c:	682b      	ldr	r3, [r5, #0]
 800102e:	6023      	str	r3, [r4, #0]
	shape_string(shape_3, &string_buffer[0]);
 8001030:	f107 0318 	add.w	r3, r7, #24
 8001034:	4619      	mov	r1, r3
 8001036:	f8d7 01c0 	ldr.w	r0, [r7, #448]	@ 0x1c0
 800103a:	f000 fb81 	bl	8001740 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 800103e:	f107 0318 	add.w	r3, r7, #24
 8001042:	496d      	ldr	r1, [pc, #436]	@ (80011f8 <ShapeDemo+0x25c>)
 8001044:	4618      	mov	r0, r3
 8001046:	f000 fa4b 	bl	80014e0 <SerialOutputString>


	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 800104a:	2300      	movs	r3, #0
 800104c:	f8c7 31cc 	str.w	r3, [r7, #460]	@ 0x1cc
 8001050:	e049      	b.n	80010e6 <ShapeDemo+0x14a>
		if (initialise_shape(&shape_array[counter], counter % 3, 3, 4)) {
 8001052:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8001056:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 800105a:	4613      	mov	r3, r2
 800105c:	009b      	lsls	r3, r3, #2
 800105e:	4413      	add	r3, r2
 8001060:	009b      	lsls	r3, r3, #2
 8001062:	18c8      	adds	r0, r1, r3
 8001064:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 8001068:	4b64      	ldr	r3, [pc, #400]	@ (80011fc <ShapeDemo+0x260>)
 800106a:	fba3 1302 	umull	r1, r3, r3, r2
 800106e:	0859      	lsrs	r1, r3, #1
 8001070:	460b      	mov	r3, r1
 8001072:	005b      	lsls	r3, r3, #1
 8001074:	440b      	add	r3, r1
 8001076:	1ad1      	subs	r1, r2, r3
 8001078:	2304      	movs	r3, #4
 800107a:	2203      	movs	r2, #3
 800107c:	f000 fb3b 	bl	80016f6 <initialise_shape>
 8001080:	4603      	mov	r3, r0
 8001082:	2b00      	cmp	r3, #0
 8001084:	d015      	beq.n	80010b2 <ShapeDemo+0x116>
			shape_string(&shape_array[counter], &string_buffer[0]);
 8001086:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 800108a:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 800108e:	4613      	mov	r3, r2
 8001090:	009b      	lsls	r3, r3, #2
 8001092:	4413      	add	r3, r2
 8001094:	009b      	lsls	r3, r3, #2
 8001096:	440b      	add	r3, r1
 8001098:	f107 0218 	add.w	r2, r7, #24
 800109c:	4611      	mov	r1, r2
 800109e:	4618      	mov	r0, r3
 80010a0:	f000 fb4e 	bl	8001740 <shape_string>
			SerialOutputString(&string_buffer[0], &USART1_PORT);
 80010a4:	f107 0318 	add.w	r3, r7, #24
 80010a8:	4953      	ldr	r1, [pc, #332]	@ (80011f8 <ShapeDemo+0x25c>)
 80010aa:	4618      	mov	r0, r3
 80010ac:	f000 fa18 	bl	80014e0 <SerialOutputString>
 80010b0:	e014      	b.n	80010dc <ShapeDemo+0x140>
		} else {
			shape_string(&shape_array[counter], &string_buffer[0]);
 80010b2:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 80010b6:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 80010ba:	4613      	mov	r3, r2
 80010bc:	009b      	lsls	r3, r3, #2
 80010be:	4413      	add	r3, r2
 80010c0:	009b      	lsls	r3, r3, #2
 80010c2:	440b      	add	r3, r1
 80010c4:	f107 0218 	add.w	r2, r7, #24
 80010c8:	4611      	mov	r1, r2
 80010ca:	4618      	mov	r0, r3
 80010cc:	f000 fb38 	bl	8001740 <shape_string>
			SerialOutputString(&string_buffer[0], &USART1_PORT);
 80010d0:	f107 0318 	add.w	r3, r7, #24
 80010d4:	4948      	ldr	r1, [pc, #288]	@ (80011f8 <ShapeDemo+0x25c>)
 80010d6:	4618      	mov	r0, r3
 80010d8:	f000 fa02 	bl	80014e0 <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 80010dc:	f8d7 31cc 	ldr.w	r3, [r7, #460]	@ 0x1cc
 80010e0:	3301      	adds	r3, #1
 80010e2:	f8c7 31cc 	str.w	r3, [r7, #460]	@ 0x1cc
 80010e6:	2310      	movs	r3, #16
 80010e8:	461a      	mov	r2, r3
 80010ea:	f8d7 31cc 	ldr.w	r3, [r7, #460]	@ 0x1cc
 80010ee:	4293      	cmp	r3, r2
 80010f0:	d3af      	bcc.n	8001052 <ShapeDemo+0xb6>
		}
	}

	// slide the shapes
	sprintf(&string_buffer[0], "\nsliding the shapes by 1.5 units\r");
 80010f2:	f107 0318 	add.w	r3, r7, #24
 80010f6:	4942      	ldr	r1, [pc, #264]	@ (8001200 <ShapeDemo+0x264>)
 80010f8:	4618      	mov	r0, r3
 80010fa:	f001 f97f 	bl	80023fc <siprintf>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 80010fe:	f107 0318 	add.w	r3, r7, #24
 8001102:	493d      	ldr	r1, [pc, #244]	@ (80011f8 <ShapeDemo+0x25c>)
 8001104:	4618      	mov	r0, r3
 8001106:	f000 f9eb 	bl	80014e0 <SerialOutputString>

	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 800110a:	2300      	movs	r3, #0
 800110c:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 8001110:	e027      	b.n	8001162 <ShapeDemo+0x1c6>
		slide_shape(&shape_array[counter], 1.5);
 8001112:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8001116:	f8d7 21c8 	ldr.w	r2, [r7, #456]	@ 0x1c8
 800111a:	4613      	mov	r3, r2
 800111c:	009b      	lsls	r3, r3, #2
 800111e:	4413      	add	r3, r2
 8001120:	009b      	lsls	r3, r3, #2
 8001122:	440b      	add	r3, r1
 8001124:	f04f 517f 	mov.w	r1, #1069547520	@ 0x3fc00000
 8001128:	4618      	mov	r0, r3
 800112a:	f000 f8ce 	bl	80012ca <slide_shape>
		shape_string(&shape_array[counter], &string_buffer[0]);
 800112e:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8001132:	f8d7 21c8 	ldr.w	r2, [r7, #456]	@ 0x1c8
 8001136:	4613      	mov	r3, r2
 8001138:	009b      	lsls	r3, r3, #2
 800113a:	4413      	add	r3, r2
 800113c:	009b      	lsls	r3, r3, #2
 800113e:	440b      	add	r3, r1
 8001140:	f107 0218 	add.w	r2, r7, #24
 8001144:	4611      	mov	r1, r2
 8001146:	4618      	mov	r0, r3
 8001148:	f000 fafa 	bl	8001740 <shape_string>
		SerialOutputString(&string_buffer[0], &USART1_PORT);
 800114c:	f107 0318 	add.w	r3, r7, #24
 8001150:	4929      	ldr	r1, [pc, #164]	@ (80011f8 <ShapeDemo+0x25c>)
 8001152:	4618      	mov	r0, r3
 8001154:	f000 f9c4 	bl	80014e0 <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 8001158:	f8d7 31c8 	ldr.w	r3, [r7, #456]	@ 0x1c8
 800115c:	3301      	adds	r3, #1
 800115e:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 8001162:	2310      	movs	r3, #16
 8001164:	461a      	mov	r2, r3
 8001166:	f8d7 31c8 	ldr.w	r3, [r7, #456]	@ 0x1c8
 800116a:	4293      	cmp	r3, r2
 800116c:	d3d1      	bcc.n	8001112 <ShapeDemo+0x176>
	}

	// roll the shapes
	sprintf(&string_buffer[0], "\nrolling the shapes by 2.5 units\n");
 800116e:	f107 0318 	add.w	r3, r7, #24
 8001172:	4924      	ldr	r1, [pc, #144]	@ (8001204 <ShapeDemo+0x268>)
 8001174:	4618      	mov	r0, r3
 8001176:	f001 f941 	bl	80023fc <siprintf>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 800117a:	f107 0318 	add.w	r3, r7, #24
 800117e:	491e      	ldr	r1, [pc, #120]	@ (80011f8 <ShapeDemo+0x25c>)
 8001180:	4618      	mov	r0, r3
 8001182:	f000 f9ad 	bl	80014e0 <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 8001186:	2300      	movs	r3, #0
 8001188:	f8c7 31c4 	str.w	r3, [r7, #452]	@ 0x1c4
 800118c:	e026      	b.n	80011dc <ShapeDemo+0x240>
		roll_shape(&shape_array[counter], 2.5);
 800118e:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8001192:	f8d7 21c4 	ldr.w	r2, [r7, #452]	@ 0x1c4
 8001196:	4613      	mov	r3, r2
 8001198:	009b      	lsls	r3, r3, #2
 800119a:	4413      	add	r3, r2
 800119c:	009b      	lsls	r3, r3, #2
 800119e:	440b      	add	r3, r1
 80011a0:	4919      	ldr	r1, [pc, #100]	@ (8001208 <ShapeDemo+0x26c>)
 80011a2:	4618      	mov	r0, r3
 80011a4:	f000 f874 	bl	8001290 <roll_shape>
		shape_string(&shape_array[counter], &string_buffer[0]);
 80011a8:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 80011ac:	f8d7 21c4 	ldr.w	r2, [r7, #452]	@ 0x1c4
 80011b0:	4613      	mov	r3, r2
 80011b2:	009b      	lsls	r3, r3, #2
 80011b4:	4413      	add	r3, r2
 80011b6:	009b      	lsls	r3, r3, #2
 80011b8:	440b      	add	r3, r1
 80011ba:	f107 0218 	add.w	r2, r7, #24
 80011be:	4611      	mov	r1, r2
 80011c0:	4618      	mov	r0, r3
 80011c2:	f000 fabd 	bl	8001740 <shape_string>
		SerialOutputString(&string_buffer[0], &USART1_PORT);
 80011c6:	f107 0318 	add.w	r3, r7, #24
 80011ca:	490b      	ldr	r1, [pc, #44]	@ (80011f8 <ShapeDemo+0x25c>)
 80011cc:	4618      	mov	r0, r3
 80011ce:	f000 f987 	bl	80014e0 <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 80011d2:	f8d7 31c4 	ldr.w	r3, [r7, #452]	@ 0x1c4
 80011d6:	3301      	adds	r3, #1
 80011d8:	f8c7 31c4 	str.w	r3, [r7, #452]	@ 0x1c4
 80011dc:	2310      	movs	r3, #16
 80011de:	461a      	mov	r2, r3
 80011e0:	f8d7 31c4 	ldr.w	r3, [r7, #452]	@ 0x1c4
 80011e4:	4293      	cmp	r3, r2
 80011e6:	d3d2      	bcc.n	800118e <ShapeDemo+0x1f2>
	}

	for(;;) {
		SerialOutputString(string_to_send, &USART1_PORT);
 80011e8:	4b08      	ldr	r3, [pc, #32]	@ (800120c <ShapeDemo+0x270>)
 80011ea:	681b      	ldr	r3, [r3, #0]
 80011ec:	4902      	ldr	r1, [pc, #8]	@ (80011f8 <ShapeDemo+0x25c>)
 80011ee:	4618      	mov	r0, r3
 80011f0:	f000 f976 	bl	80014e0 <SerialOutputString>
 80011f4:	e7f8      	b.n	80011e8 <ShapeDemo+0x24c>
 80011f6:	bf00      	nop
 80011f8:	20000004 	.word	0x20000004
 80011fc:	aaaaaaab 	.word	0xaaaaaaab
 8001200:	08004694 	.word	0x08004694
 8001204:	080046b8 	.word	0x080046b8
 8001208:	40200000 	.word	0x40200000
 800120c:	20000000 	.word	0x20000000

08001210 <roll_unit_distance>:
const float SHAPE_SPHERE_MULTIPLIER = 5;
const float SHAPE_CUBE_MULTIPLIER = 1.5;
const float SHAPE_CONE_MULTIPLIER = 0.5;


float roll_unit_distance(struct shape *_shape) {
 8001210:	b580      	push	{r7, lr}
 8001212:	b082      	sub	sp, #8
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]

  if (_shape->type == SHAPE_SPHERE) {
 8001218:	687b      	ldr	r3, [r7, #4]
 800121a:	689b      	ldr	r3, [r3, #8]
 800121c:	2b00      	cmp	r3, #0
 800121e:	d10c      	bne.n	800123a <roll_unit_distance+0x2a>
    // calculations show that one unit of push moves the sphere 5 x the diameter
    return SHAPE_SPHERE_MULTIPLIER * (float)(_shape->dimension_1);
 8001220:	687b      	ldr	r3, [r7, #4]
 8001222:	681b      	ldr	r3, [r3, #0]
 8001224:	4618      	mov	r0, r3
 8001226:	f7ff fe3b 	bl	8000ea0 <__aeabi_ui2f>
 800122a:	4603      	mov	r3, r0
 800122c:	4a17      	ldr	r2, [pc, #92]	@ (800128c <roll_unit_distance+0x7c>)
 800122e:	4611      	mov	r1, r2
 8001230:	4618      	mov	r0, r3
 8001232:	f7ff f837 	bl	80002a4 <__aeabi_fmul>
 8001236:	4603      	mov	r3, r0
 8001238:	e023      	b.n	8001282 <roll_unit_distance+0x72>
  }
  else if (_shape->type == SHAPE_CUBE) {
 800123a:	687b      	ldr	r3, [r7, #4]
 800123c:	689b      	ldr	r3, [r3, #8]
 800123e:	2b01      	cmp	r3, #1
 8001240:	d10d      	bne.n	800125e <roll_unit_distance+0x4e>
    // calculations that one unit of push moves the cube 1.5 x the side length
    return SHAPE_CUBE_MULTIPLIER * (float)(_shape->dimension_1);
 8001242:	687b      	ldr	r3, [r7, #4]
 8001244:	681b      	ldr	r3, [r3, #0]
 8001246:	4618      	mov	r0, r3
 8001248:	f7ff fe2a 	bl	8000ea0 <__aeabi_ui2f>
 800124c:	4603      	mov	r3, r0
 800124e:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 8001252:	4611      	mov	r1, r2
 8001254:	4618      	mov	r0, r3
 8001256:	f7ff f825 	bl	80002a4 <__aeabi_fmul>
 800125a:	4603      	mov	r3, r0
 800125c:	e011      	b.n	8001282 <roll_unit_distance+0x72>
  }
  else if (_shape->type == SHAPE_CONE) {
 800125e:	687b      	ldr	r3, [r7, #4]
 8001260:	689b      	ldr	r3, [r3, #8]
 8001262:	2b02      	cmp	r3, #2
 8001264:	d10d      	bne.n	8001282 <roll_unit_distance+0x72>
    // calculations that one unit of push moves the cube 1.5 x the side length
    return SHAPE_CONE_MULTIPLIER * (float)(_shape->dimension_1);
 8001266:	687b      	ldr	r3, [r7, #4]
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	4618      	mov	r0, r3
 800126c:	f7ff fe18 	bl	8000ea0 <__aeabi_ui2f>
 8001270:	4603      	mov	r3, r0
 8001272:	f04f 527c 	mov.w	r2, #1056964608	@ 0x3f000000
 8001276:	4611      	mov	r1, r2
 8001278:	4618      	mov	r0, r3
 800127a:	f7ff f813 	bl	80002a4 <__aeabi_fmul>
 800127e:	4603      	mov	r3, r0
 8001280:	e7ff      	b.n	8001282 <roll_unit_distance+0x72>
  }
}
 8001282:	4618      	mov	r0, r3
 8001284:	3708      	adds	r7, #8
 8001286:	46bd      	mov	sp, r7
 8001288:	bd80      	pop	{r7, pc}
 800128a:	bf00      	nop
 800128c:	40a00000 	.word	0x40a00000

08001290 <roll_shape>:


void roll_shape(struct shape *_shape, float push_strength) {
 8001290:	b580      	push	{r7, lr}
 8001292:	b082      	sub	sp, #8
 8001294:	af00      	add	r7, sp, #0
 8001296:	6078      	str	r0, [r7, #4]
 8001298:	6039      	str	r1, [r7, #0]
  _shape->location += push_strength * roll_unit_distance(_shape);
 800129a:	6878      	ldr	r0, [r7, #4]
 800129c:	f7ff ffb8 	bl	8001210 <roll_unit_distance>
 80012a0:	4603      	mov	r3, r0
 80012a2:	6839      	ldr	r1, [r7, #0]
 80012a4:	4618      	mov	r0, r3
 80012a6:	f7fe fffd 	bl	80002a4 <__aeabi_fmul>
 80012aa:	4603      	mov	r3, r0
 80012ac:	461a      	mov	r2, r3
 80012ae:	687b      	ldr	r3, [r7, #4]
 80012b0:	68db      	ldr	r3, [r3, #12]
 80012b2:	4619      	mov	r1, r3
 80012b4:	4610      	mov	r0, r2
 80012b6:	f7ff fd43 	bl	8000d40 <__addsf3>
 80012ba:	4603      	mov	r3, r0
 80012bc:	461a      	mov	r2, r3
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	60da      	str	r2, [r3, #12]
}
 80012c2:	bf00      	nop
 80012c4:	3708      	adds	r7, #8
 80012c6:	46bd      	mov	sp, r7
 80012c8:	bd80      	pop	{r7, pc}

080012ca <slide_shape>:


void slide_shape(struct shape *_shape, float push_strength) {
 80012ca:	b580      	push	{r7, lr}
 80012cc:	b082      	sub	sp, #8
 80012ce:	af00      	add	r7, sp, #0
 80012d0:	6078      	str	r0, [r7, #4]
 80012d2:	6039      	str	r1, [r7, #0]
  _shape->location += push_strength;
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	68db      	ldr	r3, [r3, #12]
 80012d8:	6839      	ldr	r1, [r7, #0]
 80012da:	4618      	mov	r0, r3
 80012dc:	f7ff fd30 	bl	8000d40 <__addsf3>
 80012e0:	4603      	mov	r3, r0
 80012e2:	461a      	mov	r2, r3
 80012e4:	687b      	ldr	r3, [r7, #4]
 80012e6:	60da      	str	r2, [r3, #12]
}
 80012e8:	bf00      	nop
 80012ea:	3708      	adds	r7, #8
 80012ec:	46bd      	mov	sp, r7
 80012ee:	bd80      	pop	{r7, pc}

080012f0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80012f0:	b480      	push	{r7}
 80012f2:	b083      	sub	sp, #12
 80012f4:	af00      	add	r7, sp, #0
 80012f6:	4603      	mov	r3, r0
 80012f8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80012fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012fe:	2b00      	cmp	r3, #0
 8001300:	db0b      	blt.n	800131a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001302:	79fb      	ldrb	r3, [r7, #7]
 8001304:	f003 021f 	and.w	r2, r3, #31
 8001308:	4906      	ldr	r1, [pc, #24]	@ (8001324 <__NVIC_EnableIRQ+0x34>)
 800130a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800130e:	095b      	lsrs	r3, r3, #5
 8001310:	2001      	movs	r0, #1
 8001312:	fa00 f202 	lsl.w	r2, r0, r2
 8001316:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800131a:	bf00      	nop
 800131c:	370c      	adds	r7, #12
 800131e:	46bd      	mov	sp, r7
 8001320:	bc80      	pop	{r7}
 8001322:	4770      	bx	lr
 8001324:	e000e100 	.word	0xe000e100

08001328 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001328:	b480      	push	{r7}
 800132a:	b083      	sub	sp, #12
 800132c:	af00      	add	r7, sp, #0
 800132e:	4603      	mov	r3, r0
 8001330:	6039      	str	r1, [r7, #0]
 8001332:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001334:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001338:	2b00      	cmp	r3, #0
 800133a:	db0a      	blt.n	8001352 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800133c:	683b      	ldr	r3, [r7, #0]
 800133e:	b2da      	uxtb	r2, r3
 8001340:	490c      	ldr	r1, [pc, #48]	@ (8001374 <__NVIC_SetPriority+0x4c>)
 8001342:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001346:	0112      	lsls	r2, r2, #4
 8001348:	b2d2      	uxtb	r2, r2
 800134a:	440b      	add	r3, r1
 800134c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001350:	e00a      	b.n	8001368 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001352:	683b      	ldr	r3, [r7, #0]
 8001354:	b2da      	uxtb	r2, r3
 8001356:	4908      	ldr	r1, [pc, #32]	@ (8001378 <__NVIC_SetPriority+0x50>)
 8001358:	79fb      	ldrb	r3, [r7, #7]
 800135a:	f003 030f 	and.w	r3, r3, #15
 800135e:	3b04      	subs	r3, #4
 8001360:	0112      	lsls	r2, r2, #4
 8001362:	b2d2      	uxtb	r2, r2
 8001364:	440b      	add	r3, r1
 8001366:	761a      	strb	r2, [r3, #24]
}
 8001368:	bf00      	nop
 800136a:	370c      	adds	r7, #12
 800136c:	46bd      	mov	sp, r7
 800136e:	bc80      	pop	{r7}
 8001370:	4770      	bx	lr
 8001372:	bf00      	nop
 8001374:	e000e100 	.word	0xe000e100
 8001378:	e000ed00 	.word	0xe000ed00

0800137c <SerialInitialise>:


// InitialiseSerial - Initialise the serial port
// Input: baudRate is from an enumerated set

void SerialInitialise(uint32_t baudRate, SerialPort *serial_port, void (*completion_function)(uint32_t)) {
 800137c:	b480      	push	{r7}
 800137e:	b087      	sub	sp, #28
 8001380:	af00      	add	r7, sp, #0
 8001382:	60f8      	str	r0, [r7, #12]
 8001384:	60b9      	str	r1, [r7, #8]
 8001386:	607a      	str	r2, [r7, #4]

	serial_port->completion_function = completion_function;
 8001388:	68bb      	ldr	r3, [r7, #8]
 800138a:	687a      	ldr	r2, [r7, #4]
 800138c:	625a      	str	r2, [r3, #36]	@ 0x24

	// enable clock power, system configuration clock and GPIOC
	// common to all UARTs
	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 800138e:	4b47      	ldr	r3, [pc, #284]	@ (80014ac <SerialInitialise+0x130>)
 8001390:	69db      	ldr	r3, [r3, #28]
 8001392:	4a46      	ldr	r2, [pc, #280]	@ (80014ac <SerialInitialise+0x130>)
 8001394:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001398:	61d3      	str	r3, [r2, #28]
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 800139a:	4b44      	ldr	r3, [pc, #272]	@ (80014ac <SerialInitialise+0x130>)
 800139c:	699b      	ldr	r3, [r3, #24]
 800139e:	4a43      	ldr	r2, [pc, #268]	@ (80014ac <SerialInitialise+0x130>)
 80013a0:	f043 0301 	orr.w	r3, r3, #1
 80013a4:	6193      	str	r3, [r2, #24]
    RCC->AHBENR  |= RCC_AHBENR_GPIOCEN;    // PC4/PC5
 80013a6:	4b41      	ldr	r3, [pc, #260]	@ (80014ac <SerialInitialise+0x130>)
 80013a8:	695b      	ldr	r3, [r3, #20]
 80013aa:	4a40      	ldr	r2, [pc, #256]	@ (80014ac <SerialInitialise+0x130>)
 80013ac:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80013b0:	6153      	str	r3, [r2, #20]
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;  // USART1
 80013b2:	4b3e      	ldr	r3, [pc, #248]	@ (80014ac <SerialInitialise+0x130>)
 80013b4:	699b      	ldr	r3, [r3, #24]
 80013b6:	4a3d      	ldr	r2, [pc, #244]	@ (80014ac <SerialInitialise+0x130>)
 80013b8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80013bc:	6193      	str	r3, [r2, #24]

	// enable the GPIO which is on the AHB bus
	RCC->AHBENR |= serial_port->MaskAHBENR;
 80013be:	68bb      	ldr	r3, [r7, #8]
 80013c0:	691a      	ldr	r2, [r3, #16]
 80013c2:	4b3a      	ldr	r3, [pc, #232]	@ (80014ac <SerialInitialise+0x130>)
 80013c4:	695b      	ldr	r3, [r3, #20]
 80013c6:	4939      	ldr	r1, [pc, #228]	@ (80014ac <SerialInitialise+0x130>)
 80013c8:	4313      	orrs	r3, r2
 80013ca:	614b      	str	r3, [r1, #20]

	// set pin mode to alternate function for the specific GPIO pins
	serial_port->GPIO->MODER = serial_port->SerialPinModeValue;
 80013cc:	68bb      	ldr	r3, [r7, #8]
 80013ce:	685b      	ldr	r3, [r3, #4]
 80013d0:	68ba      	ldr	r2, [r7, #8]
 80013d2:	6952      	ldr	r2, [r2, #20]
 80013d4:	601a      	str	r2, [r3, #0]

	// enable high speed clock for specific GPIO pins
	serial_port->GPIO->OSPEEDR = serial_port->SerialPinSpeedValue;
 80013d6:	68bb      	ldr	r3, [r7, #8]
 80013d8:	685b      	ldr	r3, [r3, #4]
 80013da:	68ba      	ldr	r2, [r7, #8]
 80013dc:	6992      	ldr	r2, [r2, #24]
 80013de:	609a      	str	r2, [r3, #8]

	// set alternate function to enable USART to external pins
	serial_port->GPIO->AFR[0] |= serial_port->SerialPinAlternatePinValueLow;
 80013e0:	68bb      	ldr	r3, [r7, #8]
 80013e2:	69d9      	ldr	r1, [r3, #28]
 80013e4:	68bb      	ldr	r3, [r7, #8]
 80013e6:	685b      	ldr	r3, [r3, #4]
 80013e8:	6a1a      	ldr	r2, [r3, #32]
 80013ea:	68bb      	ldr	r3, [r7, #8]
 80013ec:	685b      	ldr	r3, [r3, #4]
 80013ee:	430a      	orrs	r2, r1
 80013f0:	621a      	str	r2, [r3, #32]
	serial_port->GPIO->AFR[1] |= serial_port->SerialPinAlternatePinValueHigh;
 80013f2:	68bb      	ldr	r3, [r7, #8]
 80013f4:	6a19      	ldr	r1, [r3, #32]
 80013f6:	68bb      	ldr	r3, [r7, #8]
 80013f8:	685b      	ldr	r3, [r3, #4]
 80013fa:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80013fc:	68bb      	ldr	r3, [r7, #8]
 80013fe:	685b      	ldr	r3, [r3, #4]
 8001400:	430a      	orrs	r2, r1
 8001402:	625a      	str	r2, [r3, #36]	@ 0x24

	serial_port->UART->CR1 |= USART_CR1_RXNEIE; // RX not empty interrupt
 8001404:	68bb      	ldr	r3, [r7, #8]
 8001406:	681b      	ldr	r3, [r3, #0]
 8001408:	681a      	ldr	r2, [r3, #0]
 800140a:	68bb      	ldr	r3, [r7, #8]
 800140c:	681b      	ldr	r3, [r3, #0]
 800140e:	f042 0220 	orr.w	r2, r2, #32
 8001412:	601a      	str	r2, [r3, #0]
	serial_port->UART->CR1 |= USART_CR1_TXEIE;  // TX empty interrupt (optional)
 8001414:	68bb      	ldr	r3, [r7, #8]
 8001416:	681b      	ldr	r3, [r3, #0]
 8001418:	681a      	ldr	r2, [r3, #0]
 800141a:	68bb      	ldr	r3, [r7, #8]
 800141c:	681b      	ldr	r3, [r3, #0]
 800141e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001422:	601a      	str	r2, [r3, #0]

	// enable the device based on the bits defined in the serial port definition
	RCC->APB1ENR |= serial_port->MaskAPB1ENR;
 8001424:	68bb      	ldr	r3, [r7, #8]
 8001426:	68da      	ldr	r2, [r3, #12]
 8001428:	4b20      	ldr	r3, [pc, #128]	@ (80014ac <SerialInitialise+0x130>)
 800142a:	69db      	ldr	r3, [r3, #28]
 800142c:	491f      	ldr	r1, [pc, #124]	@ (80014ac <SerialInitialise+0x130>)
 800142e:	4313      	orrs	r3, r2
 8001430:	61cb      	str	r3, [r1, #28]
	RCC->APB2ENR |= serial_port->MaskAPB2ENR;
 8001432:	68bb      	ldr	r3, [r7, #8]
 8001434:	689a      	ldr	r2, [r3, #8]
 8001436:	4b1d      	ldr	r3, [pc, #116]	@ (80014ac <SerialInitialise+0x130>)
 8001438:	699b      	ldr	r3, [r3, #24]
 800143a:	491c      	ldr	r1, [pc, #112]	@ (80014ac <SerialInitialise+0x130>)
 800143c:	4313      	orrs	r3, r2
 800143e:	618b      	str	r3, [r1, #24]

	// Get a pointer to the 16 bits of the BRR register that we want to change
	uint16_t *baud_rate_config = (uint16_t*)&serial_port->UART->BRR; // only 16 bits used!
 8001440:	68bb      	ldr	r3, [r7, #8]
 8001442:	681b      	ldr	r3, [r3, #0]
 8001444:	330c      	adds	r3, #12
 8001446:	617b      	str	r3, [r7, #20]

	// Baud rate calculation from datasheet
	switch(baudRate){
 8001448:	68fb      	ldr	r3, [r7, #12]
 800144a:	2b04      	cmp	r3, #4
 800144c:	d820      	bhi.n	8001490 <SerialInitialise+0x114>
 800144e:	a201      	add	r2, pc, #4	@ (adr r2, 8001454 <SerialInitialise+0xd8>)
 8001450:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001454:	08001469 	.word	0x08001469
 8001458:	08001471 	.word	0x08001471
 800145c:	08001479 	.word	0x08001479
 8001460:	08001481 	.word	0x08001481
 8001464:	08001489 	.word	0x08001489
	case BAUD_9600:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 8001468:	697b      	ldr	r3, [r7, #20]
 800146a:	2246      	movs	r2, #70	@ 0x46
 800146c:	801a      	strh	r2, [r3, #0]
		break;
 800146e:	e00f      	b.n	8001490 <SerialInitialise+0x114>
	case BAUD_19200:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 8001470:	697b      	ldr	r3, [r7, #20]
 8001472:	2246      	movs	r2, #70	@ 0x46
 8001474:	801a      	strh	r2, [r3, #0]
		break;
 8001476:	e00b      	b.n	8001490 <SerialInitialise+0x114>
	case BAUD_38400:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 8001478:	697b      	ldr	r3, [r7, #20]
 800147a:	2246      	movs	r2, #70	@ 0x46
 800147c:	801a      	strh	r2, [r3, #0]
		break;
 800147e:	e007      	b.n	8001490 <SerialInitialise+0x114>
	case BAUD_57600:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 8001480:	697b      	ldr	r3, [r7, #20]
 8001482:	2246      	movs	r2, #70	@ 0x46
 8001484:	801a      	strh	r2, [r3, #0]
		break;
 8001486:	e003      	b.n	8001490 <SerialInitialise+0x114>
	case BAUD_115200:
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 8001488:	697b      	ldr	r3, [r7, #20]
 800148a:	2246      	movs	r2, #70	@ 0x46
 800148c:	801a      	strh	r2, [r3, #0]
		break;
 800148e:	bf00      	nop
	}


	// enable serial port for tx and rx
	serial_port->UART->CR1 |= USART_CR1_TE | USART_CR1_RE | USART_CR1_UE;
 8001490:	68bb      	ldr	r3, [r7, #8]
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	681a      	ldr	r2, [r3, #0]
 8001496:	68bb      	ldr	r3, [r7, #8]
 8001498:	681b      	ldr	r3, [r3, #0]
 800149a:	f042 020d 	orr.w	r2, r2, #13
 800149e:	601a      	str	r2, [r3, #0]
}
 80014a0:	bf00      	nop
 80014a2:	371c      	adds	r7, #28
 80014a4:	46bd      	mov	sp, r7
 80014a6:	bc80      	pop	{r7}
 80014a8:	4770      	bx	lr
 80014aa:	bf00      	nop
 80014ac:	40021000 	.word	0x40021000

080014b0 <SerialOutputChar>:


void SerialOutputChar(uint8_t data, SerialPort *serial_port) {
 80014b0:	b480      	push	{r7}
 80014b2:	b083      	sub	sp, #12
 80014b4:	af00      	add	r7, sp, #0
 80014b6:	4603      	mov	r3, r0
 80014b8:	6039      	str	r1, [r7, #0]
 80014ba:	71fb      	strb	r3, [r7, #7]

	while((serial_port->UART->ISR & USART_ISR_TXE) == 0){
 80014bc:	bf00      	nop
 80014be:	683b      	ldr	r3, [r7, #0]
 80014c0:	681b      	ldr	r3, [r3, #0]
 80014c2:	69db      	ldr	r3, [r3, #28]
 80014c4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d0f8      	beq.n	80014be <SerialOutputChar+0xe>
	}

	serial_port->UART->TDR = data;
 80014cc:	683b      	ldr	r3, [r7, #0]
 80014ce:	681b      	ldr	r3, [r3, #0]
 80014d0:	79fa      	ldrb	r2, [r7, #7]
 80014d2:	b292      	uxth	r2, r2
 80014d4:	851a      	strh	r2, [r3, #40]	@ 0x28
}
 80014d6:	bf00      	nop
 80014d8:	370c      	adds	r7, #12
 80014da:	46bd      	mov	sp, r7
 80014dc:	bc80      	pop	{r7}
 80014de:	4770      	bx	lr

080014e0 <SerialOutputString>:



void SerialOutputString(uint8_t *pt, SerialPort *serial_port) {
 80014e0:	b580      	push	{r7, lr}
 80014e2:	b084      	sub	sp, #16
 80014e4:	af00      	add	r7, sp, #0
 80014e6:	6078      	str	r0, [r7, #4]
 80014e8:	6039      	str	r1, [r7, #0]

	uint32_t counter = 0;
 80014ea:	2300      	movs	r3, #0
 80014ec:	60fb      	str	r3, [r7, #12]
	while(*pt) {
 80014ee:	e00b      	b.n	8001508 <SerialOutputString+0x28>
		SerialOutputChar(*pt, serial_port);
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	781b      	ldrb	r3, [r3, #0]
 80014f4:	6839      	ldr	r1, [r7, #0]
 80014f6:	4618      	mov	r0, r3
 80014f8:	f7ff ffda 	bl	80014b0 <SerialOutputChar>
		counter++;
 80014fc:	68fb      	ldr	r3, [r7, #12]
 80014fe:	3301      	adds	r3, #1
 8001500:	60fb      	str	r3, [r7, #12]
		pt++;
 8001502:	687b      	ldr	r3, [r7, #4]
 8001504:	3301      	adds	r3, #1
 8001506:	607b      	str	r3, [r7, #4]
	while(*pt) {
 8001508:	687b      	ldr	r3, [r7, #4]
 800150a:	781b      	ldrb	r3, [r3, #0]
 800150c:	2b00      	cmp	r3, #0
 800150e:	d1ef      	bne.n	80014f0 <SerialOutputString+0x10>
	}

	serial_port->completion_function(counter);
 8001510:	683b      	ldr	r3, [r7, #0]
 8001512:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001514:	68f8      	ldr	r0, [r7, #12]
 8001516:	4798      	blx	r3
}
 8001518:	bf00      	nop
 800151a:	3710      	adds	r7, #16
 800151c:	46bd      	mov	sp, r7
 800151e:	bd80      	pop	{r7, pc}

08001520 <SerialInputAvailable>:

int SerialInputAvailable(SerialPort *serial_port) {
 8001520:	b480      	push	{r7}
 8001522:	b083      	sub	sp, #12
 8001524:	af00      	add	r7, sp, #0
 8001526:	6078      	str	r0, [r7, #4]
    return (serial_port->UART->ISR & USART_ISR_RXNE);
 8001528:	687b      	ldr	r3, [r7, #4]
 800152a:	681b      	ldr	r3, [r3, #0]
 800152c:	69db      	ldr	r3, [r3, #28]
 800152e:	f003 0320 	and.w	r3, r3, #32
}
 8001532:	4618      	mov	r0, r3
 8001534:	370c      	adds	r7, #12
 8001536:	46bd      	mov	sp, r7
 8001538:	bc80      	pop	{r7}
 800153a:	4770      	bx	lr

0800153c <SerialReadChar>:

uint8_t SerialReadChar(SerialPort *serial_port) {
 800153c:	b480      	push	{r7}
 800153e:	b083      	sub	sp, #12
 8001540:	af00      	add	r7, sp, #0
 8001542:	6078      	str	r0, [r7, #4]
    return serial_port->UART->RDR;
 8001544:	687b      	ldr	r3, [r7, #4]
 8001546:	681b      	ldr	r3, [r3, #0]
 8001548:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800154a:	b29b      	uxth	r3, r3
 800154c:	b2db      	uxtb	r3, r3
}
 800154e:	4618      	mov	r0, r3
 8001550:	370c      	adds	r7, #12
 8001552:	46bd      	mov	sp, r7
 8001554:	bc80      	pop	{r7}
 8001556:	4770      	bx	lr

08001558 <is_start_command>:

//  Function to check if input is the command "start"
int is_start_command(const uint8_t *input) {
 8001558:	b580      	push	{r7, lr}
 800155a:	b082      	sub	sp, #8
 800155c:	af00      	add	r7, sp, #0
 800155e:	6078      	str	r0, [r7, #4]
    return strcmp((const char *)input, "start") == 0;
 8001560:	4906      	ldr	r1, [pc, #24]	@ (800157c <is_start_command+0x24>)
 8001562:	6878      	ldr	r0, [r7, #4]
 8001564:	f7fe fe94 	bl	8000290 <strcmp>
 8001568:	4603      	mov	r3, r0
 800156a:	2b00      	cmp	r3, #0
 800156c:	bf0c      	ite	eq
 800156e:	2301      	moveq	r3, #1
 8001570:	2300      	movne	r3, #0
 8001572:	b2db      	uxtb	r3, r3
}
 8001574:	4618      	mov	r0, r3
 8001576:	3708      	adds	r7, #8
 8001578:	46bd      	mov	sp, r7
 800157a:	bd80      	pop	{r7, pc}
 800157c:	080046dc 	.word	0x080046dc

08001580 <USART1_EXTI25_IRQHandler>:

volatile uint8_t input_received_flag = 0;
volatile uint8_t received_string[MAX_BUFFER_LENGTH];
volatile uint32_t string_index = 0;

void USART1_EXTI25_IRQHandler(void) {
 8001580:	b5b0      	push	{r4, r5, r7, lr}
 8001582:	b08c      	sub	sp, #48	@ 0x30
 8001584:	af00      	add	r7, sp, #0

	// Check for overrun or frame errors
	if ((USART1->ISR & USART_ISR_FE_Msk) && (USART1->ISR & USART_ISR_ORE_Msk)) {
 8001586:	4b3e      	ldr	r3, [pc, #248]	@ (8001680 <USART1_EXTI25_IRQHandler+0x100>)
 8001588:	69db      	ldr	r3, [r3, #28]
 800158a:	f003 0302 	and.w	r3, r3, #2
 800158e:	2b00      	cmp	r3, #0
 8001590:	d005      	beq.n	800159e <USART1_EXTI25_IRQHandler+0x1e>
 8001592:	4b3b      	ldr	r3, [pc, #236]	@ (8001680 <USART1_EXTI25_IRQHandler+0x100>)
 8001594:	69db      	ldr	r3, [r3, #28]
 8001596:	f003 0308 	and.w	r3, r3, #8
 800159a:	2b00      	cmp	r3, #0
 800159c:	d16c      	bne.n	8001678 <USART1_EXTI25_IRQHandler+0xf8>
		return;
	}

	if (USART1->ISR & USART_ISR_RXNE) {
 800159e:	4b38      	ldr	r3, [pc, #224]	@ (8001680 <USART1_EXTI25_IRQHandler+0x100>)
 80015a0:	69db      	ldr	r3, [r3, #28]
 80015a2:	f003 0320 	and.w	r3, r3, #32
 80015a6:	2b00      	cmp	r3, #0
 80015a8:	d02e      	beq.n	8001608 <USART1_EXTI25_IRQHandler+0x88>
		while (SerialInputAvailable(&USART1_PORT)) {
 80015aa:	e027      	b.n	80015fc <USART1_EXTI25_IRQHandler+0x7c>
		    uint8_t c = SerialReadChar(&USART1_PORT);
 80015ac:	4835      	ldr	r0, [pc, #212]	@ (8001684 <USART1_EXTI25_IRQHandler+0x104>)
 80015ae:	f7ff ffc5 	bl	800153c <SerialReadChar>
 80015b2:	4603      	mov	r3, r0
 80015b4:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
		    if (string_index < MAX_BUFFER_LENGTH - 1) {
 80015b8:	4b33      	ldr	r3, [pc, #204]	@ (8001688 <USART1_EXTI25_IRQHandler+0x108>)
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	2b62      	cmp	r3, #98	@ 0x62
 80015be:	d81a      	bhi.n	80015f6 <USART1_EXTI25_IRQHandler+0x76>
		        received_string[string_index++] = c;
 80015c0:	4b31      	ldr	r3, [pc, #196]	@ (8001688 <USART1_EXTI25_IRQHandler+0x108>)
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	1c5a      	adds	r2, r3, #1
 80015c6:	4930      	ldr	r1, [pc, #192]	@ (8001688 <USART1_EXTI25_IRQHandler+0x108>)
 80015c8:	600a      	str	r2, [r1, #0]
 80015ca:	4930      	ldr	r1, [pc, #192]	@ (800168c <USART1_EXTI25_IRQHandler+0x10c>)
 80015cc:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 80015d0:	54ca      	strb	r2, [r1, r3]
		        if (c == '\n' || c == '\r') {
 80015d2:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 80015d6:	2b0a      	cmp	r3, #10
 80015d8:	d003      	beq.n	80015e2 <USART1_EXTI25_IRQHandler+0x62>
 80015da:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 80015de:	2b0d      	cmp	r3, #13
 80015e0:	d10c      	bne.n	80015fc <USART1_EXTI25_IRQHandler+0x7c>
		            received_string[string_index - 1] = '\0'; // null-terminate
 80015e2:	4b29      	ldr	r3, [pc, #164]	@ (8001688 <USART1_EXTI25_IRQHandler+0x108>)
 80015e4:	681b      	ldr	r3, [r3, #0]
 80015e6:	3b01      	subs	r3, #1
 80015e8:	4a28      	ldr	r2, [pc, #160]	@ (800168c <USART1_EXTI25_IRQHandler+0x10c>)
 80015ea:	2100      	movs	r1, #0
 80015ec:	54d1      	strb	r1, [r2, r3]
		            input_received_flag = 1;
 80015ee:	4b28      	ldr	r3, [pc, #160]	@ (8001690 <USART1_EXTI25_IRQHandler+0x110>)
 80015f0:	2201      	movs	r2, #1
 80015f2:	701a      	strb	r2, [r3, #0]
 80015f4:	e002      	b.n	80015fc <USART1_EXTI25_IRQHandler+0x7c>
		        }
		    }
		    else {
		        string_index = 0;
 80015f6:	4b24      	ldr	r3, [pc, #144]	@ (8001688 <USART1_EXTI25_IRQHandler+0x108>)
 80015f8:	2200      	movs	r2, #0
 80015fa:	601a      	str	r2, [r3, #0]
		while (SerialInputAvailable(&USART1_PORT)) {
 80015fc:	4821      	ldr	r0, [pc, #132]	@ (8001684 <USART1_EXTI25_IRQHandler+0x104>)
 80015fe:	f7ff ff8f 	bl	8001520 <SerialInputAvailable>
 8001602:	4603      	mov	r3, r0
 8001604:	2b00      	cmp	r3, #0
 8001606:	d1d1      	bne.n	80015ac <USART1_EXTI25_IRQHandler+0x2c>
		    }
		}
	}

		if (input_received_flag == 1) {
 8001608:	4b21      	ldr	r3, [pc, #132]	@ (8001690 <USART1_EXTI25_IRQHandler+0x110>)
 800160a:	781b      	ldrb	r3, [r3, #0]
 800160c:	b2db      	uxtb	r3, r3
 800160e:	2b01      	cmp	r3, #1
 8001610:	d133      	bne.n	800167a <USART1_EXTI25_IRQHandler+0xfa>
		    SerialOutputString((uint8_t *)received_string, &USART1_PORT);
 8001612:	491c      	ldr	r1, [pc, #112]	@ (8001684 <USART1_EXTI25_IRQHandler+0x104>)
 8001614:	481d      	ldr	r0, [pc, #116]	@ (800168c <USART1_EXTI25_IRQHandler+0x10c>)
 8001616:	f7ff ff63 	bl	80014e0 <SerialOutputString>
		    //  Check if the command is "start" // if not - restart the while loop
		    if (is_start_command(received_string) == 1) {
 800161a:	481c      	ldr	r0, [pc, #112]	@ (800168c <USART1_EXTI25_IRQHandler+0x10c>)
 800161c:	f7ff ff9c 	bl	8001558 <is_start_command>
 8001620:	4603      	mov	r3, r0
 8001622:	2b01      	cmp	r3, #1
 8001624:	d113      	bne.n	800164e <USART1_EXTI25_IRQHandler+0xce>
		        uint8_t response[] = "\n--SECRET-- Command START received.\n";
 8001626:	4b1b      	ldr	r3, [pc, #108]	@ (8001694 <USART1_EXTI25_IRQHandler+0x114>)
 8001628:	1d3c      	adds	r4, r7, #4
 800162a:	461d      	mov	r5, r3
 800162c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800162e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001630:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001632:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001634:	e895 0003 	ldmia.w	r5, {r0, r1}
 8001638:	6020      	str	r0, [r4, #0]
 800163a:	3404      	adds	r4, #4
 800163c:	7021      	strb	r1, [r4, #0]
		        SerialOutputString(response, &USART1_PORT);
 800163e:	1d3b      	adds	r3, r7, #4
 8001640:	4910      	ldr	r1, [pc, #64]	@ (8001684 <USART1_EXTI25_IRQHandler+0x104>)
 8001642:	4618      	mov	r0, r3
 8001644:	f7ff ff4c 	bl	80014e0 <SerialOutputString>
		        ShapeDemo();
 8001648:	f7ff fca8 	bl	8000f9c <ShapeDemo>
 800164c:	e015      	b.n	800167a <USART1_EXTI25_IRQHandler+0xfa>
		        return;
		    }
		    // Reset
		    string_index = 0;
 800164e:	4b0e      	ldr	r3, [pc, #56]	@ (8001688 <USART1_EXTI25_IRQHandler+0x108>)
 8001650:	2200      	movs	r2, #0
 8001652:	601a      	str	r2, [r3, #0]
		    input_received_flag = 0;
 8001654:	4b0e      	ldr	r3, [pc, #56]	@ (8001690 <USART1_EXTI25_IRQHandler+0x110>)
 8001656:	2200      	movs	r2, #0
 8001658:	701a      	strb	r2, [r3, #0]

		    for (uint32_t i = 0; i < MAX_BUFFER_LENGTH; i++) {
 800165a:	2300      	movs	r3, #0
 800165c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800165e:	e007      	b.n	8001670 <USART1_EXTI25_IRQHandler+0xf0>
		        received_string[i] = 0;
 8001660:	4a0a      	ldr	r2, [pc, #40]	@ (800168c <USART1_EXTI25_IRQHandler+0x10c>)
 8001662:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001664:	4413      	add	r3, r2
 8001666:	2200      	movs	r2, #0
 8001668:	701a      	strb	r2, [r3, #0]
		    for (uint32_t i = 0; i < MAX_BUFFER_LENGTH; i++) {
 800166a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800166c:	3301      	adds	r3, #1
 800166e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001670:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001672:	2b63      	cmp	r3, #99	@ 0x63
 8001674:	d9f4      	bls.n	8001660 <USART1_EXTI25_IRQHandler+0xe0>
 8001676:	e000      	b.n	800167a <USART1_EXTI25_IRQHandler+0xfa>
		return;
 8001678:	bf00      	nop
		    }
		}
	}
 800167a:	3730      	adds	r7, #48	@ 0x30
 800167c:	46bd      	mov	sp, r7
 800167e:	bdb0      	pop	{r4, r5, r7, pc}
 8001680:	40013800 	.word	0x40013800
 8001684:	20000004 	.word	0x20000004
 8001688:	20000278 	.word	0x20000278
 800168c:	20000214 	.word	0x20000214
 8001690:	20000210 	.word	0x20000210
 8001694:	080046e4 	.word	0x080046e4

08001698 <setupNVIC>:

void setupNVIC(void)
{
 8001698:	b580      	push	{r7, lr}
 800169a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800169c:	b672      	cpsid	i
}
 800169e:	bf00      	nop
    __disable_irq();
    NVIC_SetPriority(USART1_IRQn, 1);
 80016a0:	2101      	movs	r1, #1
 80016a2:	2025      	movs	r0, #37	@ 0x25
 80016a4:	f7ff fe40 	bl	8001328 <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART1_IRQn);
 80016a8:	2025      	movs	r0, #37	@ 0x25
 80016aa:	f7ff fe21 	bl	80012f0 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 80016ae:	b662      	cpsie	i
}
 80016b0:	bf00      	nop
    __enable_irq();
}
 80016b2:	bf00      	nop
 80016b4:	bd80      	pop	{r7, pc}

080016b6 <generate_shape>:
#include "shape.h"

#include <stdio.h>


struct shape generate_shape(uint32_t type, uint32_t dimension_1, uint32_t dimension_2) {
 80016b6:	b4b0      	push	{r4, r5, r7}
 80016b8:	b08b      	sub	sp, #44	@ 0x2c
 80016ba:	af00      	add	r7, sp, #0
 80016bc:	60f8      	str	r0, [r7, #12]
 80016be:	60b9      	str	r1, [r7, #8]
 80016c0:	607a      	str	r2, [r7, #4]
 80016c2:	603b      	str	r3, [r7, #0]

  struct shape new_shape;

  new_shape.type = type;
 80016c4:	68bb      	ldr	r3, [r7, #8]
 80016c6:	61fb      	str	r3, [r7, #28]
  new_shape.dimension_1 = dimension_1;
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	617b      	str	r3, [r7, #20]
  new_shape.dimension_2 = dimension_2;
 80016cc:	683b      	ldr	r3, [r7, #0]
 80016ce:	61bb      	str	r3, [r7, #24]
  new_shape.location = 0.;
 80016d0:	f04f 0300 	mov.w	r3, #0
 80016d4:	623b      	str	r3, [r7, #32]
  new_shape.is_initialised = true;
 80016d6:	2301      	movs	r3, #1
 80016d8:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24

  return new_shape;
 80016dc:	68fb      	ldr	r3, [r7, #12]
 80016de:	461d      	mov	r5, r3
 80016e0:	f107 0414 	add.w	r4, r7, #20
 80016e4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80016e6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80016e8:	6823      	ldr	r3, [r4, #0]
 80016ea:	602b      	str	r3, [r5, #0]
}
 80016ec:	68f8      	ldr	r0, [r7, #12]
 80016ee:	372c      	adds	r7, #44	@ 0x2c
 80016f0:	46bd      	mov	sp, r7
 80016f2:	bcb0      	pop	{r4, r5, r7}
 80016f4:	4770      	bx	lr

080016f6 <initialise_shape>:


// returns true for success, false for failure
int initialise_shape(struct shape *_shape, uint32_t type, uint32_t dimension_1, uint32_t dimension_2) {
 80016f6:	b480      	push	{r7}
 80016f8:	b085      	sub	sp, #20
 80016fa:	af00      	add	r7, sp, #0
 80016fc:	60f8      	str	r0, [r7, #12]
 80016fe:	60b9      	str	r1, [r7, #8]
 8001700:	607a      	str	r2, [r7, #4]
 8001702:	603b      	str	r3, [r7, #0]

  if (dimension_1 <= 0 || dimension_2 <= 0)
 8001704:	687b      	ldr	r3, [r7, #4]
 8001706:	2b00      	cmp	r3, #0
 8001708:	d002      	beq.n	8001710 <initialise_shape+0x1a>
 800170a:	683b      	ldr	r3, [r7, #0]
 800170c:	2b00      	cmp	r3, #0
 800170e:	d101      	bne.n	8001714 <initialise_shape+0x1e>
    return false;
 8001710:	2300      	movs	r3, #0
 8001712:	e010      	b.n	8001736 <initialise_shape+0x40>

  _shape->type = type;
 8001714:	68fb      	ldr	r3, [r7, #12]
 8001716:	68ba      	ldr	r2, [r7, #8]
 8001718:	609a      	str	r2, [r3, #8]
  _shape->dimension_1 = dimension_1;
 800171a:	68fb      	ldr	r3, [r7, #12]
 800171c:	687a      	ldr	r2, [r7, #4]
 800171e:	601a      	str	r2, [r3, #0]
  _shape->dimension_2 = dimension_2;
 8001720:	68fb      	ldr	r3, [r7, #12]
 8001722:	683a      	ldr	r2, [r7, #0]
 8001724:	605a      	str	r2, [r3, #4]
  _shape->location = 0.;
 8001726:	68fb      	ldr	r3, [r7, #12]
 8001728:	f04f 0200 	mov.w	r2, #0
 800172c:	60da      	str	r2, [r3, #12]
  _shape->is_initialised = true;
 800172e:	68fb      	ldr	r3, [r7, #12]
 8001730:	2201      	movs	r2, #1
 8001732:	741a      	strb	r2, [r3, #16]

  return true;
 8001734:	2301      	movs	r3, #1
}
 8001736:	4618      	mov	r0, r3
 8001738:	3714      	adds	r7, #20
 800173a:	46bd      	mov	sp, r7
 800173c:	bc80      	pop	{r7}
 800173e:	4770      	bx	lr

08001740 <shape_string>:


void shape_string(struct shape *_shape, uint8_t *string) {
 8001740:	b5b0      	push	{r4, r5, r7, lr}
 8001742:	b084      	sub	sp, #16
 8001744:	af02      	add	r7, sp, #8
 8001746:	6078      	str	r0, [r7, #4]
 8001748:	6039      	str	r1, [r7, #0]
  
  switch(_shape->type) {
 800174a:	687b      	ldr	r3, [r7, #4]
 800174c:	689b      	ldr	r3, [r3, #8]
 800174e:	2b02      	cmp	r3, #2
 8001750:	d017      	beq.n	8001782 <shape_string+0x42>
 8001752:	2b02      	cmp	r3, #2
 8001754:	d83a      	bhi.n	80017cc <shape_string+0x8c>
 8001756:	2b00      	cmp	r3, #0
 8001758:	d002      	beq.n	8001760 <shape_string+0x20>
 800175a:	2b01      	cmp	r3, #1
 800175c:	d025      	beq.n	80017aa <shape_string+0x6a>
 800175e:	e035      	b.n	80017cc <shape_string+0x8c>
    case SHAPE_SPHERE:
      sprintf((int8_t*)string, "\nShape is a SPHERE, radius is %lu, location is %.2f \r", _shape->dimension_1, _shape->location);
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	681c      	ldr	r4, [r3, #0]
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	68db      	ldr	r3, [r3, #12]
 8001768:	4618      	mov	r0, r3
 800176a:	f7fe ffb3 	bl	80006d4 <__aeabi_f2d>
 800176e:	4602      	mov	r2, r0
 8001770:	460b      	mov	r3, r1
 8001772:	e9cd 2300 	strd	r2, r3, [sp]
 8001776:	4622      	mov	r2, r4
 8001778:	491f      	ldr	r1, [pc, #124]	@ (80017f8 <shape_string+0xb8>)
 800177a:	6838      	ldr	r0, [r7, #0]
 800177c:	f000 fe3e 	bl	80023fc <siprintf>
      break;
 8001780:	e035      	b.n	80017ee <shape_string+0xae>
    case SHAPE_CONE:
      sprintf((int8_t*)string, "\nShape is a CONE, radius is %lu, height is %lu, location is %.2f \r", _shape->dimension_1, _shape->dimension_2, _shape->location);
 8001782:	687b      	ldr	r3, [r7, #4]
 8001784:	681c      	ldr	r4, [r3, #0]
 8001786:	687b      	ldr	r3, [r7, #4]
 8001788:	685d      	ldr	r5, [r3, #4]
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	68db      	ldr	r3, [r3, #12]
 800178e:	4618      	mov	r0, r3
 8001790:	f7fe ffa0 	bl	80006d4 <__aeabi_f2d>
 8001794:	4602      	mov	r2, r0
 8001796:	460b      	mov	r3, r1
 8001798:	e9cd 2300 	strd	r2, r3, [sp]
 800179c:	462b      	mov	r3, r5
 800179e:	4622      	mov	r2, r4
 80017a0:	4916      	ldr	r1, [pc, #88]	@ (80017fc <shape_string+0xbc>)
 80017a2:	6838      	ldr	r0, [r7, #0]
 80017a4:	f000 fe2a 	bl	80023fc <siprintf>
      break;
 80017a8:	e021      	b.n	80017ee <shape_string+0xae>
    case SHAPE_CUBE:
      sprintf((int8_t*)string, "\nShape is a CUBE, side length is %lu, location is %.2f \r", _shape->dimension_1, _shape->location);
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	681c      	ldr	r4, [r3, #0]
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	68db      	ldr	r3, [r3, #12]
 80017b2:	4618      	mov	r0, r3
 80017b4:	f7fe ff8e 	bl	80006d4 <__aeabi_f2d>
 80017b8:	4602      	mov	r2, r0
 80017ba:	460b      	mov	r3, r1
 80017bc:	e9cd 2300 	strd	r2, r3, [sp]
 80017c0:	4622      	mov	r2, r4
 80017c2:	490f      	ldr	r1, [pc, #60]	@ (8001800 <shape_string+0xc0>)
 80017c4:	6838      	ldr	r0, [r7, #0]
 80017c6:	f000 fe19 	bl	80023fc <siprintf>
      break;
 80017ca:	e010      	b.n	80017ee <shape_string+0xae>
    default:
      sprintf((int8_t*)string, "\nShape is a UNKNOWN, type is %lu, location is %.2f \r", _shape->type, _shape->location);
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	689c      	ldr	r4, [r3, #8]
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	68db      	ldr	r3, [r3, #12]
 80017d4:	4618      	mov	r0, r3
 80017d6:	f7fe ff7d 	bl	80006d4 <__aeabi_f2d>
 80017da:	4602      	mov	r2, r0
 80017dc:	460b      	mov	r3, r1
 80017de:	e9cd 2300 	strd	r2, r3, [sp]
 80017e2:	4622      	mov	r2, r4
 80017e4:	4907      	ldr	r1, [pc, #28]	@ (8001804 <shape_string+0xc4>)
 80017e6:	6838      	ldr	r0, [r7, #0]
 80017e8:	f000 fe08 	bl	80023fc <siprintf>
      break;
 80017ec:	bf00      	nop
    
  }
}
 80017ee:	bf00      	nop
 80017f0:	3708      	adds	r7, #8
 80017f2:	46bd      	mov	sp, r7
 80017f4:	bdb0      	pop	{r4, r5, r7, pc}
 80017f6:	bf00      	nop
 80017f8:	0800470c 	.word	0x0800470c
 80017fc:	08004744 	.word	0x08004744
 8001800:	08004788 	.word	0x08004788
 8001804:	080047c4 	.word	0x080047c4

08001808 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001808:	b480      	push	{r7}
 800180a:	af00      	add	r7, sp, #0
	return 1;
 800180c:	2301      	movs	r3, #1
}
 800180e:	4618      	mov	r0, r3
 8001810:	46bd      	mov	sp, r7
 8001812:	bc80      	pop	{r7}
 8001814:	4770      	bx	lr

08001816 <_kill>:

int _kill(int pid, int sig)
{
 8001816:	b580      	push	{r7, lr}
 8001818:	b082      	sub	sp, #8
 800181a:	af00      	add	r7, sp, #0
 800181c:	6078      	str	r0, [r7, #4]
 800181e:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8001820:	f000 feea 	bl	80025f8 <__errno>
 8001824:	4603      	mov	r3, r0
 8001826:	2216      	movs	r2, #22
 8001828:	601a      	str	r2, [r3, #0]
	return -1;
 800182a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800182e:	4618      	mov	r0, r3
 8001830:	3708      	adds	r7, #8
 8001832:	46bd      	mov	sp, r7
 8001834:	bd80      	pop	{r7, pc}

08001836 <_exit>:

void _exit (int status)
{
 8001836:	b580      	push	{r7, lr}
 8001838:	b082      	sub	sp, #8
 800183a:	af00      	add	r7, sp, #0
 800183c:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800183e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8001842:	6878      	ldr	r0, [r7, #4]
 8001844:	f7ff ffe7 	bl	8001816 <_kill>
	while (1) {}		/* Make sure we hang here */
 8001848:	bf00      	nop
 800184a:	e7fd      	b.n	8001848 <_exit+0x12>

0800184c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800184c:	b580      	push	{r7, lr}
 800184e:	b086      	sub	sp, #24
 8001850:	af00      	add	r7, sp, #0
 8001852:	60f8      	str	r0, [r7, #12]
 8001854:	60b9      	str	r1, [r7, #8]
 8001856:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001858:	2300      	movs	r3, #0
 800185a:	617b      	str	r3, [r7, #20]
 800185c:	e00a      	b.n	8001874 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800185e:	f3af 8000 	nop.w
 8001862:	4601      	mov	r1, r0
 8001864:	68bb      	ldr	r3, [r7, #8]
 8001866:	1c5a      	adds	r2, r3, #1
 8001868:	60ba      	str	r2, [r7, #8]
 800186a:	b2ca      	uxtb	r2, r1
 800186c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800186e:	697b      	ldr	r3, [r7, #20]
 8001870:	3301      	adds	r3, #1
 8001872:	617b      	str	r3, [r7, #20]
 8001874:	697a      	ldr	r2, [r7, #20]
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	429a      	cmp	r2, r3
 800187a:	dbf0      	blt.n	800185e <_read+0x12>
	}

return len;
 800187c:	687b      	ldr	r3, [r7, #4]
}
 800187e:	4618      	mov	r0, r3
 8001880:	3718      	adds	r7, #24
 8001882:	46bd      	mov	sp, r7
 8001884:	bd80      	pop	{r7, pc}

08001886 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001886:	b580      	push	{r7, lr}
 8001888:	b086      	sub	sp, #24
 800188a:	af00      	add	r7, sp, #0
 800188c:	60f8      	str	r0, [r7, #12]
 800188e:	60b9      	str	r1, [r7, #8]
 8001890:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001892:	2300      	movs	r3, #0
 8001894:	617b      	str	r3, [r7, #20]
 8001896:	e009      	b.n	80018ac <_write+0x26>
	{
		__io_putchar(*ptr++);
 8001898:	68bb      	ldr	r3, [r7, #8]
 800189a:	1c5a      	adds	r2, r3, #1
 800189c:	60ba      	str	r2, [r7, #8]
 800189e:	781b      	ldrb	r3, [r3, #0]
 80018a0:	4618      	mov	r0, r3
 80018a2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80018a6:	697b      	ldr	r3, [r7, #20]
 80018a8:	3301      	adds	r3, #1
 80018aa:	617b      	str	r3, [r7, #20]
 80018ac:	697a      	ldr	r2, [r7, #20]
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	429a      	cmp	r2, r3
 80018b2:	dbf1      	blt.n	8001898 <_write+0x12>
	}
	return len;
 80018b4:	687b      	ldr	r3, [r7, #4]
}
 80018b6:	4618      	mov	r0, r3
 80018b8:	3718      	adds	r7, #24
 80018ba:	46bd      	mov	sp, r7
 80018bc:	bd80      	pop	{r7, pc}

080018be <_close>:

int _close(int file)
{
 80018be:	b480      	push	{r7}
 80018c0:	b083      	sub	sp, #12
 80018c2:	af00      	add	r7, sp, #0
 80018c4:	6078      	str	r0, [r7, #4]
	return -1;
 80018c6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80018ca:	4618      	mov	r0, r3
 80018cc:	370c      	adds	r7, #12
 80018ce:	46bd      	mov	sp, r7
 80018d0:	bc80      	pop	{r7}
 80018d2:	4770      	bx	lr

080018d4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80018d4:	b480      	push	{r7}
 80018d6:	b083      	sub	sp, #12
 80018d8:	af00      	add	r7, sp, #0
 80018da:	6078      	str	r0, [r7, #4]
 80018dc:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80018de:	683b      	ldr	r3, [r7, #0]
 80018e0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80018e4:	605a      	str	r2, [r3, #4]
	return 0;
 80018e6:	2300      	movs	r3, #0
}
 80018e8:	4618      	mov	r0, r3
 80018ea:	370c      	adds	r7, #12
 80018ec:	46bd      	mov	sp, r7
 80018ee:	bc80      	pop	{r7}
 80018f0:	4770      	bx	lr

080018f2 <_isatty>:

int _isatty(int file)
{
 80018f2:	b480      	push	{r7}
 80018f4:	b083      	sub	sp, #12
 80018f6:	af00      	add	r7, sp, #0
 80018f8:	6078      	str	r0, [r7, #4]
	return 1;
 80018fa:	2301      	movs	r3, #1
}
 80018fc:	4618      	mov	r0, r3
 80018fe:	370c      	adds	r7, #12
 8001900:	46bd      	mov	sp, r7
 8001902:	bc80      	pop	{r7}
 8001904:	4770      	bx	lr

08001906 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001906:	b480      	push	{r7}
 8001908:	b085      	sub	sp, #20
 800190a:	af00      	add	r7, sp, #0
 800190c:	60f8      	str	r0, [r7, #12]
 800190e:	60b9      	str	r1, [r7, #8]
 8001910:	607a      	str	r2, [r7, #4]
	return 0;
 8001912:	2300      	movs	r3, #0
}
 8001914:	4618      	mov	r0, r3
 8001916:	3714      	adds	r7, #20
 8001918:	46bd      	mov	sp, r7
 800191a:	bc80      	pop	{r7}
 800191c:	4770      	bx	lr
	...

08001920 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001920:	b580      	push	{r7, lr}
 8001922:	b086      	sub	sp, #24
 8001924:	af00      	add	r7, sp, #0
 8001926:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001928:	4a14      	ldr	r2, [pc, #80]	@ (800197c <_sbrk+0x5c>)
 800192a:	4b15      	ldr	r3, [pc, #84]	@ (8001980 <_sbrk+0x60>)
 800192c:	1ad3      	subs	r3, r2, r3
 800192e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001930:	697b      	ldr	r3, [r7, #20]
 8001932:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001934:	4b13      	ldr	r3, [pc, #76]	@ (8001984 <_sbrk+0x64>)
 8001936:	681b      	ldr	r3, [r3, #0]
 8001938:	2b00      	cmp	r3, #0
 800193a:	d102      	bne.n	8001942 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800193c:	4b11      	ldr	r3, [pc, #68]	@ (8001984 <_sbrk+0x64>)
 800193e:	4a12      	ldr	r2, [pc, #72]	@ (8001988 <_sbrk+0x68>)
 8001940:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001942:	4b10      	ldr	r3, [pc, #64]	@ (8001984 <_sbrk+0x64>)
 8001944:	681a      	ldr	r2, [r3, #0]
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	4413      	add	r3, r2
 800194a:	693a      	ldr	r2, [r7, #16]
 800194c:	429a      	cmp	r2, r3
 800194e:	d207      	bcs.n	8001960 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001950:	f000 fe52 	bl	80025f8 <__errno>
 8001954:	4603      	mov	r3, r0
 8001956:	220c      	movs	r2, #12
 8001958:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800195a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800195e:	e009      	b.n	8001974 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001960:	4b08      	ldr	r3, [pc, #32]	@ (8001984 <_sbrk+0x64>)
 8001962:	681b      	ldr	r3, [r3, #0]
 8001964:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001966:	4b07      	ldr	r3, [pc, #28]	@ (8001984 <_sbrk+0x64>)
 8001968:	681a      	ldr	r2, [r3, #0]
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	4413      	add	r3, r2
 800196e:	4a05      	ldr	r2, [pc, #20]	@ (8001984 <_sbrk+0x64>)
 8001970:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001972:	68fb      	ldr	r3, [r7, #12]
}
 8001974:	4618      	mov	r0, r3
 8001976:	3718      	adds	r7, #24
 8001978:	46bd      	mov	sp, r7
 800197a:	bd80      	pop	{r7, pc}
 800197c:	2000a000 	.word	0x2000a000
 8001980:	00000400 	.word	0x00000400
 8001984:	2000027c 	.word	0x2000027c
 8001988:	200003d0 	.word	0x200003d0

0800198c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800198c:	480d      	ldr	r0, [pc, #52]	@ (80019c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800198e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001990:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001994:	480c      	ldr	r0, [pc, #48]	@ (80019c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8001996:	490d      	ldr	r1, [pc, #52]	@ (80019cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8001998:	4a0d      	ldr	r2, [pc, #52]	@ (80019d0 <LoopForever+0xe>)
  movs r3, #0
 800199a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800199c:	e002      	b.n	80019a4 <LoopCopyDataInit>

0800199e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800199e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80019a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80019a2:	3304      	adds	r3, #4

080019a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80019a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80019a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80019a8:	d3f9      	bcc.n	800199e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80019aa:	4a0a      	ldr	r2, [pc, #40]	@ (80019d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80019ac:	4c0a      	ldr	r4, [pc, #40]	@ (80019d8 <LoopForever+0x16>)
  movs r3, #0
 80019ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80019b0:	e001      	b.n	80019b6 <LoopFillZerobss>

080019b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80019b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80019b4:	3204      	adds	r2, #4

080019b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80019b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80019b8:	d3fb      	bcc.n	80019b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80019ba:	f000 fe23 	bl	8002604 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80019be:	f7ff fadd 	bl	8000f7c <main>

080019c2 <LoopForever>:

LoopForever:
    b LoopForever
 80019c2:	e7fe      	b.n	80019c2 <LoopForever>
  ldr   r0, =_estack
 80019c4:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 80019c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80019cc:	200001f4 	.word	0x200001f4
  ldr r2, =_sidata
 80019d0:	08004b78 	.word	0x08004b78
  ldr r2, =_sbss
 80019d4:	200001f4 	.word	0x200001f4
  ldr r4, =_ebss
 80019d8:	200003cc 	.word	0x200003cc

080019dc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80019dc:	e7fe      	b.n	80019dc <ADC1_2_IRQHandler>

080019de <__cvt>:
 80019de:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80019e2:	b088      	sub	sp, #32
 80019e4:	2b00      	cmp	r3, #0
 80019e6:	461d      	mov	r5, r3
 80019e8:	4614      	mov	r4, r2
 80019ea:	bfbc      	itt	lt
 80019ec:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 80019f0:	4614      	movlt	r4, r2
 80019f2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80019f4:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 80019f6:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 80019fa:	bfb6      	itet	lt
 80019fc:	461d      	movlt	r5, r3
 80019fe:	2300      	movge	r3, #0
 8001a00:	232d      	movlt	r3, #45	@ 0x2d
 8001a02:	7013      	strb	r3, [r2, #0]
 8001a04:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8001a06:	f023 0820 	bic.w	r8, r3, #32
 8001a0a:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001a0e:	d005      	beq.n	8001a1c <__cvt+0x3e>
 8001a10:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001a14:	d100      	bne.n	8001a18 <__cvt+0x3a>
 8001a16:	3601      	adds	r6, #1
 8001a18:	2302      	movs	r3, #2
 8001a1a:	e000      	b.n	8001a1e <__cvt+0x40>
 8001a1c:	2303      	movs	r3, #3
 8001a1e:	aa07      	add	r2, sp, #28
 8001a20:	9204      	str	r2, [sp, #16]
 8001a22:	aa06      	add	r2, sp, #24
 8001a24:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001a28:	e9cd 3600 	strd	r3, r6, [sp]
 8001a2c:	4622      	mov	r2, r4
 8001a2e:	462b      	mov	r3, r5
 8001a30:	f000 fe9a 	bl	8002768 <_dtoa_r>
 8001a34:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001a38:	4607      	mov	r7, r0
 8001a3a:	d119      	bne.n	8001a70 <__cvt+0x92>
 8001a3c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8001a3e:	07db      	lsls	r3, r3, #31
 8001a40:	d50e      	bpl.n	8001a60 <__cvt+0x82>
 8001a42:	eb00 0906 	add.w	r9, r0, r6
 8001a46:	2200      	movs	r2, #0
 8001a48:	2300      	movs	r3, #0
 8001a4a:	4620      	mov	r0, r4
 8001a4c:	4629      	mov	r1, r5
 8001a4e:	f7ff f901 	bl	8000c54 <__aeabi_dcmpeq>
 8001a52:	b108      	cbz	r0, 8001a58 <__cvt+0x7a>
 8001a54:	f8cd 901c 	str.w	r9, [sp, #28]
 8001a58:	2230      	movs	r2, #48	@ 0x30
 8001a5a:	9b07      	ldr	r3, [sp, #28]
 8001a5c:	454b      	cmp	r3, r9
 8001a5e:	d31e      	bcc.n	8001a9e <__cvt+0xc0>
 8001a60:	9b07      	ldr	r3, [sp, #28]
 8001a62:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8001a64:	1bdb      	subs	r3, r3, r7
 8001a66:	4638      	mov	r0, r7
 8001a68:	6013      	str	r3, [r2, #0]
 8001a6a:	b008      	add	sp, #32
 8001a6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001a70:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001a74:	eb00 0906 	add.w	r9, r0, r6
 8001a78:	d1e5      	bne.n	8001a46 <__cvt+0x68>
 8001a7a:	7803      	ldrb	r3, [r0, #0]
 8001a7c:	2b30      	cmp	r3, #48	@ 0x30
 8001a7e:	d10a      	bne.n	8001a96 <__cvt+0xb8>
 8001a80:	2200      	movs	r2, #0
 8001a82:	2300      	movs	r3, #0
 8001a84:	4620      	mov	r0, r4
 8001a86:	4629      	mov	r1, r5
 8001a88:	f7ff f8e4 	bl	8000c54 <__aeabi_dcmpeq>
 8001a8c:	b918      	cbnz	r0, 8001a96 <__cvt+0xb8>
 8001a8e:	f1c6 0601 	rsb	r6, r6, #1
 8001a92:	f8ca 6000 	str.w	r6, [sl]
 8001a96:	f8da 3000 	ldr.w	r3, [sl]
 8001a9a:	4499      	add	r9, r3
 8001a9c:	e7d3      	b.n	8001a46 <__cvt+0x68>
 8001a9e:	1c59      	adds	r1, r3, #1
 8001aa0:	9107      	str	r1, [sp, #28]
 8001aa2:	701a      	strb	r2, [r3, #0]
 8001aa4:	e7d9      	b.n	8001a5a <__cvt+0x7c>

08001aa6 <__exponent>:
 8001aa6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001aa8:	2900      	cmp	r1, #0
 8001aaa:	bfba      	itte	lt
 8001aac:	4249      	neglt	r1, r1
 8001aae:	232d      	movlt	r3, #45	@ 0x2d
 8001ab0:	232b      	movge	r3, #43	@ 0x2b
 8001ab2:	2909      	cmp	r1, #9
 8001ab4:	7002      	strb	r2, [r0, #0]
 8001ab6:	7043      	strb	r3, [r0, #1]
 8001ab8:	dd29      	ble.n	8001b0e <__exponent+0x68>
 8001aba:	f10d 0307 	add.w	r3, sp, #7
 8001abe:	461d      	mov	r5, r3
 8001ac0:	270a      	movs	r7, #10
 8001ac2:	461a      	mov	r2, r3
 8001ac4:	fbb1 f6f7 	udiv	r6, r1, r7
 8001ac8:	fb07 1416 	mls	r4, r7, r6, r1
 8001acc:	3430      	adds	r4, #48	@ 0x30
 8001ace:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001ad2:	460c      	mov	r4, r1
 8001ad4:	2c63      	cmp	r4, #99	@ 0x63
 8001ad6:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8001ada:	4631      	mov	r1, r6
 8001adc:	dcf1      	bgt.n	8001ac2 <__exponent+0x1c>
 8001ade:	3130      	adds	r1, #48	@ 0x30
 8001ae0:	1e94      	subs	r4, r2, #2
 8001ae2:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001ae6:	1c41      	adds	r1, r0, #1
 8001ae8:	4623      	mov	r3, r4
 8001aea:	42ab      	cmp	r3, r5
 8001aec:	d30a      	bcc.n	8001b04 <__exponent+0x5e>
 8001aee:	f10d 0309 	add.w	r3, sp, #9
 8001af2:	1a9b      	subs	r3, r3, r2
 8001af4:	42ac      	cmp	r4, r5
 8001af6:	bf88      	it	hi
 8001af8:	2300      	movhi	r3, #0
 8001afa:	3302      	adds	r3, #2
 8001afc:	4403      	add	r3, r0
 8001afe:	1a18      	subs	r0, r3, r0
 8001b00:	b003      	add	sp, #12
 8001b02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b04:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001b08:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001b0c:	e7ed      	b.n	8001aea <__exponent+0x44>
 8001b0e:	2330      	movs	r3, #48	@ 0x30
 8001b10:	3130      	adds	r1, #48	@ 0x30
 8001b12:	7083      	strb	r3, [r0, #2]
 8001b14:	70c1      	strb	r1, [r0, #3]
 8001b16:	1d03      	adds	r3, r0, #4
 8001b18:	e7f1      	b.n	8001afe <__exponent+0x58>
	...

08001b1c <_printf_float>:
 8001b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b20:	b091      	sub	sp, #68	@ 0x44
 8001b22:	460c      	mov	r4, r1
 8001b24:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8001b28:	4616      	mov	r6, r2
 8001b2a:	461f      	mov	r7, r3
 8001b2c:	4605      	mov	r5, r0
 8001b2e:	f000 fd4f 	bl	80025d0 <_localeconv_r>
 8001b32:	6803      	ldr	r3, [r0, #0]
 8001b34:	9308      	str	r3, [sp, #32]
 8001b36:	4618      	mov	r0, r3
 8001b38:	f7fe fba2 	bl	8000280 <strlen>
 8001b3c:	2300      	movs	r3, #0
 8001b3e:	930e      	str	r3, [sp, #56]	@ 0x38
 8001b40:	f8d8 3000 	ldr.w	r3, [r8]
 8001b44:	9009      	str	r0, [sp, #36]	@ 0x24
 8001b46:	3307      	adds	r3, #7
 8001b48:	f023 0307 	bic.w	r3, r3, #7
 8001b4c:	f103 0208 	add.w	r2, r3, #8
 8001b50:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001b54:	f8d4 b000 	ldr.w	fp, [r4]
 8001b58:	f8c8 2000 	str.w	r2, [r8]
 8001b5c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001b60:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001b64:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001b66:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8001b6a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001b6e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001b72:	4b9d      	ldr	r3, [pc, #628]	@ (8001de8 <_printf_float+0x2cc>)
 8001b74:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001b78:	f7ff f89e 	bl	8000cb8 <__aeabi_dcmpun>
 8001b7c:	bb70      	cbnz	r0, 8001bdc <_printf_float+0xc0>
 8001b7e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001b82:	4b99      	ldr	r3, [pc, #612]	@ (8001de8 <_printf_float+0x2cc>)
 8001b84:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001b88:	f7ff f878 	bl	8000c7c <__aeabi_dcmple>
 8001b8c:	bb30      	cbnz	r0, 8001bdc <_printf_float+0xc0>
 8001b8e:	2200      	movs	r2, #0
 8001b90:	2300      	movs	r3, #0
 8001b92:	4640      	mov	r0, r8
 8001b94:	4649      	mov	r1, r9
 8001b96:	f7ff f867 	bl	8000c68 <__aeabi_dcmplt>
 8001b9a:	b110      	cbz	r0, 8001ba2 <_printf_float+0x86>
 8001b9c:	232d      	movs	r3, #45	@ 0x2d
 8001b9e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001ba2:	4a92      	ldr	r2, [pc, #584]	@ (8001dec <_printf_float+0x2d0>)
 8001ba4:	4b92      	ldr	r3, [pc, #584]	@ (8001df0 <_printf_float+0x2d4>)
 8001ba6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001baa:	bf94      	ite	ls
 8001bac:	4690      	movls	r8, r2
 8001bae:	4698      	movhi	r8, r3
 8001bb0:	2303      	movs	r3, #3
 8001bb2:	6123      	str	r3, [r4, #16]
 8001bb4:	f02b 0304 	bic.w	r3, fp, #4
 8001bb8:	6023      	str	r3, [r4, #0]
 8001bba:	f04f 0900 	mov.w	r9, #0
 8001bbe:	9700      	str	r7, [sp, #0]
 8001bc0:	4633      	mov	r3, r6
 8001bc2:	aa0f      	add	r2, sp, #60	@ 0x3c
 8001bc4:	4621      	mov	r1, r4
 8001bc6:	4628      	mov	r0, r5
 8001bc8:	f000 fa7e 	bl	80020c8 <_printf_common>
 8001bcc:	3001      	adds	r0, #1
 8001bce:	f040 808f 	bne.w	8001cf0 <_printf_float+0x1d4>
 8001bd2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001bd6:	b011      	add	sp, #68	@ 0x44
 8001bd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001bdc:	4642      	mov	r2, r8
 8001bde:	464b      	mov	r3, r9
 8001be0:	4640      	mov	r0, r8
 8001be2:	4649      	mov	r1, r9
 8001be4:	f7ff f868 	bl	8000cb8 <__aeabi_dcmpun>
 8001be8:	b140      	cbz	r0, 8001bfc <_printf_float+0xe0>
 8001bea:	464b      	mov	r3, r9
 8001bec:	2b00      	cmp	r3, #0
 8001bee:	bfbc      	itt	lt
 8001bf0:	232d      	movlt	r3, #45	@ 0x2d
 8001bf2:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001bf6:	4a7f      	ldr	r2, [pc, #508]	@ (8001df4 <_printf_float+0x2d8>)
 8001bf8:	4b7f      	ldr	r3, [pc, #508]	@ (8001df8 <_printf_float+0x2dc>)
 8001bfa:	e7d4      	b.n	8001ba6 <_printf_float+0x8a>
 8001bfc:	6863      	ldr	r3, [r4, #4]
 8001bfe:	1c5a      	adds	r2, r3, #1
 8001c00:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8001c04:	d13f      	bne.n	8001c86 <_printf_float+0x16a>
 8001c06:	2306      	movs	r3, #6
 8001c08:	6063      	str	r3, [r4, #4]
 8001c0a:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8001c0e:	2200      	movs	r2, #0
 8001c10:	6023      	str	r3, [r4, #0]
 8001c12:	9206      	str	r2, [sp, #24]
 8001c14:	aa0e      	add	r2, sp, #56	@ 0x38
 8001c16:	e9cd a204 	strd	sl, r2, [sp, #16]
 8001c1a:	aa0d      	add	r2, sp, #52	@ 0x34
 8001c1c:	9203      	str	r2, [sp, #12]
 8001c1e:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8001c22:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001c26:	6863      	ldr	r3, [r4, #4]
 8001c28:	9300      	str	r3, [sp, #0]
 8001c2a:	4642      	mov	r2, r8
 8001c2c:	464b      	mov	r3, r9
 8001c2e:	4628      	mov	r0, r5
 8001c30:	910a      	str	r1, [sp, #40]	@ 0x28
 8001c32:	f7ff fed4 	bl	80019de <__cvt>
 8001c36:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8001c38:	2947      	cmp	r1, #71	@ 0x47
 8001c3a:	4680      	mov	r8, r0
 8001c3c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8001c3e:	d128      	bne.n	8001c92 <_printf_float+0x176>
 8001c40:	1cc8      	adds	r0, r1, #3
 8001c42:	db02      	blt.n	8001c4a <_printf_float+0x12e>
 8001c44:	6863      	ldr	r3, [r4, #4]
 8001c46:	4299      	cmp	r1, r3
 8001c48:	dd40      	ble.n	8001ccc <_printf_float+0x1b0>
 8001c4a:	f1aa 0a02 	sub.w	sl, sl, #2
 8001c4e:	fa5f fa8a 	uxtb.w	sl, sl
 8001c52:	3901      	subs	r1, #1
 8001c54:	4652      	mov	r2, sl
 8001c56:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001c5a:	910d      	str	r1, [sp, #52]	@ 0x34
 8001c5c:	f7ff ff23 	bl	8001aa6 <__exponent>
 8001c60:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001c62:	1813      	adds	r3, r2, r0
 8001c64:	2a01      	cmp	r2, #1
 8001c66:	4681      	mov	r9, r0
 8001c68:	6123      	str	r3, [r4, #16]
 8001c6a:	dc02      	bgt.n	8001c72 <_printf_float+0x156>
 8001c6c:	6822      	ldr	r2, [r4, #0]
 8001c6e:	07d2      	lsls	r2, r2, #31
 8001c70:	d501      	bpl.n	8001c76 <_printf_float+0x15a>
 8001c72:	3301      	adds	r3, #1
 8001c74:	6123      	str	r3, [r4, #16]
 8001c76:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8001c7a:	2b00      	cmp	r3, #0
 8001c7c:	d09f      	beq.n	8001bbe <_printf_float+0xa2>
 8001c7e:	232d      	movs	r3, #45	@ 0x2d
 8001c80:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001c84:	e79b      	b.n	8001bbe <_printf_float+0xa2>
 8001c86:	2947      	cmp	r1, #71	@ 0x47
 8001c88:	d1bf      	bne.n	8001c0a <_printf_float+0xee>
 8001c8a:	2b00      	cmp	r3, #0
 8001c8c:	d1bd      	bne.n	8001c0a <_printf_float+0xee>
 8001c8e:	2301      	movs	r3, #1
 8001c90:	e7ba      	b.n	8001c08 <_printf_float+0xec>
 8001c92:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001c96:	d9dc      	bls.n	8001c52 <_printf_float+0x136>
 8001c98:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001c9c:	d118      	bne.n	8001cd0 <_printf_float+0x1b4>
 8001c9e:	2900      	cmp	r1, #0
 8001ca0:	6863      	ldr	r3, [r4, #4]
 8001ca2:	dd0b      	ble.n	8001cbc <_printf_float+0x1a0>
 8001ca4:	6121      	str	r1, [r4, #16]
 8001ca6:	b913      	cbnz	r3, 8001cae <_printf_float+0x192>
 8001ca8:	6822      	ldr	r2, [r4, #0]
 8001caa:	07d0      	lsls	r0, r2, #31
 8001cac:	d502      	bpl.n	8001cb4 <_printf_float+0x198>
 8001cae:	3301      	adds	r3, #1
 8001cb0:	440b      	add	r3, r1
 8001cb2:	6123      	str	r3, [r4, #16]
 8001cb4:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001cb6:	f04f 0900 	mov.w	r9, #0
 8001cba:	e7dc      	b.n	8001c76 <_printf_float+0x15a>
 8001cbc:	b913      	cbnz	r3, 8001cc4 <_printf_float+0x1a8>
 8001cbe:	6822      	ldr	r2, [r4, #0]
 8001cc0:	07d2      	lsls	r2, r2, #31
 8001cc2:	d501      	bpl.n	8001cc8 <_printf_float+0x1ac>
 8001cc4:	3302      	adds	r3, #2
 8001cc6:	e7f4      	b.n	8001cb2 <_printf_float+0x196>
 8001cc8:	2301      	movs	r3, #1
 8001cca:	e7f2      	b.n	8001cb2 <_printf_float+0x196>
 8001ccc:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001cd0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8001cd2:	4299      	cmp	r1, r3
 8001cd4:	db05      	blt.n	8001ce2 <_printf_float+0x1c6>
 8001cd6:	6823      	ldr	r3, [r4, #0]
 8001cd8:	6121      	str	r1, [r4, #16]
 8001cda:	07d8      	lsls	r0, r3, #31
 8001cdc:	d5ea      	bpl.n	8001cb4 <_printf_float+0x198>
 8001cde:	1c4b      	adds	r3, r1, #1
 8001ce0:	e7e7      	b.n	8001cb2 <_printf_float+0x196>
 8001ce2:	2900      	cmp	r1, #0
 8001ce4:	bfd4      	ite	le
 8001ce6:	f1c1 0202 	rsble	r2, r1, #2
 8001cea:	2201      	movgt	r2, #1
 8001cec:	4413      	add	r3, r2
 8001cee:	e7e0      	b.n	8001cb2 <_printf_float+0x196>
 8001cf0:	6823      	ldr	r3, [r4, #0]
 8001cf2:	055a      	lsls	r2, r3, #21
 8001cf4:	d407      	bmi.n	8001d06 <_printf_float+0x1ea>
 8001cf6:	6923      	ldr	r3, [r4, #16]
 8001cf8:	4642      	mov	r2, r8
 8001cfa:	4631      	mov	r1, r6
 8001cfc:	4628      	mov	r0, r5
 8001cfe:	47b8      	blx	r7
 8001d00:	3001      	adds	r0, #1
 8001d02:	d12b      	bne.n	8001d5c <_printf_float+0x240>
 8001d04:	e765      	b.n	8001bd2 <_printf_float+0xb6>
 8001d06:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001d0a:	f240 80dd 	bls.w	8001ec8 <_printf_float+0x3ac>
 8001d0e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001d12:	2200      	movs	r2, #0
 8001d14:	2300      	movs	r3, #0
 8001d16:	f7fe ff9d 	bl	8000c54 <__aeabi_dcmpeq>
 8001d1a:	2800      	cmp	r0, #0
 8001d1c:	d033      	beq.n	8001d86 <_printf_float+0x26a>
 8001d1e:	4a37      	ldr	r2, [pc, #220]	@ (8001dfc <_printf_float+0x2e0>)
 8001d20:	2301      	movs	r3, #1
 8001d22:	4631      	mov	r1, r6
 8001d24:	4628      	mov	r0, r5
 8001d26:	47b8      	blx	r7
 8001d28:	3001      	adds	r0, #1
 8001d2a:	f43f af52 	beq.w	8001bd2 <_printf_float+0xb6>
 8001d2e:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8001d32:	4543      	cmp	r3, r8
 8001d34:	db02      	blt.n	8001d3c <_printf_float+0x220>
 8001d36:	6823      	ldr	r3, [r4, #0]
 8001d38:	07d8      	lsls	r0, r3, #31
 8001d3a:	d50f      	bpl.n	8001d5c <_printf_float+0x240>
 8001d3c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001d40:	4631      	mov	r1, r6
 8001d42:	4628      	mov	r0, r5
 8001d44:	47b8      	blx	r7
 8001d46:	3001      	adds	r0, #1
 8001d48:	f43f af43 	beq.w	8001bd2 <_printf_float+0xb6>
 8001d4c:	f04f 0900 	mov.w	r9, #0
 8001d50:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8001d54:	f104 0a1a 	add.w	sl, r4, #26
 8001d58:	45c8      	cmp	r8, r9
 8001d5a:	dc09      	bgt.n	8001d70 <_printf_float+0x254>
 8001d5c:	6823      	ldr	r3, [r4, #0]
 8001d5e:	079b      	lsls	r3, r3, #30
 8001d60:	f100 8103 	bmi.w	8001f6a <_printf_float+0x44e>
 8001d64:	68e0      	ldr	r0, [r4, #12]
 8001d66:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8001d68:	4298      	cmp	r0, r3
 8001d6a:	bfb8      	it	lt
 8001d6c:	4618      	movlt	r0, r3
 8001d6e:	e732      	b.n	8001bd6 <_printf_float+0xba>
 8001d70:	2301      	movs	r3, #1
 8001d72:	4652      	mov	r2, sl
 8001d74:	4631      	mov	r1, r6
 8001d76:	4628      	mov	r0, r5
 8001d78:	47b8      	blx	r7
 8001d7a:	3001      	adds	r0, #1
 8001d7c:	f43f af29 	beq.w	8001bd2 <_printf_float+0xb6>
 8001d80:	f109 0901 	add.w	r9, r9, #1
 8001d84:	e7e8      	b.n	8001d58 <_printf_float+0x23c>
 8001d86:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001d88:	2b00      	cmp	r3, #0
 8001d8a:	dc39      	bgt.n	8001e00 <_printf_float+0x2e4>
 8001d8c:	4a1b      	ldr	r2, [pc, #108]	@ (8001dfc <_printf_float+0x2e0>)
 8001d8e:	2301      	movs	r3, #1
 8001d90:	4631      	mov	r1, r6
 8001d92:	4628      	mov	r0, r5
 8001d94:	47b8      	blx	r7
 8001d96:	3001      	adds	r0, #1
 8001d98:	f43f af1b 	beq.w	8001bd2 <_printf_float+0xb6>
 8001d9c:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8001da0:	ea59 0303 	orrs.w	r3, r9, r3
 8001da4:	d102      	bne.n	8001dac <_printf_float+0x290>
 8001da6:	6823      	ldr	r3, [r4, #0]
 8001da8:	07d9      	lsls	r1, r3, #31
 8001daa:	d5d7      	bpl.n	8001d5c <_printf_float+0x240>
 8001dac:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001db0:	4631      	mov	r1, r6
 8001db2:	4628      	mov	r0, r5
 8001db4:	47b8      	blx	r7
 8001db6:	3001      	adds	r0, #1
 8001db8:	f43f af0b 	beq.w	8001bd2 <_printf_float+0xb6>
 8001dbc:	f04f 0a00 	mov.w	sl, #0
 8001dc0:	f104 0b1a 	add.w	fp, r4, #26
 8001dc4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001dc6:	425b      	negs	r3, r3
 8001dc8:	4553      	cmp	r3, sl
 8001dca:	dc01      	bgt.n	8001dd0 <_printf_float+0x2b4>
 8001dcc:	464b      	mov	r3, r9
 8001dce:	e793      	b.n	8001cf8 <_printf_float+0x1dc>
 8001dd0:	2301      	movs	r3, #1
 8001dd2:	465a      	mov	r2, fp
 8001dd4:	4631      	mov	r1, r6
 8001dd6:	4628      	mov	r0, r5
 8001dd8:	47b8      	blx	r7
 8001dda:	3001      	adds	r0, #1
 8001ddc:	f43f aef9 	beq.w	8001bd2 <_printf_float+0xb6>
 8001de0:	f10a 0a01 	add.w	sl, sl, #1
 8001de4:	e7ee      	b.n	8001dc4 <_printf_float+0x2a8>
 8001de6:	bf00      	nop
 8001de8:	7fefffff 	.word	0x7fefffff
 8001dec:	080047f9 	.word	0x080047f9
 8001df0:	080047fd 	.word	0x080047fd
 8001df4:	08004801 	.word	0x08004801
 8001df8:	08004805 	.word	0x08004805
 8001dfc:	08004809 	.word	0x08004809
 8001e00:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001e02:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8001e06:	4553      	cmp	r3, sl
 8001e08:	bfa8      	it	ge
 8001e0a:	4653      	movge	r3, sl
 8001e0c:	2b00      	cmp	r3, #0
 8001e0e:	4699      	mov	r9, r3
 8001e10:	dc36      	bgt.n	8001e80 <_printf_float+0x364>
 8001e12:	f04f 0b00 	mov.w	fp, #0
 8001e16:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001e1a:	f104 021a 	add.w	r2, r4, #26
 8001e1e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001e20:	930a      	str	r3, [sp, #40]	@ 0x28
 8001e22:	eba3 0309 	sub.w	r3, r3, r9
 8001e26:	455b      	cmp	r3, fp
 8001e28:	dc31      	bgt.n	8001e8e <_printf_float+0x372>
 8001e2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001e2c:	459a      	cmp	sl, r3
 8001e2e:	dc3a      	bgt.n	8001ea6 <_printf_float+0x38a>
 8001e30:	6823      	ldr	r3, [r4, #0]
 8001e32:	07da      	lsls	r2, r3, #31
 8001e34:	d437      	bmi.n	8001ea6 <_printf_float+0x38a>
 8001e36:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001e38:	ebaa 0903 	sub.w	r9, sl, r3
 8001e3c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001e3e:	ebaa 0303 	sub.w	r3, sl, r3
 8001e42:	4599      	cmp	r9, r3
 8001e44:	bfa8      	it	ge
 8001e46:	4699      	movge	r9, r3
 8001e48:	f1b9 0f00 	cmp.w	r9, #0
 8001e4c:	dc33      	bgt.n	8001eb6 <_printf_float+0x39a>
 8001e4e:	f04f 0800 	mov.w	r8, #0
 8001e52:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001e56:	f104 0b1a 	add.w	fp, r4, #26
 8001e5a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001e5c:	ebaa 0303 	sub.w	r3, sl, r3
 8001e60:	eba3 0309 	sub.w	r3, r3, r9
 8001e64:	4543      	cmp	r3, r8
 8001e66:	f77f af79 	ble.w	8001d5c <_printf_float+0x240>
 8001e6a:	2301      	movs	r3, #1
 8001e6c:	465a      	mov	r2, fp
 8001e6e:	4631      	mov	r1, r6
 8001e70:	4628      	mov	r0, r5
 8001e72:	47b8      	blx	r7
 8001e74:	3001      	adds	r0, #1
 8001e76:	f43f aeac 	beq.w	8001bd2 <_printf_float+0xb6>
 8001e7a:	f108 0801 	add.w	r8, r8, #1
 8001e7e:	e7ec      	b.n	8001e5a <_printf_float+0x33e>
 8001e80:	4642      	mov	r2, r8
 8001e82:	4631      	mov	r1, r6
 8001e84:	4628      	mov	r0, r5
 8001e86:	47b8      	blx	r7
 8001e88:	3001      	adds	r0, #1
 8001e8a:	d1c2      	bne.n	8001e12 <_printf_float+0x2f6>
 8001e8c:	e6a1      	b.n	8001bd2 <_printf_float+0xb6>
 8001e8e:	2301      	movs	r3, #1
 8001e90:	4631      	mov	r1, r6
 8001e92:	4628      	mov	r0, r5
 8001e94:	920a      	str	r2, [sp, #40]	@ 0x28
 8001e96:	47b8      	blx	r7
 8001e98:	3001      	adds	r0, #1
 8001e9a:	f43f ae9a 	beq.w	8001bd2 <_printf_float+0xb6>
 8001e9e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001ea0:	f10b 0b01 	add.w	fp, fp, #1
 8001ea4:	e7bb      	b.n	8001e1e <_printf_float+0x302>
 8001ea6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001eaa:	4631      	mov	r1, r6
 8001eac:	4628      	mov	r0, r5
 8001eae:	47b8      	blx	r7
 8001eb0:	3001      	adds	r0, #1
 8001eb2:	d1c0      	bne.n	8001e36 <_printf_float+0x31a>
 8001eb4:	e68d      	b.n	8001bd2 <_printf_float+0xb6>
 8001eb6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001eb8:	464b      	mov	r3, r9
 8001eba:	4442      	add	r2, r8
 8001ebc:	4631      	mov	r1, r6
 8001ebe:	4628      	mov	r0, r5
 8001ec0:	47b8      	blx	r7
 8001ec2:	3001      	adds	r0, #1
 8001ec4:	d1c3      	bne.n	8001e4e <_printf_float+0x332>
 8001ec6:	e684      	b.n	8001bd2 <_printf_float+0xb6>
 8001ec8:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8001ecc:	f1ba 0f01 	cmp.w	sl, #1
 8001ed0:	dc01      	bgt.n	8001ed6 <_printf_float+0x3ba>
 8001ed2:	07db      	lsls	r3, r3, #31
 8001ed4:	d536      	bpl.n	8001f44 <_printf_float+0x428>
 8001ed6:	2301      	movs	r3, #1
 8001ed8:	4642      	mov	r2, r8
 8001eda:	4631      	mov	r1, r6
 8001edc:	4628      	mov	r0, r5
 8001ede:	47b8      	blx	r7
 8001ee0:	3001      	adds	r0, #1
 8001ee2:	f43f ae76 	beq.w	8001bd2 <_printf_float+0xb6>
 8001ee6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001eea:	4631      	mov	r1, r6
 8001eec:	4628      	mov	r0, r5
 8001eee:	47b8      	blx	r7
 8001ef0:	3001      	adds	r0, #1
 8001ef2:	f43f ae6e 	beq.w	8001bd2 <_printf_float+0xb6>
 8001ef6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001efa:	2200      	movs	r2, #0
 8001efc:	2300      	movs	r3, #0
 8001efe:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8001f02:	f7fe fea7 	bl	8000c54 <__aeabi_dcmpeq>
 8001f06:	b9c0      	cbnz	r0, 8001f3a <_printf_float+0x41e>
 8001f08:	4653      	mov	r3, sl
 8001f0a:	f108 0201 	add.w	r2, r8, #1
 8001f0e:	4631      	mov	r1, r6
 8001f10:	4628      	mov	r0, r5
 8001f12:	47b8      	blx	r7
 8001f14:	3001      	adds	r0, #1
 8001f16:	d10c      	bne.n	8001f32 <_printf_float+0x416>
 8001f18:	e65b      	b.n	8001bd2 <_printf_float+0xb6>
 8001f1a:	2301      	movs	r3, #1
 8001f1c:	465a      	mov	r2, fp
 8001f1e:	4631      	mov	r1, r6
 8001f20:	4628      	mov	r0, r5
 8001f22:	47b8      	blx	r7
 8001f24:	3001      	adds	r0, #1
 8001f26:	f43f ae54 	beq.w	8001bd2 <_printf_float+0xb6>
 8001f2a:	f108 0801 	add.w	r8, r8, #1
 8001f2e:	45d0      	cmp	r8, sl
 8001f30:	dbf3      	blt.n	8001f1a <_printf_float+0x3fe>
 8001f32:	464b      	mov	r3, r9
 8001f34:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001f38:	e6df      	b.n	8001cfa <_printf_float+0x1de>
 8001f3a:	f04f 0800 	mov.w	r8, #0
 8001f3e:	f104 0b1a 	add.w	fp, r4, #26
 8001f42:	e7f4      	b.n	8001f2e <_printf_float+0x412>
 8001f44:	2301      	movs	r3, #1
 8001f46:	4642      	mov	r2, r8
 8001f48:	e7e1      	b.n	8001f0e <_printf_float+0x3f2>
 8001f4a:	2301      	movs	r3, #1
 8001f4c:	464a      	mov	r2, r9
 8001f4e:	4631      	mov	r1, r6
 8001f50:	4628      	mov	r0, r5
 8001f52:	47b8      	blx	r7
 8001f54:	3001      	adds	r0, #1
 8001f56:	f43f ae3c 	beq.w	8001bd2 <_printf_float+0xb6>
 8001f5a:	f108 0801 	add.w	r8, r8, #1
 8001f5e:	68e3      	ldr	r3, [r4, #12]
 8001f60:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8001f62:	1a5b      	subs	r3, r3, r1
 8001f64:	4543      	cmp	r3, r8
 8001f66:	dcf0      	bgt.n	8001f4a <_printf_float+0x42e>
 8001f68:	e6fc      	b.n	8001d64 <_printf_float+0x248>
 8001f6a:	f04f 0800 	mov.w	r8, #0
 8001f6e:	f104 0919 	add.w	r9, r4, #25
 8001f72:	e7f4      	b.n	8001f5e <_printf_float+0x442>

08001f74 <malloc>:
 8001f74:	4b02      	ldr	r3, [pc, #8]	@ (8001f80 <malloc+0xc>)
 8001f76:	4601      	mov	r1, r0
 8001f78:	6818      	ldr	r0, [r3, #0]
 8001f7a:	f000 b825 	b.w	8001fc8 <_malloc_r>
 8001f7e:	bf00      	nop
 8001f80:	20000038 	.word	0x20000038

08001f84 <sbrk_aligned>:
 8001f84:	b570      	push	{r4, r5, r6, lr}
 8001f86:	4e0f      	ldr	r6, [pc, #60]	@ (8001fc4 <sbrk_aligned+0x40>)
 8001f88:	460c      	mov	r4, r1
 8001f8a:	6831      	ldr	r1, [r6, #0]
 8001f8c:	4605      	mov	r5, r0
 8001f8e:	b911      	cbnz	r1, 8001f96 <sbrk_aligned+0x12>
 8001f90:	f000 fb22 	bl	80025d8 <_sbrk_r>
 8001f94:	6030      	str	r0, [r6, #0]
 8001f96:	4621      	mov	r1, r4
 8001f98:	4628      	mov	r0, r5
 8001f9a:	f000 fb1d 	bl	80025d8 <_sbrk_r>
 8001f9e:	1c43      	adds	r3, r0, #1
 8001fa0:	d103      	bne.n	8001faa <sbrk_aligned+0x26>
 8001fa2:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8001fa6:	4620      	mov	r0, r4
 8001fa8:	bd70      	pop	{r4, r5, r6, pc}
 8001faa:	1cc4      	adds	r4, r0, #3
 8001fac:	f024 0403 	bic.w	r4, r4, #3
 8001fb0:	42a0      	cmp	r0, r4
 8001fb2:	d0f8      	beq.n	8001fa6 <sbrk_aligned+0x22>
 8001fb4:	1a21      	subs	r1, r4, r0
 8001fb6:	4628      	mov	r0, r5
 8001fb8:	f000 fb0e 	bl	80025d8 <_sbrk_r>
 8001fbc:	3001      	adds	r0, #1
 8001fbe:	d1f2      	bne.n	8001fa6 <sbrk_aligned+0x22>
 8001fc0:	e7ef      	b.n	8001fa2 <sbrk_aligned+0x1e>
 8001fc2:	bf00      	nop
 8001fc4:	20000280 	.word	0x20000280

08001fc8 <_malloc_r>:
 8001fc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001fcc:	1ccd      	adds	r5, r1, #3
 8001fce:	f025 0503 	bic.w	r5, r5, #3
 8001fd2:	3508      	adds	r5, #8
 8001fd4:	2d0c      	cmp	r5, #12
 8001fd6:	bf38      	it	cc
 8001fd8:	250c      	movcc	r5, #12
 8001fda:	2d00      	cmp	r5, #0
 8001fdc:	4606      	mov	r6, r0
 8001fde:	db01      	blt.n	8001fe4 <_malloc_r+0x1c>
 8001fe0:	42a9      	cmp	r1, r5
 8001fe2:	d904      	bls.n	8001fee <_malloc_r+0x26>
 8001fe4:	230c      	movs	r3, #12
 8001fe6:	6033      	str	r3, [r6, #0]
 8001fe8:	2000      	movs	r0, #0
 8001fea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001fee:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80020c4 <_malloc_r+0xfc>
 8001ff2:	f000 f9f7 	bl	80023e4 <__malloc_lock>
 8001ff6:	f8d8 3000 	ldr.w	r3, [r8]
 8001ffa:	461c      	mov	r4, r3
 8001ffc:	bb44      	cbnz	r4, 8002050 <_malloc_r+0x88>
 8001ffe:	4629      	mov	r1, r5
 8002000:	4630      	mov	r0, r6
 8002002:	f7ff ffbf 	bl	8001f84 <sbrk_aligned>
 8002006:	1c43      	adds	r3, r0, #1
 8002008:	4604      	mov	r4, r0
 800200a:	d158      	bne.n	80020be <_malloc_r+0xf6>
 800200c:	f8d8 4000 	ldr.w	r4, [r8]
 8002010:	4627      	mov	r7, r4
 8002012:	2f00      	cmp	r7, #0
 8002014:	d143      	bne.n	800209e <_malloc_r+0xd6>
 8002016:	2c00      	cmp	r4, #0
 8002018:	d04b      	beq.n	80020b2 <_malloc_r+0xea>
 800201a:	6823      	ldr	r3, [r4, #0]
 800201c:	4639      	mov	r1, r7
 800201e:	4630      	mov	r0, r6
 8002020:	eb04 0903 	add.w	r9, r4, r3
 8002024:	f000 fad8 	bl	80025d8 <_sbrk_r>
 8002028:	4581      	cmp	r9, r0
 800202a:	d142      	bne.n	80020b2 <_malloc_r+0xea>
 800202c:	6821      	ldr	r1, [r4, #0]
 800202e:	1a6d      	subs	r5, r5, r1
 8002030:	4629      	mov	r1, r5
 8002032:	4630      	mov	r0, r6
 8002034:	f7ff ffa6 	bl	8001f84 <sbrk_aligned>
 8002038:	3001      	adds	r0, #1
 800203a:	d03a      	beq.n	80020b2 <_malloc_r+0xea>
 800203c:	6823      	ldr	r3, [r4, #0]
 800203e:	442b      	add	r3, r5
 8002040:	6023      	str	r3, [r4, #0]
 8002042:	f8d8 3000 	ldr.w	r3, [r8]
 8002046:	685a      	ldr	r2, [r3, #4]
 8002048:	bb62      	cbnz	r2, 80020a4 <_malloc_r+0xdc>
 800204a:	f8c8 7000 	str.w	r7, [r8]
 800204e:	e00f      	b.n	8002070 <_malloc_r+0xa8>
 8002050:	6822      	ldr	r2, [r4, #0]
 8002052:	1b52      	subs	r2, r2, r5
 8002054:	d420      	bmi.n	8002098 <_malloc_r+0xd0>
 8002056:	2a0b      	cmp	r2, #11
 8002058:	d917      	bls.n	800208a <_malloc_r+0xc2>
 800205a:	1961      	adds	r1, r4, r5
 800205c:	42a3      	cmp	r3, r4
 800205e:	6025      	str	r5, [r4, #0]
 8002060:	bf18      	it	ne
 8002062:	6059      	strne	r1, [r3, #4]
 8002064:	6863      	ldr	r3, [r4, #4]
 8002066:	bf08      	it	eq
 8002068:	f8c8 1000 	streq.w	r1, [r8]
 800206c:	5162      	str	r2, [r4, r5]
 800206e:	604b      	str	r3, [r1, #4]
 8002070:	4630      	mov	r0, r6
 8002072:	f000 f9bd 	bl	80023f0 <__malloc_unlock>
 8002076:	f104 000b 	add.w	r0, r4, #11
 800207a:	1d23      	adds	r3, r4, #4
 800207c:	f020 0007 	bic.w	r0, r0, #7
 8002080:	1ac2      	subs	r2, r0, r3
 8002082:	bf1c      	itt	ne
 8002084:	1a1b      	subne	r3, r3, r0
 8002086:	50a3      	strne	r3, [r4, r2]
 8002088:	e7af      	b.n	8001fea <_malloc_r+0x22>
 800208a:	6862      	ldr	r2, [r4, #4]
 800208c:	42a3      	cmp	r3, r4
 800208e:	bf0c      	ite	eq
 8002090:	f8c8 2000 	streq.w	r2, [r8]
 8002094:	605a      	strne	r2, [r3, #4]
 8002096:	e7eb      	b.n	8002070 <_malloc_r+0xa8>
 8002098:	4623      	mov	r3, r4
 800209a:	6864      	ldr	r4, [r4, #4]
 800209c:	e7ae      	b.n	8001ffc <_malloc_r+0x34>
 800209e:	463c      	mov	r4, r7
 80020a0:	687f      	ldr	r7, [r7, #4]
 80020a2:	e7b6      	b.n	8002012 <_malloc_r+0x4a>
 80020a4:	461a      	mov	r2, r3
 80020a6:	685b      	ldr	r3, [r3, #4]
 80020a8:	42a3      	cmp	r3, r4
 80020aa:	d1fb      	bne.n	80020a4 <_malloc_r+0xdc>
 80020ac:	2300      	movs	r3, #0
 80020ae:	6053      	str	r3, [r2, #4]
 80020b0:	e7de      	b.n	8002070 <_malloc_r+0xa8>
 80020b2:	230c      	movs	r3, #12
 80020b4:	6033      	str	r3, [r6, #0]
 80020b6:	4630      	mov	r0, r6
 80020b8:	f000 f99a 	bl	80023f0 <__malloc_unlock>
 80020bc:	e794      	b.n	8001fe8 <_malloc_r+0x20>
 80020be:	6005      	str	r5, [r0, #0]
 80020c0:	e7d6      	b.n	8002070 <_malloc_r+0xa8>
 80020c2:	bf00      	nop
 80020c4:	20000284 	.word	0x20000284

080020c8 <_printf_common>:
 80020c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80020cc:	4616      	mov	r6, r2
 80020ce:	4698      	mov	r8, r3
 80020d0:	688a      	ldr	r2, [r1, #8]
 80020d2:	690b      	ldr	r3, [r1, #16]
 80020d4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80020d8:	4293      	cmp	r3, r2
 80020da:	bfb8      	it	lt
 80020dc:	4613      	movlt	r3, r2
 80020de:	6033      	str	r3, [r6, #0]
 80020e0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80020e4:	4607      	mov	r7, r0
 80020e6:	460c      	mov	r4, r1
 80020e8:	b10a      	cbz	r2, 80020ee <_printf_common+0x26>
 80020ea:	3301      	adds	r3, #1
 80020ec:	6033      	str	r3, [r6, #0]
 80020ee:	6823      	ldr	r3, [r4, #0]
 80020f0:	0699      	lsls	r1, r3, #26
 80020f2:	bf42      	ittt	mi
 80020f4:	6833      	ldrmi	r3, [r6, #0]
 80020f6:	3302      	addmi	r3, #2
 80020f8:	6033      	strmi	r3, [r6, #0]
 80020fa:	6825      	ldr	r5, [r4, #0]
 80020fc:	f015 0506 	ands.w	r5, r5, #6
 8002100:	d106      	bne.n	8002110 <_printf_common+0x48>
 8002102:	f104 0a19 	add.w	sl, r4, #25
 8002106:	68e3      	ldr	r3, [r4, #12]
 8002108:	6832      	ldr	r2, [r6, #0]
 800210a:	1a9b      	subs	r3, r3, r2
 800210c:	42ab      	cmp	r3, r5
 800210e:	dc26      	bgt.n	800215e <_printf_common+0x96>
 8002110:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002114:	6822      	ldr	r2, [r4, #0]
 8002116:	3b00      	subs	r3, #0
 8002118:	bf18      	it	ne
 800211a:	2301      	movne	r3, #1
 800211c:	0692      	lsls	r2, r2, #26
 800211e:	d42b      	bmi.n	8002178 <_printf_common+0xb0>
 8002120:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002124:	4641      	mov	r1, r8
 8002126:	4638      	mov	r0, r7
 8002128:	47c8      	blx	r9
 800212a:	3001      	adds	r0, #1
 800212c:	d01e      	beq.n	800216c <_printf_common+0xa4>
 800212e:	6823      	ldr	r3, [r4, #0]
 8002130:	6922      	ldr	r2, [r4, #16]
 8002132:	f003 0306 	and.w	r3, r3, #6
 8002136:	2b04      	cmp	r3, #4
 8002138:	bf02      	ittt	eq
 800213a:	68e5      	ldreq	r5, [r4, #12]
 800213c:	6833      	ldreq	r3, [r6, #0]
 800213e:	1aed      	subeq	r5, r5, r3
 8002140:	68a3      	ldr	r3, [r4, #8]
 8002142:	bf0c      	ite	eq
 8002144:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002148:	2500      	movne	r5, #0
 800214a:	4293      	cmp	r3, r2
 800214c:	bfc4      	itt	gt
 800214e:	1a9b      	subgt	r3, r3, r2
 8002150:	18ed      	addgt	r5, r5, r3
 8002152:	2600      	movs	r6, #0
 8002154:	341a      	adds	r4, #26
 8002156:	42b5      	cmp	r5, r6
 8002158:	d11a      	bne.n	8002190 <_printf_common+0xc8>
 800215a:	2000      	movs	r0, #0
 800215c:	e008      	b.n	8002170 <_printf_common+0xa8>
 800215e:	2301      	movs	r3, #1
 8002160:	4652      	mov	r2, sl
 8002162:	4641      	mov	r1, r8
 8002164:	4638      	mov	r0, r7
 8002166:	47c8      	blx	r9
 8002168:	3001      	adds	r0, #1
 800216a:	d103      	bne.n	8002174 <_printf_common+0xac>
 800216c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002170:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002174:	3501      	adds	r5, #1
 8002176:	e7c6      	b.n	8002106 <_printf_common+0x3e>
 8002178:	18e1      	adds	r1, r4, r3
 800217a:	1c5a      	adds	r2, r3, #1
 800217c:	2030      	movs	r0, #48	@ 0x30
 800217e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8002182:	4422      	add	r2, r4
 8002184:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002188:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800218c:	3302      	adds	r3, #2
 800218e:	e7c7      	b.n	8002120 <_printf_common+0x58>
 8002190:	2301      	movs	r3, #1
 8002192:	4622      	mov	r2, r4
 8002194:	4641      	mov	r1, r8
 8002196:	4638      	mov	r0, r7
 8002198:	47c8      	blx	r9
 800219a:	3001      	adds	r0, #1
 800219c:	d0e6      	beq.n	800216c <_printf_common+0xa4>
 800219e:	3601      	adds	r6, #1
 80021a0:	e7d9      	b.n	8002156 <_printf_common+0x8e>
	...

080021a4 <_printf_i>:
 80021a4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80021a8:	7e0f      	ldrb	r7, [r1, #24]
 80021aa:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80021ac:	2f78      	cmp	r7, #120	@ 0x78
 80021ae:	4691      	mov	r9, r2
 80021b0:	4680      	mov	r8, r0
 80021b2:	460c      	mov	r4, r1
 80021b4:	469a      	mov	sl, r3
 80021b6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80021ba:	d807      	bhi.n	80021cc <_printf_i+0x28>
 80021bc:	2f62      	cmp	r7, #98	@ 0x62
 80021be:	d80a      	bhi.n	80021d6 <_printf_i+0x32>
 80021c0:	2f00      	cmp	r7, #0
 80021c2:	f000 80d2 	beq.w	800236a <_printf_i+0x1c6>
 80021c6:	2f58      	cmp	r7, #88	@ 0x58
 80021c8:	f000 80b9 	beq.w	800233e <_printf_i+0x19a>
 80021cc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80021d0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80021d4:	e03a      	b.n	800224c <_printf_i+0xa8>
 80021d6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80021da:	2b15      	cmp	r3, #21
 80021dc:	d8f6      	bhi.n	80021cc <_printf_i+0x28>
 80021de:	a101      	add	r1, pc, #4	@ (adr r1, 80021e4 <_printf_i+0x40>)
 80021e0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80021e4:	0800223d 	.word	0x0800223d
 80021e8:	08002251 	.word	0x08002251
 80021ec:	080021cd 	.word	0x080021cd
 80021f0:	080021cd 	.word	0x080021cd
 80021f4:	080021cd 	.word	0x080021cd
 80021f8:	080021cd 	.word	0x080021cd
 80021fc:	08002251 	.word	0x08002251
 8002200:	080021cd 	.word	0x080021cd
 8002204:	080021cd 	.word	0x080021cd
 8002208:	080021cd 	.word	0x080021cd
 800220c:	080021cd 	.word	0x080021cd
 8002210:	08002351 	.word	0x08002351
 8002214:	0800227b 	.word	0x0800227b
 8002218:	0800230b 	.word	0x0800230b
 800221c:	080021cd 	.word	0x080021cd
 8002220:	080021cd 	.word	0x080021cd
 8002224:	08002373 	.word	0x08002373
 8002228:	080021cd 	.word	0x080021cd
 800222c:	0800227b 	.word	0x0800227b
 8002230:	080021cd 	.word	0x080021cd
 8002234:	080021cd 	.word	0x080021cd
 8002238:	08002313 	.word	0x08002313
 800223c:	6833      	ldr	r3, [r6, #0]
 800223e:	1d1a      	adds	r2, r3, #4
 8002240:	681b      	ldr	r3, [r3, #0]
 8002242:	6032      	str	r2, [r6, #0]
 8002244:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002248:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800224c:	2301      	movs	r3, #1
 800224e:	e09d      	b.n	800238c <_printf_i+0x1e8>
 8002250:	6833      	ldr	r3, [r6, #0]
 8002252:	6820      	ldr	r0, [r4, #0]
 8002254:	1d19      	adds	r1, r3, #4
 8002256:	6031      	str	r1, [r6, #0]
 8002258:	0606      	lsls	r6, r0, #24
 800225a:	d501      	bpl.n	8002260 <_printf_i+0xbc>
 800225c:	681d      	ldr	r5, [r3, #0]
 800225e:	e003      	b.n	8002268 <_printf_i+0xc4>
 8002260:	0645      	lsls	r5, r0, #25
 8002262:	d5fb      	bpl.n	800225c <_printf_i+0xb8>
 8002264:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002268:	2d00      	cmp	r5, #0
 800226a:	da03      	bge.n	8002274 <_printf_i+0xd0>
 800226c:	232d      	movs	r3, #45	@ 0x2d
 800226e:	426d      	negs	r5, r5
 8002270:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002274:	4859      	ldr	r0, [pc, #356]	@ (80023dc <_printf_i+0x238>)
 8002276:	230a      	movs	r3, #10
 8002278:	e011      	b.n	800229e <_printf_i+0xfa>
 800227a:	6821      	ldr	r1, [r4, #0]
 800227c:	6833      	ldr	r3, [r6, #0]
 800227e:	0608      	lsls	r0, r1, #24
 8002280:	f853 5b04 	ldr.w	r5, [r3], #4
 8002284:	d402      	bmi.n	800228c <_printf_i+0xe8>
 8002286:	0649      	lsls	r1, r1, #25
 8002288:	bf48      	it	mi
 800228a:	b2ad      	uxthmi	r5, r5
 800228c:	2f6f      	cmp	r7, #111	@ 0x6f
 800228e:	4853      	ldr	r0, [pc, #332]	@ (80023dc <_printf_i+0x238>)
 8002290:	6033      	str	r3, [r6, #0]
 8002292:	bf14      	ite	ne
 8002294:	230a      	movne	r3, #10
 8002296:	2308      	moveq	r3, #8
 8002298:	2100      	movs	r1, #0
 800229a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800229e:	6866      	ldr	r6, [r4, #4]
 80022a0:	60a6      	str	r6, [r4, #8]
 80022a2:	2e00      	cmp	r6, #0
 80022a4:	bfa2      	ittt	ge
 80022a6:	6821      	ldrge	r1, [r4, #0]
 80022a8:	f021 0104 	bicge.w	r1, r1, #4
 80022ac:	6021      	strge	r1, [r4, #0]
 80022ae:	b90d      	cbnz	r5, 80022b4 <_printf_i+0x110>
 80022b0:	2e00      	cmp	r6, #0
 80022b2:	d04b      	beq.n	800234c <_printf_i+0x1a8>
 80022b4:	4616      	mov	r6, r2
 80022b6:	fbb5 f1f3 	udiv	r1, r5, r3
 80022ba:	fb03 5711 	mls	r7, r3, r1, r5
 80022be:	5dc7      	ldrb	r7, [r0, r7]
 80022c0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80022c4:	462f      	mov	r7, r5
 80022c6:	42bb      	cmp	r3, r7
 80022c8:	460d      	mov	r5, r1
 80022ca:	d9f4      	bls.n	80022b6 <_printf_i+0x112>
 80022cc:	2b08      	cmp	r3, #8
 80022ce:	d10b      	bne.n	80022e8 <_printf_i+0x144>
 80022d0:	6823      	ldr	r3, [r4, #0]
 80022d2:	07df      	lsls	r7, r3, #31
 80022d4:	d508      	bpl.n	80022e8 <_printf_i+0x144>
 80022d6:	6923      	ldr	r3, [r4, #16]
 80022d8:	6861      	ldr	r1, [r4, #4]
 80022da:	4299      	cmp	r1, r3
 80022dc:	bfde      	ittt	le
 80022de:	2330      	movle	r3, #48	@ 0x30
 80022e0:	f806 3c01 	strble.w	r3, [r6, #-1]
 80022e4:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 80022e8:	1b92      	subs	r2, r2, r6
 80022ea:	6122      	str	r2, [r4, #16]
 80022ec:	f8cd a000 	str.w	sl, [sp]
 80022f0:	464b      	mov	r3, r9
 80022f2:	aa03      	add	r2, sp, #12
 80022f4:	4621      	mov	r1, r4
 80022f6:	4640      	mov	r0, r8
 80022f8:	f7ff fee6 	bl	80020c8 <_printf_common>
 80022fc:	3001      	adds	r0, #1
 80022fe:	d14a      	bne.n	8002396 <_printf_i+0x1f2>
 8002300:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002304:	b004      	add	sp, #16
 8002306:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800230a:	6823      	ldr	r3, [r4, #0]
 800230c:	f043 0320 	orr.w	r3, r3, #32
 8002310:	6023      	str	r3, [r4, #0]
 8002312:	4833      	ldr	r0, [pc, #204]	@ (80023e0 <_printf_i+0x23c>)
 8002314:	2778      	movs	r7, #120	@ 0x78
 8002316:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800231a:	6823      	ldr	r3, [r4, #0]
 800231c:	6831      	ldr	r1, [r6, #0]
 800231e:	061f      	lsls	r7, r3, #24
 8002320:	f851 5b04 	ldr.w	r5, [r1], #4
 8002324:	d402      	bmi.n	800232c <_printf_i+0x188>
 8002326:	065f      	lsls	r7, r3, #25
 8002328:	bf48      	it	mi
 800232a:	b2ad      	uxthmi	r5, r5
 800232c:	6031      	str	r1, [r6, #0]
 800232e:	07d9      	lsls	r1, r3, #31
 8002330:	bf44      	itt	mi
 8002332:	f043 0320 	orrmi.w	r3, r3, #32
 8002336:	6023      	strmi	r3, [r4, #0]
 8002338:	b11d      	cbz	r5, 8002342 <_printf_i+0x19e>
 800233a:	2310      	movs	r3, #16
 800233c:	e7ac      	b.n	8002298 <_printf_i+0xf4>
 800233e:	4827      	ldr	r0, [pc, #156]	@ (80023dc <_printf_i+0x238>)
 8002340:	e7e9      	b.n	8002316 <_printf_i+0x172>
 8002342:	6823      	ldr	r3, [r4, #0]
 8002344:	f023 0320 	bic.w	r3, r3, #32
 8002348:	6023      	str	r3, [r4, #0]
 800234a:	e7f6      	b.n	800233a <_printf_i+0x196>
 800234c:	4616      	mov	r6, r2
 800234e:	e7bd      	b.n	80022cc <_printf_i+0x128>
 8002350:	6833      	ldr	r3, [r6, #0]
 8002352:	6825      	ldr	r5, [r4, #0]
 8002354:	6961      	ldr	r1, [r4, #20]
 8002356:	1d18      	adds	r0, r3, #4
 8002358:	6030      	str	r0, [r6, #0]
 800235a:	062e      	lsls	r6, r5, #24
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	d501      	bpl.n	8002364 <_printf_i+0x1c0>
 8002360:	6019      	str	r1, [r3, #0]
 8002362:	e002      	b.n	800236a <_printf_i+0x1c6>
 8002364:	0668      	lsls	r0, r5, #25
 8002366:	d5fb      	bpl.n	8002360 <_printf_i+0x1bc>
 8002368:	8019      	strh	r1, [r3, #0]
 800236a:	2300      	movs	r3, #0
 800236c:	6123      	str	r3, [r4, #16]
 800236e:	4616      	mov	r6, r2
 8002370:	e7bc      	b.n	80022ec <_printf_i+0x148>
 8002372:	6833      	ldr	r3, [r6, #0]
 8002374:	1d1a      	adds	r2, r3, #4
 8002376:	6032      	str	r2, [r6, #0]
 8002378:	681e      	ldr	r6, [r3, #0]
 800237a:	6862      	ldr	r2, [r4, #4]
 800237c:	2100      	movs	r1, #0
 800237e:	4630      	mov	r0, r6
 8002380:	f7fd ff2e 	bl	80001e0 <memchr>
 8002384:	b108      	cbz	r0, 800238a <_printf_i+0x1e6>
 8002386:	1b80      	subs	r0, r0, r6
 8002388:	6060      	str	r0, [r4, #4]
 800238a:	6863      	ldr	r3, [r4, #4]
 800238c:	6123      	str	r3, [r4, #16]
 800238e:	2300      	movs	r3, #0
 8002390:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002394:	e7aa      	b.n	80022ec <_printf_i+0x148>
 8002396:	6923      	ldr	r3, [r4, #16]
 8002398:	4632      	mov	r2, r6
 800239a:	4649      	mov	r1, r9
 800239c:	4640      	mov	r0, r8
 800239e:	47d0      	blx	sl
 80023a0:	3001      	adds	r0, #1
 80023a2:	d0ad      	beq.n	8002300 <_printf_i+0x15c>
 80023a4:	6823      	ldr	r3, [r4, #0]
 80023a6:	079b      	lsls	r3, r3, #30
 80023a8:	d413      	bmi.n	80023d2 <_printf_i+0x22e>
 80023aa:	68e0      	ldr	r0, [r4, #12]
 80023ac:	9b03      	ldr	r3, [sp, #12]
 80023ae:	4298      	cmp	r0, r3
 80023b0:	bfb8      	it	lt
 80023b2:	4618      	movlt	r0, r3
 80023b4:	e7a6      	b.n	8002304 <_printf_i+0x160>
 80023b6:	2301      	movs	r3, #1
 80023b8:	4632      	mov	r2, r6
 80023ba:	4649      	mov	r1, r9
 80023bc:	4640      	mov	r0, r8
 80023be:	47d0      	blx	sl
 80023c0:	3001      	adds	r0, #1
 80023c2:	d09d      	beq.n	8002300 <_printf_i+0x15c>
 80023c4:	3501      	adds	r5, #1
 80023c6:	68e3      	ldr	r3, [r4, #12]
 80023c8:	9903      	ldr	r1, [sp, #12]
 80023ca:	1a5b      	subs	r3, r3, r1
 80023cc:	42ab      	cmp	r3, r5
 80023ce:	dcf2      	bgt.n	80023b6 <_printf_i+0x212>
 80023d0:	e7eb      	b.n	80023aa <_printf_i+0x206>
 80023d2:	2500      	movs	r5, #0
 80023d4:	f104 0619 	add.w	r6, r4, #25
 80023d8:	e7f5      	b.n	80023c6 <_printf_i+0x222>
 80023da:	bf00      	nop
 80023dc:	0800480b 	.word	0x0800480b
 80023e0:	0800481c 	.word	0x0800481c

080023e4 <__malloc_lock>:
 80023e4:	4801      	ldr	r0, [pc, #4]	@ (80023ec <__malloc_lock+0x8>)
 80023e6:	f000 b932 	b.w	800264e <__retarget_lock_acquire_recursive>
 80023ea:	bf00      	nop
 80023ec:	200003c4 	.word	0x200003c4

080023f0 <__malloc_unlock>:
 80023f0:	4801      	ldr	r0, [pc, #4]	@ (80023f8 <__malloc_unlock+0x8>)
 80023f2:	f000 b92d 	b.w	8002650 <__retarget_lock_release_recursive>
 80023f6:	bf00      	nop
 80023f8:	200003c4 	.word	0x200003c4

080023fc <siprintf>:
 80023fc:	b40e      	push	{r1, r2, r3}
 80023fe:	b500      	push	{lr}
 8002400:	b09c      	sub	sp, #112	@ 0x70
 8002402:	ab1d      	add	r3, sp, #116	@ 0x74
 8002404:	9002      	str	r0, [sp, #8]
 8002406:	9006      	str	r0, [sp, #24]
 8002408:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800240c:	4809      	ldr	r0, [pc, #36]	@ (8002434 <siprintf+0x38>)
 800240e:	9107      	str	r1, [sp, #28]
 8002410:	9104      	str	r1, [sp, #16]
 8002412:	4909      	ldr	r1, [pc, #36]	@ (8002438 <siprintf+0x3c>)
 8002414:	f853 2b04 	ldr.w	r2, [r3], #4
 8002418:	9105      	str	r1, [sp, #20]
 800241a:	6800      	ldr	r0, [r0, #0]
 800241c:	9301      	str	r3, [sp, #4]
 800241e:	a902      	add	r1, sp, #8
 8002420:	f001 f810 	bl	8003444 <_svfiprintf_r>
 8002424:	9b02      	ldr	r3, [sp, #8]
 8002426:	2200      	movs	r2, #0
 8002428:	701a      	strb	r2, [r3, #0]
 800242a:	b01c      	add	sp, #112	@ 0x70
 800242c:	f85d eb04 	ldr.w	lr, [sp], #4
 8002430:	b003      	add	sp, #12
 8002432:	4770      	bx	lr
 8002434:	20000038 	.word	0x20000038
 8002438:	ffff0208 	.word	0xffff0208

0800243c <std>:
 800243c:	2300      	movs	r3, #0
 800243e:	b510      	push	{r4, lr}
 8002440:	4604      	mov	r4, r0
 8002442:	e9c0 3300 	strd	r3, r3, [r0]
 8002446:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800244a:	6083      	str	r3, [r0, #8]
 800244c:	8181      	strh	r1, [r0, #12]
 800244e:	6643      	str	r3, [r0, #100]	@ 0x64
 8002450:	81c2      	strh	r2, [r0, #14]
 8002452:	6183      	str	r3, [r0, #24]
 8002454:	4619      	mov	r1, r3
 8002456:	2208      	movs	r2, #8
 8002458:	305c      	adds	r0, #92	@ 0x5c
 800245a:	f000 f8b1 	bl	80025c0 <memset>
 800245e:	4b0d      	ldr	r3, [pc, #52]	@ (8002494 <std+0x58>)
 8002460:	6263      	str	r3, [r4, #36]	@ 0x24
 8002462:	4b0d      	ldr	r3, [pc, #52]	@ (8002498 <std+0x5c>)
 8002464:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002466:	4b0d      	ldr	r3, [pc, #52]	@ (800249c <std+0x60>)
 8002468:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800246a:	4b0d      	ldr	r3, [pc, #52]	@ (80024a0 <std+0x64>)
 800246c:	6323      	str	r3, [r4, #48]	@ 0x30
 800246e:	4b0d      	ldr	r3, [pc, #52]	@ (80024a4 <std+0x68>)
 8002470:	6224      	str	r4, [r4, #32]
 8002472:	429c      	cmp	r4, r3
 8002474:	d006      	beq.n	8002484 <std+0x48>
 8002476:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800247a:	4294      	cmp	r4, r2
 800247c:	d002      	beq.n	8002484 <std+0x48>
 800247e:	33d0      	adds	r3, #208	@ 0xd0
 8002480:	429c      	cmp	r4, r3
 8002482:	d105      	bne.n	8002490 <std+0x54>
 8002484:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002488:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800248c:	f000 b8de 	b.w	800264c <__retarget_lock_init_recursive>
 8002490:	bd10      	pop	{r4, pc}
 8002492:	bf00      	nop
 8002494:	08003e8d 	.word	0x08003e8d
 8002498:	08003eaf 	.word	0x08003eaf
 800249c:	08003ee7 	.word	0x08003ee7
 80024a0:	08003f0b 	.word	0x08003f0b
 80024a4:	20000288 	.word	0x20000288

080024a8 <stdio_exit_handler>:
 80024a8:	4a02      	ldr	r2, [pc, #8]	@ (80024b4 <stdio_exit_handler+0xc>)
 80024aa:	4903      	ldr	r1, [pc, #12]	@ (80024b8 <stdio_exit_handler+0x10>)
 80024ac:	4803      	ldr	r0, [pc, #12]	@ (80024bc <stdio_exit_handler+0x14>)
 80024ae:	f000 b869 	b.w	8002584 <_fwalk_sglue>
 80024b2:	bf00      	nop
 80024b4:	2000002c 	.word	0x2000002c
 80024b8:	0800373d 	.word	0x0800373d
 80024bc:	2000003c 	.word	0x2000003c

080024c0 <cleanup_stdio>:
 80024c0:	6841      	ldr	r1, [r0, #4]
 80024c2:	4b0c      	ldr	r3, [pc, #48]	@ (80024f4 <cleanup_stdio+0x34>)
 80024c4:	4299      	cmp	r1, r3
 80024c6:	b510      	push	{r4, lr}
 80024c8:	4604      	mov	r4, r0
 80024ca:	d001      	beq.n	80024d0 <cleanup_stdio+0x10>
 80024cc:	f001 f936 	bl	800373c <_fflush_r>
 80024d0:	68a1      	ldr	r1, [r4, #8]
 80024d2:	4b09      	ldr	r3, [pc, #36]	@ (80024f8 <cleanup_stdio+0x38>)
 80024d4:	4299      	cmp	r1, r3
 80024d6:	d002      	beq.n	80024de <cleanup_stdio+0x1e>
 80024d8:	4620      	mov	r0, r4
 80024da:	f001 f92f 	bl	800373c <_fflush_r>
 80024de:	68e1      	ldr	r1, [r4, #12]
 80024e0:	4b06      	ldr	r3, [pc, #24]	@ (80024fc <cleanup_stdio+0x3c>)
 80024e2:	4299      	cmp	r1, r3
 80024e4:	d004      	beq.n	80024f0 <cleanup_stdio+0x30>
 80024e6:	4620      	mov	r0, r4
 80024e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80024ec:	f001 b926 	b.w	800373c <_fflush_r>
 80024f0:	bd10      	pop	{r4, pc}
 80024f2:	bf00      	nop
 80024f4:	20000288 	.word	0x20000288
 80024f8:	200002f0 	.word	0x200002f0
 80024fc:	20000358 	.word	0x20000358

08002500 <global_stdio_init.part.0>:
 8002500:	b510      	push	{r4, lr}
 8002502:	4b0b      	ldr	r3, [pc, #44]	@ (8002530 <global_stdio_init.part.0+0x30>)
 8002504:	4c0b      	ldr	r4, [pc, #44]	@ (8002534 <global_stdio_init.part.0+0x34>)
 8002506:	4a0c      	ldr	r2, [pc, #48]	@ (8002538 <global_stdio_init.part.0+0x38>)
 8002508:	601a      	str	r2, [r3, #0]
 800250a:	4620      	mov	r0, r4
 800250c:	2200      	movs	r2, #0
 800250e:	2104      	movs	r1, #4
 8002510:	f7ff ff94 	bl	800243c <std>
 8002514:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002518:	2201      	movs	r2, #1
 800251a:	2109      	movs	r1, #9
 800251c:	f7ff ff8e 	bl	800243c <std>
 8002520:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002524:	2202      	movs	r2, #2
 8002526:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800252a:	2112      	movs	r1, #18
 800252c:	f7ff bf86 	b.w	800243c <std>
 8002530:	200003c0 	.word	0x200003c0
 8002534:	20000288 	.word	0x20000288
 8002538:	080024a9 	.word	0x080024a9

0800253c <__sfp_lock_acquire>:
 800253c:	4801      	ldr	r0, [pc, #4]	@ (8002544 <__sfp_lock_acquire+0x8>)
 800253e:	f000 b886 	b.w	800264e <__retarget_lock_acquire_recursive>
 8002542:	bf00      	nop
 8002544:	200003c5 	.word	0x200003c5

08002548 <__sfp_lock_release>:
 8002548:	4801      	ldr	r0, [pc, #4]	@ (8002550 <__sfp_lock_release+0x8>)
 800254a:	f000 b881 	b.w	8002650 <__retarget_lock_release_recursive>
 800254e:	bf00      	nop
 8002550:	200003c5 	.word	0x200003c5

08002554 <__sinit>:
 8002554:	b510      	push	{r4, lr}
 8002556:	4604      	mov	r4, r0
 8002558:	f7ff fff0 	bl	800253c <__sfp_lock_acquire>
 800255c:	6a23      	ldr	r3, [r4, #32]
 800255e:	b11b      	cbz	r3, 8002568 <__sinit+0x14>
 8002560:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002564:	f7ff bff0 	b.w	8002548 <__sfp_lock_release>
 8002568:	4b04      	ldr	r3, [pc, #16]	@ (800257c <__sinit+0x28>)
 800256a:	6223      	str	r3, [r4, #32]
 800256c:	4b04      	ldr	r3, [pc, #16]	@ (8002580 <__sinit+0x2c>)
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	2b00      	cmp	r3, #0
 8002572:	d1f5      	bne.n	8002560 <__sinit+0xc>
 8002574:	f7ff ffc4 	bl	8002500 <global_stdio_init.part.0>
 8002578:	e7f2      	b.n	8002560 <__sinit+0xc>
 800257a:	bf00      	nop
 800257c:	080024c1 	.word	0x080024c1
 8002580:	200003c0 	.word	0x200003c0

08002584 <_fwalk_sglue>:
 8002584:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002588:	4607      	mov	r7, r0
 800258a:	4688      	mov	r8, r1
 800258c:	4614      	mov	r4, r2
 800258e:	2600      	movs	r6, #0
 8002590:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002594:	f1b9 0901 	subs.w	r9, r9, #1
 8002598:	d505      	bpl.n	80025a6 <_fwalk_sglue+0x22>
 800259a:	6824      	ldr	r4, [r4, #0]
 800259c:	2c00      	cmp	r4, #0
 800259e:	d1f7      	bne.n	8002590 <_fwalk_sglue+0xc>
 80025a0:	4630      	mov	r0, r6
 80025a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80025a6:	89ab      	ldrh	r3, [r5, #12]
 80025a8:	2b01      	cmp	r3, #1
 80025aa:	d907      	bls.n	80025bc <_fwalk_sglue+0x38>
 80025ac:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80025b0:	3301      	adds	r3, #1
 80025b2:	d003      	beq.n	80025bc <_fwalk_sglue+0x38>
 80025b4:	4629      	mov	r1, r5
 80025b6:	4638      	mov	r0, r7
 80025b8:	47c0      	blx	r8
 80025ba:	4306      	orrs	r6, r0
 80025bc:	3568      	adds	r5, #104	@ 0x68
 80025be:	e7e9      	b.n	8002594 <_fwalk_sglue+0x10>

080025c0 <memset>:
 80025c0:	4402      	add	r2, r0
 80025c2:	4603      	mov	r3, r0
 80025c4:	4293      	cmp	r3, r2
 80025c6:	d100      	bne.n	80025ca <memset+0xa>
 80025c8:	4770      	bx	lr
 80025ca:	f803 1b01 	strb.w	r1, [r3], #1
 80025ce:	e7f9      	b.n	80025c4 <memset+0x4>

080025d0 <_localeconv_r>:
 80025d0:	4800      	ldr	r0, [pc, #0]	@ (80025d4 <_localeconv_r+0x4>)
 80025d2:	4770      	bx	lr
 80025d4:	20000178 	.word	0x20000178

080025d8 <_sbrk_r>:
 80025d8:	b538      	push	{r3, r4, r5, lr}
 80025da:	4d06      	ldr	r5, [pc, #24]	@ (80025f4 <_sbrk_r+0x1c>)
 80025dc:	2300      	movs	r3, #0
 80025de:	4604      	mov	r4, r0
 80025e0:	4608      	mov	r0, r1
 80025e2:	602b      	str	r3, [r5, #0]
 80025e4:	f7ff f99c 	bl	8001920 <_sbrk>
 80025e8:	1c43      	adds	r3, r0, #1
 80025ea:	d102      	bne.n	80025f2 <_sbrk_r+0x1a>
 80025ec:	682b      	ldr	r3, [r5, #0]
 80025ee:	b103      	cbz	r3, 80025f2 <_sbrk_r+0x1a>
 80025f0:	6023      	str	r3, [r4, #0]
 80025f2:	bd38      	pop	{r3, r4, r5, pc}
 80025f4:	200003c8 	.word	0x200003c8

080025f8 <__errno>:
 80025f8:	4b01      	ldr	r3, [pc, #4]	@ (8002600 <__errno+0x8>)
 80025fa:	6818      	ldr	r0, [r3, #0]
 80025fc:	4770      	bx	lr
 80025fe:	bf00      	nop
 8002600:	20000038 	.word	0x20000038

08002604 <__libc_init_array>:
 8002604:	b570      	push	{r4, r5, r6, lr}
 8002606:	4d0d      	ldr	r5, [pc, #52]	@ (800263c <__libc_init_array+0x38>)
 8002608:	4c0d      	ldr	r4, [pc, #52]	@ (8002640 <__libc_init_array+0x3c>)
 800260a:	1b64      	subs	r4, r4, r5
 800260c:	10a4      	asrs	r4, r4, #2
 800260e:	2600      	movs	r6, #0
 8002610:	42a6      	cmp	r6, r4
 8002612:	d109      	bne.n	8002628 <__libc_init_array+0x24>
 8002614:	4d0b      	ldr	r5, [pc, #44]	@ (8002644 <__libc_init_array+0x40>)
 8002616:	4c0c      	ldr	r4, [pc, #48]	@ (8002648 <__libc_init_array+0x44>)
 8002618:	f002 f826 	bl	8004668 <_init>
 800261c:	1b64      	subs	r4, r4, r5
 800261e:	10a4      	asrs	r4, r4, #2
 8002620:	2600      	movs	r6, #0
 8002622:	42a6      	cmp	r6, r4
 8002624:	d105      	bne.n	8002632 <__libc_init_array+0x2e>
 8002626:	bd70      	pop	{r4, r5, r6, pc}
 8002628:	f855 3b04 	ldr.w	r3, [r5], #4
 800262c:	4798      	blx	r3
 800262e:	3601      	adds	r6, #1
 8002630:	e7ee      	b.n	8002610 <__libc_init_array+0xc>
 8002632:	f855 3b04 	ldr.w	r3, [r5], #4
 8002636:	4798      	blx	r3
 8002638:	3601      	adds	r6, #1
 800263a:	e7f2      	b.n	8002622 <__libc_init_array+0x1e>
 800263c:	08004b70 	.word	0x08004b70
 8002640:	08004b70 	.word	0x08004b70
 8002644:	08004b70 	.word	0x08004b70
 8002648:	08004b74 	.word	0x08004b74

0800264c <__retarget_lock_init_recursive>:
 800264c:	4770      	bx	lr

0800264e <__retarget_lock_acquire_recursive>:
 800264e:	4770      	bx	lr

08002650 <__retarget_lock_release_recursive>:
 8002650:	4770      	bx	lr

08002652 <quorem>:
 8002652:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002656:	6903      	ldr	r3, [r0, #16]
 8002658:	690c      	ldr	r4, [r1, #16]
 800265a:	42a3      	cmp	r3, r4
 800265c:	4607      	mov	r7, r0
 800265e:	db7e      	blt.n	800275e <quorem+0x10c>
 8002660:	3c01      	subs	r4, #1
 8002662:	f101 0814 	add.w	r8, r1, #20
 8002666:	00a3      	lsls	r3, r4, #2
 8002668:	f100 0514 	add.w	r5, r0, #20
 800266c:	9300      	str	r3, [sp, #0]
 800266e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002672:	9301      	str	r3, [sp, #4]
 8002674:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002678:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800267c:	3301      	adds	r3, #1
 800267e:	429a      	cmp	r2, r3
 8002680:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002684:	fbb2 f6f3 	udiv	r6, r2, r3
 8002688:	d32e      	bcc.n	80026e8 <quorem+0x96>
 800268a:	f04f 0a00 	mov.w	sl, #0
 800268e:	46c4      	mov	ip, r8
 8002690:	46ae      	mov	lr, r5
 8002692:	46d3      	mov	fp, sl
 8002694:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002698:	b298      	uxth	r0, r3
 800269a:	fb06 a000 	mla	r0, r6, r0, sl
 800269e:	0c02      	lsrs	r2, r0, #16
 80026a0:	0c1b      	lsrs	r3, r3, #16
 80026a2:	fb06 2303 	mla	r3, r6, r3, r2
 80026a6:	f8de 2000 	ldr.w	r2, [lr]
 80026aa:	b280      	uxth	r0, r0
 80026ac:	b292      	uxth	r2, r2
 80026ae:	1a12      	subs	r2, r2, r0
 80026b0:	445a      	add	r2, fp
 80026b2:	f8de 0000 	ldr.w	r0, [lr]
 80026b6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80026ba:	b29b      	uxth	r3, r3
 80026bc:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80026c0:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80026c4:	b292      	uxth	r2, r2
 80026c6:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80026ca:	45e1      	cmp	r9, ip
 80026cc:	f84e 2b04 	str.w	r2, [lr], #4
 80026d0:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80026d4:	d2de      	bcs.n	8002694 <quorem+0x42>
 80026d6:	9b00      	ldr	r3, [sp, #0]
 80026d8:	58eb      	ldr	r3, [r5, r3]
 80026da:	b92b      	cbnz	r3, 80026e8 <quorem+0x96>
 80026dc:	9b01      	ldr	r3, [sp, #4]
 80026de:	3b04      	subs	r3, #4
 80026e0:	429d      	cmp	r5, r3
 80026e2:	461a      	mov	r2, r3
 80026e4:	d32f      	bcc.n	8002746 <quorem+0xf4>
 80026e6:	613c      	str	r4, [r7, #16]
 80026e8:	4638      	mov	r0, r7
 80026ea:	f001 fac9 	bl	8003c80 <__mcmp>
 80026ee:	2800      	cmp	r0, #0
 80026f0:	db25      	blt.n	800273e <quorem+0xec>
 80026f2:	4629      	mov	r1, r5
 80026f4:	2000      	movs	r0, #0
 80026f6:	f858 2b04 	ldr.w	r2, [r8], #4
 80026fa:	f8d1 c000 	ldr.w	ip, [r1]
 80026fe:	fa1f fe82 	uxth.w	lr, r2
 8002702:	fa1f f38c 	uxth.w	r3, ip
 8002706:	eba3 030e 	sub.w	r3, r3, lr
 800270a:	4403      	add	r3, r0
 800270c:	0c12      	lsrs	r2, r2, #16
 800270e:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002712:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002716:	b29b      	uxth	r3, r3
 8002718:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800271c:	45c1      	cmp	r9, r8
 800271e:	f841 3b04 	str.w	r3, [r1], #4
 8002722:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002726:	d2e6      	bcs.n	80026f6 <quorem+0xa4>
 8002728:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800272c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002730:	b922      	cbnz	r2, 800273c <quorem+0xea>
 8002732:	3b04      	subs	r3, #4
 8002734:	429d      	cmp	r5, r3
 8002736:	461a      	mov	r2, r3
 8002738:	d30b      	bcc.n	8002752 <quorem+0x100>
 800273a:	613c      	str	r4, [r7, #16]
 800273c:	3601      	adds	r6, #1
 800273e:	4630      	mov	r0, r6
 8002740:	b003      	add	sp, #12
 8002742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002746:	6812      	ldr	r2, [r2, #0]
 8002748:	3b04      	subs	r3, #4
 800274a:	2a00      	cmp	r2, #0
 800274c:	d1cb      	bne.n	80026e6 <quorem+0x94>
 800274e:	3c01      	subs	r4, #1
 8002750:	e7c6      	b.n	80026e0 <quorem+0x8e>
 8002752:	6812      	ldr	r2, [r2, #0]
 8002754:	3b04      	subs	r3, #4
 8002756:	2a00      	cmp	r2, #0
 8002758:	d1ef      	bne.n	800273a <quorem+0xe8>
 800275a:	3c01      	subs	r4, #1
 800275c:	e7ea      	b.n	8002734 <quorem+0xe2>
 800275e:	2000      	movs	r0, #0
 8002760:	e7ee      	b.n	8002740 <quorem+0xee>
 8002762:	0000      	movs	r0, r0
 8002764:	0000      	movs	r0, r0
	...

08002768 <_dtoa_r>:
 8002768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800276c:	69c7      	ldr	r7, [r0, #28]
 800276e:	b097      	sub	sp, #92	@ 0x5c
 8002770:	4614      	mov	r4, r2
 8002772:	461d      	mov	r5, r3
 8002774:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8002778:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 800277a:	4683      	mov	fp, r0
 800277c:	b97f      	cbnz	r7, 800279e <_dtoa_r+0x36>
 800277e:	2010      	movs	r0, #16
 8002780:	f7ff fbf8 	bl	8001f74 <malloc>
 8002784:	4602      	mov	r2, r0
 8002786:	f8cb 001c 	str.w	r0, [fp, #28]
 800278a:	b920      	cbnz	r0, 8002796 <_dtoa_r+0x2e>
 800278c:	4ba8      	ldr	r3, [pc, #672]	@ (8002a30 <_dtoa_r+0x2c8>)
 800278e:	21ef      	movs	r1, #239	@ 0xef
 8002790:	48a8      	ldr	r0, [pc, #672]	@ (8002a34 <_dtoa_r+0x2cc>)
 8002792:	f001 fc5b 	bl	800404c <__assert_func>
 8002796:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800279a:	6007      	str	r7, [r0, #0]
 800279c:	60c7      	str	r7, [r0, #12]
 800279e:	f8db 301c 	ldr.w	r3, [fp, #28]
 80027a2:	6819      	ldr	r1, [r3, #0]
 80027a4:	b159      	cbz	r1, 80027be <_dtoa_r+0x56>
 80027a6:	685a      	ldr	r2, [r3, #4]
 80027a8:	604a      	str	r2, [r1, #4]
 80027aa:	2301      	movs	r3, #1
 80027ac:	4093      	lsls	r3, r2
 80027ae:	608b      	str	r3, [r1, #8]
 80027b0:	4658      	mov	r0, fp
 80027b2:	f001 f82b 	bl	800380c <_Bfree>
 80027b6:	f8db 301c 	ldr.w	r3, [fp, #28]
 80027ba:	2200      	movs	r2, #0
 80027bc:	601a      	str	r2, [r3, #0]
 80027be:	1e2b      	subs	r3, r5, #0
 80027c0:	bfb9      	ittee	lt
 80027c2:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80027c6:	9303      	strlt	r3, [sp, #12]
 80027c8:	2300      	movge	r3, #0
 80027ca:	6033      	strge	r3, [r6, #0]
 80027cc:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80027d0:	4b99      	ldr	r3, [pc, #612]	@ (8002a38 <_dtoa_r+0x2d0>)
 80027d2:	bfbc      	itt	lt
 80027d4:	2201      	movlt	r2, #1
 80027d6:	6032      	strlt	r2, [r6, #0]
 80027d8:	ea33 0308 	bics.w	r3, r3, r8
 80027dc:	d112      	bne.n	8002804 <_dtoa_r+0x9c>
 80027de:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80027e0:	f242 730f 	movw	r3, #9999	@ 0x270f
 80027e4:	6013      	str	r3, [r2, #0]
 80027e6:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80027ea:	4323      	orrs	r3, r4
 80027ec:	f000 8551 	beq.w	8003292 <_dtoa_r+0xb2a>
 80027f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80027f2:	f8df a248 	ldr.w	sl, [pc, #584]	@ 8002a3c <_dtoa_r+0x2d4>
 80027f6:	2b00      	cmp	r3, #0
 80027f8:	f000 8553 	beq.w	80032a2 <_dtoa_r+0xb3a>
 80027fc:	f10a 0303 	add.w	r3, sl, #3
 8002800:	f000 bd4d 	b.w	800329e <_dtoa_r+0xb36>
 8002804:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002808:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800280c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002810:	2200      	movs	r2, #0
 8002812:	2300      	movs	r3, #0
 8002814:	f7fe fa1e 	bl	8000c54 <__aeabi_dcmpeq>
 8002818:	4607      	mov	r7, r0
 800281a:	b158      	cbz	r0, 8002834 <_dtoa_r+0xcc>
 800281c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800281e:	2301      	movs	r3, #1
 8002820:	6013      	str	r3, [r2, #0]
 8002822:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002824:	b113      	cbz	r3, 800282c <_dtoa_r+0xc4>
 8002826:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8002828:	4b85      	ldr	r3, [pc, #532]	@ (8002a40 <_dtoa_r+0x2d8>)
 800282a:	6013      	str	r3, [r2, #0]
 800282c:	f8df a214 	ldr.w	sl, [pc, #532]	@ 8002a44 <_dtoa_r+0x2dc>
 8002830:	f000 bd37 	b.w	80032a2 <_dtoa_r+0xb3a>
 8002834:	ab14      	add	r3, sp, #80	@ 0x50
 8002836:	9301      	str	r3, [sp, #4]
 8002838:	ab15      	add	r3, sp, #84	@ 0x54
 800283a:	9300      	str	r3, [sp, #0]
 800283c:	4658      	mov	r0, fp
 800283e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8002842:	f001 facb 	bl	8003ddc <__d2b>
 8002846:	f3c8 560a 	ubfx	r6, r8, #20, #11
 800284a:	4681      	mov	r9, r0
 800284c:	2e00      	cmp	r6, #0
 800284e:	d076      	beq.n	800293e <_dtoa_r+0x1d6>
 8002850:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002852:	9712      	str	r7, [sp, #72]	@ 0x48
 8002854:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002858:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800285c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002860:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002864:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002868:	4619      	mov	r1, r3
 800286a:	2200      	movs	r2, #0
 800286c:	4b76      	ldr	r3, [pc, #472]	@ (8002a48 <_dtoa_r+0x2e0>)
 800286e:	f7fd fdd1 	bl	8000414 <__aeabi_dsub>
 8002872:	a369      	add	r3, pc, #420	@ (adr r3, 8002a18 <_dtoa_r+0x2b0>)
 8002874:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002878:	f7fd ff84 	bl	8000784 <__aeabi_dmul>
 800287c:	a368      	add	r3, pc, #416	@ (adr r3, 8002a20 <_dtoa_r+0x2b8>)
 800287e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002882:	f7fd fdc9 	bl	8000418 <__adddf3>
 8002886:	4604      	mov	r4, r0
 8002888:	4630      	mov	r0, r6
 800288a:	460d      	mov	r5, r1
 800288c:	f7fd ff10 	bl	80006b0 <__aeabi_i2d>
 8002890:	a365      	add	r3, pc, #404	@ (adr r3, 8002a28 <_dtoa_r+0x2c0>)
 8002892:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002896:	f7fd ff75 	bl	8000784 <__aeabi_dmul>
 800289a:	4602      	mov	r2, r0
 800289c:	460b      	mov	r3, r1
 800289e:	4620      	mov	r0, r4
 80028a0:	4629      	mov	r1, r5
 80028a2:	f7fd fdb9 	bl	8000418 <__adddf3>
 80028a6:	4604      	mov	r4, r0
 80028a8:	460d      	mov	r5, r1
 80028aa:	f7fe fa1b 	bl	8000ce4 <__aeabi_d2iz>
 80028ae:	2200      	movs	r2, #0
 80028b0:	4607      	mov	r7, r0
 80028b2:	2300      	movs	r3, #0
 80028b4:	4620      	mov	r0, r4
 80028b6:	4629      	mov	r1, r5
 80028b8:	f7fe f9d6 	bl	8000c68 <__aeabi_dcmplt>
 80028bc:	b140      	cbz	r0, 80028d0 <_dtoa_r+0x168>
 80028be:	4638      	mov	r0, r7
 80028c0:	f7fd fef6 	bl	80006b0 <__aeabi_i2d>
 80028c4:	4622      	mov	r2, r4
 80028c6:	462b      	mov	r3, r5
 80028c8:	f7fe f9c4 	bl	8000c54 <__aeabi_dcmpeq>
 80028cc:	b900      	cbnz	r0, 80028d0 <_dtoa_r+0x168>
 80028ce:	3f01      	subs	r7, #1
 80028d0:	2f16      	cmp	r7, #22
 80028d2:	d852      	bhi.n	800297a <_dtoa_r+0x212>
 80028d4:	4b5d      	ldr	r3, [pc, #372]	@ (8002a4c <_dtoa_r+0x2e4>)
 80028d6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80028da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028de:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80028e2:	f7fe f9c1 	bl	8000c68 <__aeabi_dcmplt>
 80028e6:	2800      	cmp	r0, #0
 80028e8:	d049      	beq.n	800297e <_dtoa_r+0x216>
 80028ea:	3f01      	subs	r7, #1
 80028ec:	2300      	movs	r3, #0
 80028ee:	930f      	str	r3, [sp, #60]	@ 0x3c
 80028f0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80028f2:	1b9b      	subs	r3, r3, r6
 80028f4:	1e5a      	subs	r2, r3, #1
 80028f6:	bf44      	itt	mi
 80028f8:	f1c3 0801 	rsbmi	r8, r3, #1
 80028fc:	2300      	movmi	r3, #0
 80028fe:	9209      	str	r2, [sp, #36]	@ 0x24
 8002900:	bf54      	ite	pl
 8002902:	f04f 0800 	movpl.w	r8, #0
 8002906:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8002908:	2f00      	cmp	r7, #0
 800290a:	db3a      	blt.n	8002982 <_dtoa_r+0x21a>
 800290c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800290e:	970e      	str	r7, [sp, #56]	@ 0x38
 8002910:	443b      	add	r3, r7
 8002912:	9309      	str	r3, [sp, #36]	@ 0x24
 8002914:	2300      	movs	r3, #0
 8002916:	930a      	str	r3, [sp, #40]	@ 0x28
 8002918:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800291a:	2b09      	cmp	r3, #9
 800291c:	d865      	bhi.n	80029ea <_dtoa_r+0x282>
 800291e:	2b05      	cmp	r3, #5
 8002920:	bfc4      	itt	gt
 8002922:	3b04      	subgt	r3, #4
 8002924:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8002926:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002928:	f1a3 0302 	sub.w	r3, r3, #2
 800292c:	bfcc      	ite	gt
 800292e:	2400      	movgt	r4, #0
 8002930:	2401      	movle	r4, #1
 8002932:	2b03      	cmp	r3, #3
 8002934:	d864      	bhi.n	8002a00 <_dtoa_r+0x298>
 8002936:	e8df f003 	tbb	[pc, r3]
 800293a:	382b      	.short	0x382b
 800293c:	5636      	.short	0x5636
 800293e:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8002942:	441e      	add	r6, r3
 8002944:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002948:	2b20      	cmp	r3, #32
 800294a:	bfc1      	itttt	gt
 800294c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002950:	fa08 f803 	lslgt.w	r8, r8, r3
 8002954:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002958:	fa24 f303 	lsrgt.w	r3, r4, r3
 800295c:	bfd6      	itet	le
 800295e:	f1c3 0320 	rsble	r3, r3, #32
 8002962:	ea48 0003 	orrgt.w	r0, r8, r3
 8002966:	fa04 f003 	lslle.w	r0, r4, r3
 800296a:	f7fd fe91 	bl	8000690 <__aeabi_ui2d>
 800296e:	2201      	movs	r2, #1
 8002970:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002974:	3e01      	subs	r6, #1
 8002976:	9212      	str	r2, [sp, #72]	@ 0x48
 8002978:	e776      	b.n	8002868 <_dtoa_r+0x100>
 800297a:	2301      	movs	r3, #1
 800297c:	e7b7      	b.n	80028ee <_dtoa_r+0x186>
 800297e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8002980:	e7b6      	b.n	80028f0 <_dtoa_r+0x188>
 8002982:	427b      	negs	r3, r7
 8002984:	930a      	str	r3, [sp, #40]	@ 0x28
 8002986:	2300      	movs	r3, #0
 8002988:	eba8 0807 	sub.w	r8, r8, r7
 800298c:	930e      	str	r3, [sp, #56]	@ 0x38
 800298e:	e7c3      	b.n	8002918 <_dtoa_r+0x1b0>
 8002990:	2300      	movs	r3, #0
 8002992:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002994:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002996:	2b00      	cmp	r3, #0
 8002998:	dc35      	bgt.n	8002a06 <_dtoa_r+0x29e>
 800299a:	2301      	movs	r3, #1
 800299c:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80029a0:	461a      	mov	r2, r3
 80029a2:	9221      	str	r2, [sp, #132]	@ 0x84
 80029a4:	e00b      	b.n	80029be <_dtoa_r+0x256>
 80029a6:	2301      	movs	r3, #1
 80029a8:	e7f3      	b.n	8002992 <_dtoa_r+0x22a>
 80029aa:	2300      	movs	r3, #0
 80029ac:	930b      	str	r3, [sp, #44]	@ 0x2c
 80029ae:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80029b0:	18fb      	adds	r3, r7, r3
 80029b2:	9308      	str	r3, [sp, #32]
 80029b4:	3301      	adds	r3, #1
 80029b6:	2b01      	cmp	r3, #1
 80029b8:	9307      	str	r3, [sp, #28]
 80029ba:	bfb8      	it	lt
 80029bc:	2301      	movlt	r3, #1
 80029be:	f8db 001c 	ldr.w	r0, [fp, #28]
 80029c2:	2100      	movs	r1, #0
 80029c4:	2204      	movs	r2, #4
 80029c6:	f102 0514 	add.w	r5, r2, #20
 80029ca:	429d      	cmp	r5, r3
 80029cc:	d91f      	bls.n	8002a0e <_dtoa_r+0x2a6>
 80029ce:	6041      	str	r1, [r0, #4]
 80029d0:	4658      	mov	r0, fp
 80029d2:	f000 fedb 	bl	800378c <_Balloc>
 80029d6:	4682      	mov	sl, r0
 80029d8:	2800      	cmp	r0, #0
 80029da:	d13b      	bne.n	8002a54 <_dtoa_r+0x2ec>
 80029dc:	4b1c      	ldr	r3, [pc, #112]	@ (8002a50 <_dtoa_r+0x2e8>)
 80029de:	4602      	mov	r2, r0
 80029e0:	f240 11af 	movw	r1, #431	@ 0x1af
 80029e4:	e6d4      	b.n	8002790 <_dtoa_r+0x28>
 80029e6:	2301      	movs	r3, #1
 80029e8:	e7e0      	b.n	80029ac <_dtoa_r+0x244>
 80029ea:	2401      	movs	r4, #1
 80029ec:	2300      	movs	r3, #0
 80029ee:	9320      	str	r3, [sp, #128]	@ 0x80
 80029f0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80029f2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80029f6:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80029fa:	2200      	movs	r2, #0
 80029fc:	2312      	movs	r3, #18
 80029fe:	e7d0      	b.n	80029a2 <_dtoa_r+0x23a>
 8002a00:	2301      	movs	r3, #1
 8002a02:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002a04:	e7f5      	b.n	80029f2 <_dtoa_r+0x28a>
 8002a06:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002a08:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002a0c:	e7d7      	b.n	80029be <_dtoa_r+0x256>
 8002a0e:	3101      	adds	r1, #1
 8002a10:	0052      	lsls	r2, r2, #1
 8002a12:	e7d8      	b.n	80029c6 <_dtoa_r+0x25e>
 8002a14:	f3af 8000 	nop.w
 8002a18:	636f4361 	.word	0x636f4361
 8002a1c:	3fd287a7 	.word	0x3fd287a7
 8002a20:	8b60c8b3 	.word	0x8b60c8b3
 8002a24:	3fc68a28 	.word	0x3fc68a28
 8002a28:	509f79fb 	.word	0x509f79fb
 8002a2c:	3fd34413 	.word	0x3fd34413
 8002a30:	0800483a 	.word	0x0800483a
 8002a34:	08004851 	.word	0x08004851
 8002a38:	7ff00000 	.word	0x7ff00000
 8002a3c:	08004836 	.word	0x08004836
 8002a40:	0800480a 	.word	0x0800480a
 8002a44:	08004809 	.word	0x08004809
 8002a48:	3ff80000 	.word	0x3ff80000
 8002a4c:	08004958 	.word	0x08004958
 8002a50:	080048a9 	.word	0x080048a9
 8002a54:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002a58:	6018      	str	r0, [r3, #0]
 8002a5a:	9b07      	ldr	r3, [sp, #28]
 8002a5c:	2b0e      	cmp	r3, #14
 8002a5e:	f200 80a4 	bhi.w	8002baa <_dtoa_r+0x442>
 8002a62:	2c00      	cmp	r4, #0
 8002a64:	f000 80a1 	beq.w	8002baa <_dtoa_r+0x442>
 8002a68:	2f00      	cmp	r7, #0
 8002a6a:	dd33      	ble.n	8002ad4 <_dtoa_r+0x36c>
 8002a6c:	4b86      	ldr	r3, [pc, #536]	@ (8002c88 <_dtoa_r+0x520>)
 8002a6e:	f007 020f 	and.w	r2, r7, #15
 8002a72:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002a76:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002a7a:	05f8      	lsls	r0, r7, #23
 8002a7c:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002a80:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002a84:	d516      	bpl.n	8002ab4 <_dtoa_r+0x34c>
 8002a86:	4b81      	ldr	r3, [pc, #516]	@ (8002c8c <_dtoa_r+0x524>)
 8002a88:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002a8c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002a90:	f7fd ffa2 	bl	80009d8 <__aeabi_ddiv>
 8002a94:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a98:	f004 040f 	and.w	r4, r4, #15
 8002a9c:	2603      	movs	r6, #3
 8002a9e:	4d7b      	ldr	r5, [pc, #492]	@ (8002c8c <_dtoa_r+0x524>)
 8002aa0:	b954      	cbnz	r4, 8002ab8 <_dtoa_r+0x350>
 8002aa2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002aa6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002aaa:	f7fd ff95 	bl	80009d8 <__aeabi_ddiv>
 8002aae:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002ab2:	e028      	b.n	8002b06 <_dtoa_r+0x39e>
 8002ab4:	2602      	movs	r6, #2
 8002ab6:	e7f2      	b.n	8002a9e <_dtoa_r+0x336>
 8002ab8:	07e1      	lsls	r1, r4, #31
 8002aba:	d508      	bpl.n	8002ace <_dtoa_r+0x366>
 8002abc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002ac0:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002ac4:	f7fd fe5e 	bl	8000784 <__aeabi_dmul>
 8002ac8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002acc:	3601      	adds	r6, #1
 8002ace:	1064      	asrs	r4, r4, #1
 8002ad0:	3508      	adds	r5, #8
 8002ad2:	e7e5      	b.n	8002aa0 <_dtoa_r+0x338>
 8002ad4:	f000 80d2 	beq.w	8002c7c <_dtoa_r+0x514>
 8002ad8:	427c      	negs	r4, r7
 8002ada:	4b6b      	ldr	r3, [pc, #428]	@ (8002c88 <_dtoa_r+0x520>)
 8002adc:	4d6b      	ldr	r5, [pc, #428]	@ (8002c8c <_dtoa_r+0x524>)
 8002ade:	f004 020f 	and.w	r2, r4, #15
 8002ae2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002ae6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002aea:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002aee:	f7fd fe49 	bl	8000784 <__aeabi_dmul>
 8002af2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002af6:	1124      	asrs	r4, r4, #4
 8002af8:	2300      	movs	r3, #0
 8002afa:	2602      	movs	r6, #2
 8002afc:	2c00      	cmp	r4, #0
 8002afe:	f040 80b2 	bne.w	8002c66 <_dtoa_r+0x4fe>
 8002b02:	2b00      	cmp	r3, #0
 8002b04:	d1d3      	bne.n	8002aae <_dtoa_r+0x346>
 8002b06:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002b08:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002b0c:	2b00      	cmp	r3, #0
 8002b0e:	f000 80b7 	beq.w	8002c80 <_dtoa_r+0x518>
 8002b12:	4b5f      	ldr	r3, [pc, #380]	@ (8002c90 <_dtoa_r+0x528>)
 8002b14:	2200      	movs	r2, #0
 8002b16:	4620      	mov	r0, r4
 8002b18:	4629      	mov	r1, r5
 8002b1a:	f7fe f8a5 	bl	8000c68 <__aeabi_dcmplt>
 8002b1e:	2800      	cmp	r0, #0
 8002b20:	f000 80ae 	beq.w	8002c80 <_dtoa_r+0x518>
 8002b24:	9b07      	ldr	r3, [sp, #28]
 8002b26:	2b00      	cmp	r3, #0
 8002b28:	f000 80aa 	beq.w	8002c80 <_dtoa_r+0x518>
 8002b2c:	9b08      	ldr	r3, [sp, #32]
 8002b2e:	2b00      	cmp	r3, #0
 8002b30:	dd37      	ble.n	8002ba2 <_dtoa_r+0x43a>
 8002b32:	1e7b      	subs	r3, r7, #1
 8002b34:	9304      	str	r3, [sp, #16]
 8002b36:	4620      	mov	r0, r4
 8002b38:	4b56      	ldr	r3, [pc, #344]	@ (8002c94 <_dtoa_r+0x52c>)
 8002b3a:	2200      	movs	r2, #0
 8002b3c:	4629      	mov	r1, r5
 8002b3e:	f7fd fe21 	bl	8000784 <__aeabi_dmul>
 8002b42:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b46:	9c08      	ldr	r4, [sp, #32]
 8002b48:	3601      	adds	r6, #1
 8002b4a:	4630      	mov	r0, r6
 8002b4c:	f7fd fdb0 	bl	80006b0 <__aeabi_i2d>
 8002b50:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b54:	f7fd fe16 	bl	8000784 <__aeabi_dmul>
 8002b58:	4b4f      	ldr	r3, [pc, #316]	@ (8002c98 <_dtoa_r+0x530>)
 8002b5a:	2200      	movs	r2, #0
 8002b5c:	f7fd fc5c 	bl	8000418 <__adddf3>
 8002b60:	4605      	mov	r5, r0
 8002b62:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002b66:	2c00      	cmp	r4, #0
 8002b68:	f040 809a 	bne.w	8002ca0 <_dtoa_r+0x538>
 8002b6c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b70:	4b4a      	ldr	r3, [pc, #296]	@ (8002c9c <_dtoa_r+0x534>)
 8002b72:	2200      	movs	r2, #0
 8002b74:	f7fd fc4e 	bl	8000414 <__aeabi_dsub>
 8002b78:	4602      	mov	r2, r0
 8002b7a:	460b      	mov	r3, r1
 8002b7c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002b80:	462a      	mov	r2, r5
 8002b82:	4633      	mov	r3, r6
 8002b84:	f7fe f88e 	bl	8000ca4 <__aeabi_dcmpgt>
 8002b88:	2800      	cmp	r0, #0
 8002b8a:	f040 828e 	bne.w	80030aa <_dtoa_r+0x942>
 8002b8e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b92:	462a      	mov	r2, r5
 8002b94:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002b98:	f7fe f866 	bl	8000c68 <__aeabi_dcmplt>
 8002b9c:	2800      	cmp	r0, #0
 8002b9e:	f040 8127 	bne.w	8002df0 <_dtoa_r+0x688>
 8002ba2:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002ba6:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002baa:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	f2c0 8163 	blt.w	8002e78 <_dtoa_r+0x710>
 8002bb2:	2f0e      	cmp	r7, #14
 8002bb4:	f300 8160 	bgt.w	8002e78 <_dtoa_r+0x710>
 8002bb8:	4b33      	ldr	r3, [pc, #204]	@ (8002c88 <_dtoa_r+0x520>)
 8002bba:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002bbe:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002bc2:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002bc6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	da03      	bge.n	8002bd4 <_dtoa_r+0x46c>
 8002bcc:	9b07      	ldr	r3, [sp, #28]
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	f340 8100 	ble.w	8002dd4 <_dtoa_r+0x66c>
 8002bd4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002bd8:	4656      	mov	r6, sl
 8002bda:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002bde:	4620      	mov	r0, r4
 8002be0:	4629      	mov	r1, r5
 8002be2:	f7fd fef9 	bl	80009d8 <__aeabi_ddiv>
 8002be6:	f7fe f87d 	bl	8000ce4 <__aeabi_d2iz>
 8002bea:	4680      	mov	r8, r0
 8002bec:	f7fd fd60 	bl	80006b0 <__aeabi_i2d>
 8002bf0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002bf4:	f7fd fdc6 	bl	8000784 <__aeabi_dmul>
 8002bf8:	4602      	mov	r2, r0
 8002bfa:	460b      	mov	r3, r1
 8002bfc:	4620      	mov	r0, r4
 8002bfe:	4629      	mov	r1, r5
 8002c00:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002c04:	f7fd fc06 	bl	8000414 <__aeabi_dsub>
 8002c08:	f806 4b01 	strb.w	r4, [r6], #1
 8002c0c:	9d07      	ldr	r5, [sp, #28]
 8002c0e:	eba6 040a 	sub.w	r4, r6, sl
 8002c12:	42a5      	cmp	r5, r4
 8002c14:	4602      	mov	r2, r0
 8002c16:	460b      	mov	r3, r1
 8002c18:	f040 8116 	bne.w	8002e48 <_dtoa_r+0x6e0>
 8002c1c:	f7fd fbfc 	bl	8000418 <__adddf3>
 8002c20:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c24:	4604      	mov	r4, r0
 8002c26:	460d      	mov	r5, r1
 8002c28:	f7fe f83c 	bl	8000ca4 <__aeabi_dcmpgt>
 8002c2c:	2800      	cmp	r0, #0
 8002c2e:	f040 80f8 	bne.w	8002e22 <_dtoa_r+0x6ba>
 8002c32:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c36:	4620      	mov	r0, r4
 8002c38:	4629      	mov	r1, r5
 8002c3a:	f7fe f80b 	bl	8000c54 <__aeabi_dcmpeq>
 8002c3e:	b118      	cbz	r0, 8002c48 <_dtoa_r+0x4e0>
 8002c40:	f018 0f01 	tst.w	r8, #1
 8002c44:	f040 80ed 	bne.w	8002e22 <_dtoa_r+0x6ba>
 8002c48:	4649      	mov	r1, r9
 8002c4a:	4658      	mov	r0, fp
 8002c4c:	f000 fdde 	bl	800380c <_Bfree>
 8002c50:	2300      	movs	r3, #0
 8002c52:	7033      	strb	r3, [r6, #0]
 8002c54:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8002c56:	3701      	adds	r7, #1
 8002c58:	601f      	str	r7, [r3, #0]
 8002c5a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	f000 8320 	beq.w	80032a2 <_dtoa_r+0xb3a>
 8002c62:	601e      	str	r6, [r3, #0]
 8002c64:	e31d      	b.n	80032a2 <_dtoa_r+0xb3a>
 8002c66:	07e2      	lsls	r2, r4, #31
 8002c68:	d505      	bpl.n	8002c76 <_dtoa_r+0x50e>
 8002c6a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002c6e:	f7fd fd89 	bl	8000784 <__aeabi_dmul>
 8002c72:	3601      	adds	r6, #1
 8002c74:	2301      	movs	r3, #1
 8002c76:	1064      	asrs	r4, r4, #1
 8002c78:	3508      	adds	r5, #8
 8002c7a:	e73f      	b.n	8002afc <_dtoa_r+0x394>
 8002c7c:	2602      	movs	r6, #2
 8002c7e:	e742      	b.n	8002b06 <_dtoa_r+0x39e>
 8002c80:	9c07      	ldr	r4, [sp, #28]
 8002c82:	9704      	str	r7, [sp, #16]
 8002c84:	e761      	b.n	8002b4a <_dtoa_r+0x3e2>
 8002c86:	bf00      	nop
 8002c88:	08004958 	.word	0x08004958
 8002c8c:	08004930 	.word	0x08004930
 8002c90:	3ff00000 	.word	0x3ff00000
 8002c94:	40240000 	.word	0x40240000
 8002c98:	401c0000 	.word	0x401c0000
 8002c9c:	40140000 	.word	0x40140000
 8002ca0:	4b70      	ldr	r3, [pc, #448]	@ (8002e64 <_dtoa_r+0x6fc>)
 8002ca2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002ca4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002ca8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002cac:	4454      	add	r4, sl
 8002cae:	2900      	cmp	r1, #0
 8002cb0:	d045      	beq.n	8002d3e <_dtoa_r+0x5d6>
 8002cb2:	496d      	ldr	r1, [pc, #436]	@ (8002e68 <_dtoa_r+0x700>)
 8002cb4:	2000      	movs	r0, #0
 8002cb6:	f7fd fe8f 	bl	80009d8 <__aeabi_ddiv>
 8002cba:	4633      	mov	r3, r6
 8002cbc:	462a      	mov	r2, r5
 8002cbe:	f7fd fba9 	bl	8000414 <__aeabi_dsub>
 8002cc2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002cc6:	4656      	mov	r6, sl
 8002cc8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ccc:	f7fe f80a 	bl	8000ce4 <__aeabi_d2iz>
 8002cd0:	4605      	mov	r5, r0
 8002cd2:	f7fd fced 	bl	80006b0 <__aeabi_i2d>
 8002cd6:	4602      	mov	r2, r0
 8002cd8:	460b      	mov	r3, r1
 8002cda:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002cde:	f7fd fb99 	bl	8000414 <__aeabi_dsub>
 8002ce2:	3530      	adds	r5, #48	@ 0x30
 8002ce4:	4602      	mov	r2, r0
 8002ce6:	460b      	mov	r3, r1
 8002ce8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002cec:	f806 5b01 	strb.w	r5, [r6], #1
 8002cf0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002cf4:	f7fd ffb8 	bl	8000c68 <__aeabi_dcmplt>
 8002cf8:	2800      	cmp	r0, #0
 8002cfa:	d163      	bne.n	8002dc4 <_dtoa_r+0x65c>
 8002cfc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002d00:	495a      	ldr	r1, [pc, #360]	@ (8002e6c <_dtoa_r+0x704>)
 8002d02:	2000      	movs	r0, #0
 8002d04:	f7fd fb86 	bl	8000414 <__aeabi_dsub>
 8002d08:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002d0c:	f7fd ffac 	bl	8000c68 <__aeabi_dcmplt>
 8002d10:	2800      	cmp	r0, #0
 8002d12:	f040 8087 	bne.w	8002e24 <_dtoa_r+0x6bc>
 8002d16:	42a6      	cmp	r6, r4
 8002d18:	f43f af43 	beq.w	8002ba2 <_dtoa_r+0x43a>
 8002d1c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002d20:	4b53      	ldr	r3, [pc, #332]	@ (8002e70 <_dtoa_r+0x708>)
 8002d22:	2200      	movs	r2, #0
 8002d24:	f7fd fd2e 	bl	8000784 <__aeabi_dmul>
 8002d28:	4b51      	ldr	r3, [pc, #324]	@ (8002e70 <_dtoa_r+0x708>)
 8002d2a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002d2e:	2200      	movs	r2, #0
 8002d30:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d34:	f7fd fd26 	bl	8000784 <__aeabi_dmul>
 8002d38:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002d3c:	e7c4      	b.n	8002cc8 <_dtoa_r+0x560>
 8002d3e:	4631      	mov	r1, r6
 8002d40:	4628      	mov	r0, r5
 8002d42:	f7fd fd1f 	bl	8000784 <__aeabi_dmul>
 8002d46:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002d4a:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002d4c:	4656      	mov	r6, sl
 8002d4e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d52:	f7fd ffc7 	bl	8000ce4 <__aeabi_d2iz>
 8002d56:	4605      	mov	r5, r0
 8002d58:	f7fd fcaa 	bl	80006b0 <__aeabi_i2d>
 8002d5c:	4602      	mov	r2, r0
 8002d5e:	460b      	mov	r3, r1
 8002d60:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d64:	f7fd fb56 	bl	8000414 <__aeabi_dsub>
 8002d68:	3530      	adds	r5, #48	@ 0x30
 8002d6a:	f806 5b01 	strb.w	r5, [r6], #1
 8002d6e:	4602      	mov	r2, r0
 8002d70:	460b      	mov	r3, r1
 8002d72:	42a6      	cmp	r6, r4
 8002d74:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002d78:	f04f 0200 	mov.w	r2, #0
 8002d7c:	d124      	bne.n	8002dc8 <_dtoa_r+0x660>
 8002d7e:	4b3a      	ldr	r3, [pc, #232]	@ (8002e68 <_dtoa_r+0x700>)
 8002d80:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002d84:	f7fd fb48 	bl	8000418 <__adddf3>
 8002d88:	4602      	mov	r2, r0
 8002d8a:	460b      	mov	r3, r1
 8002d8c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d90:	f7fd ff88 	bl	8000ca4 <__aeabi_dcmpgt>
 8002d94:	2800      	cmp	r0, #0
 8002d96:	d145      	bne.n	8002e24 <_dtoa_r+0x6bc>
 8002d98:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002d9c:	4932      	ldr	r1, [pc, #200]	@ (8002e68 <_dtoa_r+0x700>)
 8002d9e:	2000      	movs	r0, #0
 8002da0:	f7fd fb38 	bl	8000414 <__aeabi_dsub>
 8002da4:	4602      	mov	r2, r0
 8002da6:	460b      	mov	r3, r1
 8002da8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002dac:	f7fd ff5c 	bl	8000c68 <__aeabi_dcmplt>
 8002db0:	2800      	cmp	r0, #0
 8002db2:	f43f aef6 	beq.w	8002ba2 <_dtoa_r+0x43a>
 8002db6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8002db8:	1e73      	subs	r3, r6, #1
 8002dba:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002dbc:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002dc0:	2b30      	cmp	r3, #48	@ 0x30
 8002dc2:	d0f8      	beq.n	8002db6 <_dtoa_r+0x64e>
 8002dc4:	9f04      	ldr	r7, [sp, #16]
 8002dc6:	e73f      	b.n	8002c48 <_dtoa_r+0x4e0>
 8002dc8:	4b29      	ldr	r3, [pc, #164]	@ (8002e70 <_dtoa_r+0x708>)
 8002dca:	f7fd fcdb 	bl	8000784 <__aeabi_dmul>
 8002dce:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002dd2:	e7bc      	b.n	8002d4e <_dtoa_r+0x5e6>
 8002dd4:	d10c      	bne.n	8002df0 <_dtoa_r+0x688>
 8002dd6:	4b27      	ldr	r3, [pc, #156]	@ (8002e74 <_dtoa_r+0x70c>)
 8002dd8:	2200      	movs	r2, #0
 8002dda:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002dde:	f7fd fcd1 	bl	8000784 <__aeabi_dmul>
 8002de2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002de6:	f7fd ff53 	bl	8000c90 <__aeabi_dcmpge>
 8002dea:	2800      	cmp	r0, #0
 8002dec:	f000 815b 	beq.w	80030a6 <_dtoa_r+0x93e>
 8002df0:	2400      	movs	r4, #0
 8002df2:	4625      	mov	r5, r4
 8002df4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002df6:	43db      	mvns	r3, r3
 8002df8:	9304      	str	r3, [sp, #16]
 8002dfa:	4656      	mov	r6, sl
 8002dfc:	2700      	movs	r7, #0
 8002dfe:	4621      	mov	r1, r4
 8002e00:	4658      	mov	r0, fp
 8002e02:	f000 fd03 	bl	800380c <_Bfree>
 8002e06:	2d00      	cmp	r5, #0
 8002e08:	d0dc      	beq.n	8002dc4 <_dtoa_r+0x65c>
 8002e0a:	b12f      	cbz	r7, 8002e18 <_dtoa_r+0x6b0>
 8002e0c:	42af      	cmp	r7, r5
 8002e0e:	d003      	beq.n	8002e18 <_dtoa_r+0x6b0>
 8002e10:	4639      	mov	r1, r7
 8002e12:	4658      	mov	r0, fp
 8002e14:	f000 fcfa 	bl	800380c <_Bfree>
 8002e18:	4629      	mov	r1, r5
 8002e1a:	4658      	mov	r0, fp
 8002e1c:	f000 fcf6 	bl	800380c <_Bfree>
 8002e20:	e7d0      	b.n	8002dc4 <_dtoa_r+0x65c>
 8002e22:	9704      	str	r7, [sp, #16]
 8002e24:	4633      	mov	r3, r6
 8002e26:	461e      	mov	r6, r3
 8002e28:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002e2c:	2a39      	cmp	r2, #57	@ 0x39
 8002e2e:	d107      	bne.n	8002e40 <_dtoa_r+0x6d8>
 8002e30:	459a      	cmp	sl, r3
 8002e32:	d1f8      	bne.n	8002e26 <_dtoa_r+0x6be>
 8002e34:	9a04      	ldr	r2, [sp, #16]
 8002e36:	3201      	adds	r2, #1
 8002e38:	9204      	str	r2, [sp, #16]
 8002e3a:	2230      	movs	r2, #48	@ 0x30
 8002e3c:	f88a 2000 	strb.w	r2, [sl]
 8002e40:	781a      	ldrb	r2, [r3, #0]
 8002e42:	3201      	adds	r2, #1
 8002e44:	701a      	strb	r2, [r3, #0]
 8002e46:	e7bd      	b.n	8002dc4 <_dtoa_r+0x65c>
 8002e48:	4b09      	ldr	r3, [pc, #36]	@ (8002e70 <_dtoa_r+0x708>)
 8002e4a:	2200      	movs	r2, #0
 8002e4c:	f7fd fc9a 	bl	8000784 <__aeabi_dmul>
 8002e50:	2200      	movs	r2, #0
 8002e52:	2300      	movs	r3, #0
 8002e54:	4604      	mov	r4, r0
 8002e56:	460d      	mov	r5, r1
 8002e58:	f7fd fefc 	bl	8000c54 <__aeabi_dcmpeq>
 8002e5c:	2800      	cmp	r0, #0
 8002e5e:	f43f aebc 	beq.w	8002bda <_dtoa_r+0x472>
 8002e62:	e6f1      	b.n	8002c48 <_dtoa_r+0x4e0>
 8002e64:	08004958 	.word	0x08004958
 8002e68:	3fe00000 	.word	0x3fe00000
 8002e6c:	3ff00000 	.word	0x3ff00000
 8002e70:	40240000 	.word	0x40240000
 8002e74:	40140000 	.word	0x40140000
 8002e78:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002e7a:	2a00      	cmp	r2, #0
 8002e7c:	f000 80db 	beq.w	8003036 <_dtoa_r+0x8ce>
 8002e80:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8002e82:	2a01      	cmp	r2, #1
 8002e84:	f300 80bf 	bgt.w	8003006 <_dtoa_r+0x89e>
 8002e88:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002e8a:	2a00      	cmp	r2, #0
 8002e8c:	f000 80b7 	beq.w	8002ffe <_dtoa_r+0x896>
 8002e90:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002e94:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002e96:	4646      	mov	r6, r8
 8002e98:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002e9a:	2101      	movs	r1, #1
 8002e9c:	441a      	add	r2, r3
 8002e9e:	4658      	mov	r0, fp
 8002ea0:	4498      	add	r8, r3
 8002ea2:	9209      	str	r2, [sp, #36]	@ 0x24
 8002ea4:	f000 fd66 	bl	8003974 <__i2b>
 8002ea8:	4605      	mov	r5, r0
 8002eaa:	b15e      	cbz	r6, 8002ec4 <_dtoa_r+0x75c>
 8002eac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	dd08      	ble.n	8002ec4 <_dtoa_r+0x75c>
 8002eb2:	42b3      	cmp	r3, r6
 8002eb4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002eb6:	bfa8      	it	ge
 8002eb8:	4633      	movge	r3, r6
 8002eba:	eba8 0803 	sub.w	r8, r8, r3
 8002ebe:	1af6      	subs	r6, r6, r3
 8002ec0:	1ad3      	subs	r3, r2, r3
 8002ec2:	9309      	str	r3, [sp, #36]	@ 0x24
 8002ec4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002ec6:	b1f3      	cbz	r3, 8002f06 <_dtoa_r+0x79e>
 8002ec8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	f000 80b7 	beq.w	800303e <_dtoa_r+0x8d6>
 8002ed0:	b18c      	cbz	r4, 8002ef6 <_dtoa_r+0x78e>
 8002ed2:	4629      	mov	r1, r5
 8002ed4:	4622      	mov	r2, r4
 8002ed6:	4658      	mov	r0, fp
 8002ed8:	f000 fe0c 	bl	8003af4 <__pow5mult>
 8002edc:	464a      	mov	r2, r9
 8002ede:	4601      	mov	r1, r0
 8002ee0:	4605      	mov	r5, r0
 8002ee2:	4658      	mov	r0, fp
 8002ee4:	f000 fd5c 	bl	80039a0 <__multiply>
 8002ee8:	4649      	mov	r1, r9
 8002eea:	9004      	str	r0, [sp, #16]
 8002eec:	4658      	mov	r0, fp
 8002eee:	f000 fc8d 	bl	800380c <_Bfree>
 8002ef2:	9b04      	ldr	r3, [sp, #16]
 8002ef4:	4699      	mov	r9, r3
 8002ef6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002ef8:	1b1a      	subs	r2, r3, r4
 8002efa:	d004      	beq.n	8002f06 <_dtoa_r+0x79e>
 8002efc:	4649      	mov	r1, r9
 8002efe:	4658      	mov	r0, fp
 8002f00:	f000 fdf8 	bl	8003af4 <__pow5mult>
 8002f04:	4681      	mov	r9, r0
 8002f06:	2101      	movs	r1, #1
 8002f08:	4658      	mov	r0, fp
 8002f0a:	f000 fd33 	bl	8003974 <__i2b>
 8002f0e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002f10:	4604      	mov	r4, r0
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	f000 81c9 	beq.w	80032aa <_dtoa_r+0xb42>
 8002f18:	461a      	mov	r2, r3
 8002f1a:	4601      	mov	r1, r0
 8002f1c:	4658      	mov	r0, fp
 8002f1e:	f000 fde9 	bl	8003af4 <__pow5mult>
 8002f22:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002f24:	2b01      	cmp	r3, #1
 8002f26:	4604      	mov	r4, r0
 8002f28:	f300 808f 	bgt.w	800304a <_dtoa_r+0x8e2>
 8002f2c:	9b02      	ldr	r3, [sp, #8]
 8002f2e:	2b00      	cmp	r3, #0
 8002f30:	f040 8087 	bne.w	8003042 <_dtoa_r+0x8da>
 8002f34:	9b03      	ldr	r3, [sp, #12]
 8002f36:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	f040 8083 	bne.w	8003046 <_dtoa_r+0x8de>
 8002f40:	9b03      	ldr	r3, [sp, #12]
 8002f42:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002f46:	0d1b      	lsrs	r3, r3, #20
 8002f48:	051b      	lsls	r3, r3, #20
 8002f4a:	b12b      	cbz	r3, 8002f58 <_dtoa_r+0x7f0>
 8002f4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f4e:	3301      	adds	r3, #1
 8002f50:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f52:	f108 0801 	add.w	r8, r8, #1
 8002f56:	2301      	movs	r3, #1
 8002f58:	930a      	str	r3, [sp, #40]	@ 0x28
 8002f5a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002f5c:	2b00      	cmp	r3, #0
 8002f5e:	f000 81aa 	beq.w	80032b6 <_dtoa_r+0xb4e>
 8002f62:	6923      	ldr	r3, [r4, #16]
 8002f64:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002f68:	6918      	ldr	r0, [r3, #16]
 8002f6a:	f000 fcb7 	bl	80038dc <__hi0bits>
 8002f6e:	f1c0 0020 	rsb	r0, r0, #32
 8002f72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f74:	4418      	add	r0, r3
 8002f76:	f010 001f 	ands.w	r0, r0, #31
 8002f7a:	d071      	beq.n	8003060 <_dtoa_r+0x8f8>
 8002f7c:	f1c0 0320 	rsb	r3, r0, #32
 8002f80:	2b04      	cmp	r3, #4
 8002f82:	dd65      	ble.n	8003050 <_dtoa_r+0x8e8>
 8002f84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f86:	f1c0 001c 	rsb	r0, r0, #28
 8002f8a:	4403      	add	r3, r0
 8002f8c:	4480      	add	r8, r0
 8002f8e:	4406      	add	r6, r0
 8002f90:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f92:	f1b8 0f00 	cmp.w	r8, #0
 8002f96:	dd05      	ble.n	8002fa4 <_dtoa_r+0x83c>
 8002f98:	4649      	mov	r1, r9
 8002f9a:	4642      	mov	r2, r8
 8002f9c:	4658      	mov	r0, fp
 8002f9e:	f000 fe03 	bl	8003ba8 <__lshift>
 8002fa2:	4681      	mov	r9, r0
 8002fa4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	dd05      	ble.n	8002fb6 <_dtoa_r+0x84e>
 8002faa:	4621      	mov	r1, r4
 8002fac:	461a      	mov	r2, r3
 8002fae:	4658      	mov	r0, fp
 8002fb0:	f000 fdfa 	bl	8003ba8 <__lshift>
 8002fb4:	4604      	mov	r4, r0
 8002fb6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002fb8:	2b00      	cmp	r3, #0
 8002fba:	d053      	beq.n	8003064 <_dtoa_r+0x8fc>
 8002fbc:	4621      	mov	r1, r4
 8002fbe:	4648      	mov	r0, r9
 8002fc0:	f000 fe5e 	bl	8003c80 <__mcmp>
 8002fc4:	2800      	cmp	r0, #0
 8002fc6:	da4d      	bge.n	8003064 <_dtoa_r+0x8fc>
 8002fc8:	1e7b      	subs	r3, r7, #1
 8002fca:	9304      	str	r3, [sp, #16]
 8002fcc:	4649      	mov	r1, r9
 8002fce:	2300      	movs	r3, #0
 8002fd0:	220a      	movs	r2, #10
 8002fd2:	4658      	mov	r0, fp
 8002fd4:	f000 fc3c 	bl	8003850 <__multadd>
 8002fd8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002fda:	4681      	mov	r9, r0
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	f000 816c 	beq.w	80032ba <_dtoa_r+0xb52>
 8002fe2:	2300      	movs	r3, #0
 8002fe4:	4629      	mov	r1, r5
 8002fe6:	220a      	movs	r2, #10
 8002fe8:	4658      	mov	r0, fp
 8002fea:	f000 fc31 	bl	8003850 <__multadd>
 8002fee:	9b08      	ldr	r3, [sp, #32]
 8002ff0:	2b00      	cmp	r3, #0
 8002ff2:	4605      	mov	r5, r0
 8002ff4:	dc61      	bgt.n	80030ba <_dtoa_r+0x952>
 8002ff6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002ff8:	2b02      	cmp	r3, #2
 8002ffa:	dc3b      	bgt.n	8003074 <_dtoa_r+0x90c>
 8002ffc:	e05d      	b.n	80030ba <_dtoa_r+0x952>
 8002ffe:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003000:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003004:	e746      	b.n	8002e94 <_dtoa_r+0x72c>
 8003006:	9b07      	ldr	r3, [sp, #28]
 8003008:	1e5c      	subs	r4, r3, #1
 800300a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800300c:	42a3      	cmp	r3, r4
 800300e:	bfbf      	itttt	lt
 8003010:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8003012:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8003014:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8003016:	1ae3      	sublt	r3, r4, r3
 8003018:	bfb4      	ite	lt
 800301a:	18d2      	addlt	r2, r2, r3
 800301c:	1b1c      	subge	r4, r3, r4
 800301e:	9b07      	ldr	r3, [sp, #28]
 8003020:	bfbc      	itt	lt
 8003022:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8003024:	2400      	movlt	r4, #0
 8003026:	2b00      	cmp	r3, #0
 8003028:	bfb5      	itete	lt
 800302a:	eba8 0603 	sublt.w	r6, r8, r3
 800302e:	9b07      	ldrge	r3, [sp, #28]
 8003030:	2300      	movlt	r3, #0
 8003032:	4646      	movge	r6, r8
 8003034:	e730      	b.n	8002e98 <_dtoa_r+0x730>
 8003036:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003038:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800303a:	4646      	mov	r6, r8
 800303c:	e735      	b.n	8002eaa <_dtoa_r+0x742>
 800303e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003040:	e75c      	b.n	8002efc <_dtoa_r+0x794>
 8003042:	2300      	movs	r3, #0
 8003044:	e788      	b.n	8002f58 <_dtoa_r+0x7f0>
 8003046:	9b02      	ldr	r3, [sp, #8]
 8003048:	e786      	b.n	8002f58 <_dtoa_r+0x7f0>
 800304a:	2300      	movs	r3, #0
 800304c:	930a      	str	r3, [sp, #40]	@ 0x28
 800304e:	e788      	b.n	8002f62 <_dtoa_r+0x7fa>
 8003050:	d09f      	beq.n	8002f92 <_dtoa_r+0x82a>
 8003052:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003054:	331c      	adds	r3, #28
 8003056:	441a      	add	r2, r3
 8003058:	4498      	add	r8, r3
 800305a:	441e      	add	r6, r3
 800305c:	9209      	str	r2, [sp, #36]	@ 0x24
 800305e:	e798      	b.n	8002f92 <_dtoa_r+0x82a>
 8003060:	4603      	mov	r3, r0
 8003062:	e7f6      	b.n	8003052 <_dtoa_r+0x8ea>
 8003064:	9b07      	ldr	r3, [sp, #28]
 8003066:	9704      	str	r7, [sp, #16]
 8003068:	2b00      	cmp	r3, #0
 800306a:	dc20      	bgt.n	80030ae <_dtoa_r+0x946>
 800306c:	9308      	str	r3, [sp, #32]
 800306e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003070:	2b02      	cmp	r3, #2
 8003072:	dd1e      	ble.n	80030b2 <_dtoa_r+0x94a>
 8003074:	9b08      	ldr	r3, [sp, #32]
 8003076:	2b00      	cmp	r3, #0
 8003078:	f47f aebc 	bne.w	8002df4 <_dtoa_r+0x68c>
 800307c:	4621      	mov	r1, r4
 800307e:	2205      	movs	r2, #5
 8003080:	4658      	mov	r0, fp
 8003082:	f000 fbe5 	bl	8003850 <__multadd>
 8003086:	4601      	mov	r1, r0
 8003088:	4604      	mov	r4, r0
 800308a:	4648      	mov	r0, r9
 800308c:	f000 fdf8 	bl	8003c80 <__mcmp>
 8003090:	2800      	cmp	r0, #0
 8003092:	f77f aeaf 	ble.w	8002df4 <_dtoa_r+0x68c>
 8003096:	4656      	mov	r6, sl
 8003098:	2331      	movs	r3, #49	@ 0x31
 800309a:	f806 3b01 	strb.w	r3, [r6], #1
 800309e:	9b04      	ldr	r3, [sp, #16]
 80030a0:	3301      	adds	r3, #1
 80030a2:	9304      	str	r3, [sp, #16]
 80030a4:	e6aa      	b.n	8002dfc <_dtoa_r+0x694>
 80030a6:	9c07      	ldr	r4, [sp, #28]
 80030a8:	9704      	str	r7, [sp, #16]
 80030aa:	4625      	mov	r5, r4
 80030ac:	e7f3      	b.n	8003096 <_dtoa_r+0x92e>
 80030ae:	9b07      	ldr	r3, [sp, #28]
 80030b0:	9308      	str	r3, [sp, #32]
 80030b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80030b4:	2b00      	cmp	r3, #0
 80030b6:	f000 8104 	beq.w	80032c2 <_dtoa_r+0xb5a>
 80030ba:	2e00      	cmp	r6, #0
 80030bc:	dd05      	ble.n	80030ca <_dtoa_r+0x962>
 80030be:	4629      	mov	r1, r5
 80030c0:	4632      	mov	r2, r6
 80030c2:	4658      	mov	r0, fp
 80030c4:	f000 fd70 	bl	8003ba8 <__lshift>
 80030c8:	4605      	mov	r5, r0
 80030ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80030cc:	2b00      	cmp	r3, #0
 80030ce:	d05a      	beq.n	8003186 <_dtoa_r+0xa1e>
 80030d0:	6869      	ldr	r1, [r5, #4]
 80030d2:	4658      	mov	r0, fp
 80030d4:	f000 fb5a 	bl	800378c <_Balloc>
 80030d8:	4606      	mov	r6, r0
 80030da:	b928      	cbnz	r0, 80030e8 <_dtoa_r+0x980>
 80030dc:	4b84      	ldr	r3, [pc, #528]	@ (80032f0 <_dtoa_r+0xb88>)
 80030de:	4602      	mov	r2, r0
 80030e0:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80030e4:	f7ff bb54 	b.w	8002790 <_dtoa_r+0x28>
 80030e8:	692a      	ldr	r2, [r5, #16]
 80030ea:	3202      	adds	r2, #2
 80030ec:	0092      	lsls	r2, r2, #2
 80030ee:	f105 010c 	add.w	r1, r5, #12
 80030f2:	300c      	adds	r0, #12
 80030f4:	f000 ff9c 	bl	8004030 <memcpy>
 80030f8:	2201      	movs	r2, #1
 80030fa:	4631      	mov	r1, r6
 80030fc:	4658      	mov	r0, fp
 80030fe:	f000 fd53 	bl	8003ba8 <__lshift>
 8003102:	f10a 0301 	add.w	r3, sl, #1
 8003106:	9307      	str	r3, [sp, #28]
 8003108:	9b08      	ldr	r3, [sp, #32]
 800310a:	4453      	add	r3, sl
 800310c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800310e:	9b02      	ldr	r3, [sp, #8]
 8003110:	f003 0301 	and.w	r3, r3, #1
 8003114:	462f      	mov	r7, r5
 8003116:	930a      	str	r3, [sp, #40]	@ 0x28
 8003118:	4605      	mov	r5, r0
 800311a:	9b07      	ldr	r3, [sp, #28]
 800311c:	4621      	mov	r1, r4
 800311e:	3b01      	subs	r3, #1
 8003120:	4648      	mov	r0, r9
 8003122:	9302      	str	r3, [sp, #8]
 8003124:	f7ff fa95 	bl	8002652 <quorem>
 8003128:	4639      	mov	r1, r7
 800312a:	9008      	str	r0, [sp, #32]
 800312c:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003130:	4648      	mov	r0, r9
 8003132:	f000 fda5 	bl	8003c80 <__mcmp>
 8003136:	462a      	mov	r2, r5
 8003138:	9009      	str	r0, [sp, #36]	@ 0x24
 800313a:	4621      	mov	r1, r4
 800313c:	4658      	mov	r0, fp
 800313e:	f000 fdbb 	bl	8003cb8 <__mdiff>
 8003142:	68c2      	ldr	r2, [r0, #12]
 8003144:	4606      	mov	r6, r0
 8003146:	bb02      	cbnz	r2, 800318a <_dtoa_r+0xa22>
 8003148:	4601      	mov	r1, r0
 800314a:	4648      	mov	r0, r9
 800314c:	f000 fd98 	bl	8003c80 <__mcmp>
 8003150:	4602      	mov	r2, r0
 8003152:	4631      	mov	r1, r6
 8003154:	4658      	mov	r0, fp
 8003156:	920c      	str	r2, [sp, #48]	@ 0x30
 8003158:	f000 fb58 	bl	800380c <_Bfree>
 800315c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800315e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003160:	9e07      	ldr	r6, [sp, #28]
 8003162:	ea43 0102 	orr.w	r1, r3, r2
 8003166:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003168:	4319      	orrs	r1, r3
 800316a:	d110      	bne.n	800318e <_dtoa_r+0xa26>
 800316c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003170:	d029      	beq.n	80031c6 <_dtoa_r+0xa5e>
 8003172:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003174:	2b00      	cmp	r3, #0
 8003176:	dd02      	ble.n	800317e <_dtoa_r+0xa16>
 8003178:	9b08      	ldr	r3, [sp, #32]
 800317a:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 800317e:	9b02      	ldr	r3, [sp, #8]
 8003180:	f883 8000 	strb.w	r8, [r3]
 8003184:	e63b      	b.n	8002dfe <_dtoa_r+0x696>
 8003186:	4628      	mov	r0, r5
 8003188:	e7bb      	b.n	8003102 <_dtoa_r+0x99a>
 800318a:	2201      	movs	r2, #1
 800318c:	e7e1      	b.n	8003152 <_dtoa_r+0x9ea>
 800318e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003190:	2b00      	cmp	r3, #0
 8003192:	db04      	blt.n	800319e <_dtoa_r+0xa36>
 8003194:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8003196:	430b      	orrs	r3, r1
 8003198:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800319a:	430b      	orrs	r3, r1
 800319c:	d120      	bne.n	80031e0 <_dtoa_r+0xa78>
 800319e:	2a00      	cmp	r2, #0
 80031a0:	dded      	ble.n	800317e <_dtoa_r+0xa16>
 80031a2:	4649      	mov	r1, r9
 80031a4:	2201      	movs	r2, #1
 80031a6:	4658      	mov	r0, fp
 80031a8:	f000 fcfe 	bl	8003ba8 <__lshift>
 80031ac:	4621      	mov	r1, r4
 80031ae:	4681      	mov	r9, r0
 80031b0:	f000 fd66 	bl	8003c80 <__mcmp>
 80031b4:	2800      	cmp	r0, #0
 80031b6:	dc03      	bgt.n	80031c0 <_dtoa_r+0xa58>
 80031b8:	d1e1      	bne.n	800317e <_dtoa_r+0xa16>
 80031ba:	f018 0f01 	tst.w	r8, #1
 80031be:	d0de      	beq.n	800317e <_dtoa_r+0xa16>
 80031c0:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80031c4:	d1d8      	bne.n	8003178 <_dtoa_r+0xa10>
 80031c6:	9a02      	ldr	r2, [sp, #8]
 80031c8:	2339      	movs	r3, #57	@ 0x39
 80031ca:	7013      	strb	r3, [r2, #0]
 80031cc:	4633      	mov	r3, r6
 80031ce:	461e      	mov	r6, r3
 80031d0:	3b01      	subs	r3, #1
 80031d2:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80031d6:	2a39      	cmp	r2, #57	@ 0x39
 80031d8:	d052      	beq.n	8003280 <_dtoa_r+0xb18>
 80031da:	3201      	adds	r2, #1
 80031dc:	701a      	strb	r2, [r3, #0]
 80031de:	e60e      	b.n	8002dfe <_dtoa_r+0x696>
 80031e0:	2a00      	cmp	r2, #0
 80031e2:	dd07      	ble.n	80031f4 <_dtoa_r+0xa8c>
 80031e4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80031e8:	d0ed      	beq.n	80031c6 <_dtoa_r+0xa5e>
 80031ea:	9a02      	ldr	r2, [sp, #8]
 80031ec:	f108 0301 	add.w	r3, r8, #1
 80031f0:	7013      	strb	r3, [r2, #0]
 80031f2:	e604      	b.n	8002dfe <_dtoa_r+0x696>
 80031f4:	9b07      	ldr	r3, [sp, #28]
 80031f6:	9a07      	ldr	r2, [sp, #28]
 80031f8:	f803 8c01 	strb.w	r8, [r3, #-1]
 80031fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80031fe:	4293      	cmp	r3, r2
 8003200:	d028      	beq.n	8003254 <_dtoa_r+0xaec>
 8003202:	4649      	mov	r1, r9
 8003204:	2300      	movs	r3, #0
 8003206:	220a      	movs	r2, #10
 8003208:	4658      	mov	r0, fp
 800320a:	f000 fb21 	bl	8003850 <__multadd>
 800320e:	42af      	cmp	r7, r5
 8003210:	4681      	mov	r9, r0
 8003212:	f04f 0300 	mov.w	r3, #0
 8003216:	f04f 020a 	mov.w	r2, #10
 800321a:	4639      	mov	r1, r7
 800321c:	4658      	mov	r0, fp
 800321e:	d107      	bne.n	8003230 <_dtoa_r+0xac8>
 8003220:	f000 fb16 	bl	8003850 <__multadd>
 8003224:	4607      	mov	r7, r0
 8003226:	4605      	mov	r5, r0
 8003228:	9b07      	ldr	r3, [sp, #28]
 800322a:	3301      	adds	r3, #1
 800322c:	9307      	str	r3, [sp, #28]
 800322e:	e774      	b.n	800311a <_dtoa_r+0x9b2>
 8003230:	f000 fb0e 	bl	8003850 <__multadd>
 8003234:	4629      	mov	r1, r5
 8003236:	4607      	mov	r7, r0
 8003238:	2300      	movs	r3, #0
 800323a:	220a      	movs	r2, #10
 800323c:	4658      	mov	r0, fp
 800323e:	f000 fb07 	bl	8003850 <__multadd>
 8003242:	4605      	mov	r5, r0
 8003244:	e7f0      	b.n	8003228 <_dtoa_r+0xac0>
 8003246:	9b08      	ldr	r3, [sp, #32]
 8003248:	2b00      	cmp	r3, #0
 800324a:	bfcc      	ite	gt
 800324c:	461e      	movgt	r6, r3
 800324e:	2601      	movle	r6, #1
 8003250:	4456      	add	r6, sl
 8003252:	2700      	movs	r7, #0
 8003254:	4649      	mov	r1, r9
 8003256:	2201      	movs	r2, #1
 8003258:	4658      	mov	r0, fp
 800325a:	f000 fca5 	bl	8003ba8 <__lshift>
 800325e:	4621      	mov	r1, r4
 8003260:	4681      	mov	r9, r0
 8003262:	f000 fd0d 	bl	8003c80 <__mcmp>
 8003266:	2800      	cmp	r0, #0
 8003268:	dcb0      	bgt.n	80031cc <_dtoa_r+0xa64>
 800326a:	d102      	bne.n	8003272 <_dtoa_r+0xb0a>
 800326c:	f018 0f01 	tst.w	r8, #1
 8003270:	d1ac      	bne.n	80031cc <_dtoa_r+0xa64>
 8003272:	4633      	mov	r3, r6
 8003274:	461e      	mov	r6, r3
 8003276:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800327a:	2a30      	cmp	r2, #48	@ 0x30
 800327c:	d0fa      	beq.n	8003274 <_dtoa_r+0xb0c>
 800327e:	e5be      	b.n	8002dfe <_dtoa_r+0x696>
 8003280:	459a      	cmp	sl, r3
 8003282:	d1a4      	bne.n	80031ce <_dtoa_r+0xa66>
 8003284:	9b04      	ldr	r3, [sp, #16]
 8003286:	3301      	adds	r3, #1
 8003288:	9304      	str	r3, [sp, #16]
 800328a:	2331      	movs	r3, #49	@ 0x31
 800328c:	f88a 3000 	strb.w	r3, [sl]
 8003290:	e5b5      	b.n	8002dfe <_dtoa_r+0x696>
 8003292:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003294:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 80032f4 <_dtoa_r+0xb8c>
 8003298:	b11b      	cbz	r3, 80032a2 <_dtoa_r+0xb3a>
 800329a:	f10a 0308 	add.w	r3, sl, #8
 800329e:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80032a0:	6013      	str	r3, [r2, #0]
 80032a2:	4650      	mov	r0, sl
 80032a4:	b017      	add	sp, #92	@ 0x5c
 80032a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032aa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80032ac:	2b01      	cmp	r3, #1
 80032ae:	f77f ae3d 	ble.w	8002f2c <_dtoa_r+0x7c4>
 80032b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80032b4:	930a      	str	r3, [sp, #40]	@ 0x28
 80032b6:	2001      	movs	r0, #1
 80032b8:	e65b      	b.n	8002f72 <_dtoa_r+0x80a>
 80032ba:	9b08      	ldr	r3, [sp, #32]
 80032bc:	2b00      	cmp	r3, #0
 80032be:	f77f aed6 	ble.w	800306e <_dtoa_r+0x906>
 80032c2:	4656      	mov	r6, sl
 80032c4:	4621      	mov	r1, r4
 80032c6:	4648      	mov	r0, r9
 80032c8:	f7ff f9c3 	bl	8002652 <quorem>
 80032cc:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80032d0:	f806 8b01 	strb.w	r8, [r6], #1
 80032d4:	9b08      	ldr	r3, [sp, #32]
 80032d6:	eba6 020a 	sub.w	r2, r6, sl
 80032da:	4293      	cmp	r3, r2
 80032dc:	ddb3      	ble.n	8003246 <_dtoa_r+0xade>
 80032de:	4649      	mov	r1, r9
 80032e0:	2300      	movs	r3, #0
 80032e2:	220a      	movs	r2, #10
 80032e4:	4658      	mov	r0, fp
 80032e6:	f000 fab3 	bl	8003850 <__multadd>
 80032ea:	4681      	mov	r9, r0
 80032ec:	e7ea      	b.n	80032c4 <_dtoa_r+0xb5c>
 80032ee:	bf00      	nop
 80032f0:	080048a9 	.word	0x080048a9
 80032f4:	0800482d 	.word	0x0800482d

080032f8 <_free_r>:
 80032f8:	b538      	push	{r3, r4, r5, lr}
 80032fa:	4605      	mov	r5, r0
 80032fc:	2900      	cmp	r1, #0
 80032fe:	d041      	beq.n	8003384 <_free_r+0x8c>
 8003300:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003304:	1f0c      	subs	r4, r1, #4
 8003306:	2b00      	cmp	r3, #0
 8003308:	bfb8      	it	lt
 800330a:	18e4      	addlt	r4, r4, r3
 800330c:	f7ff f86a 	bl	80023e4 <__malloc_lock>
 8003310:	4a1d      	ldr	r2, [pc, #116]	@ (8003388 <_free_r+0x90>)
 8003312:	6813      	ldr	r3, [r2, #0]
 8003314:	b933      	cbnz	r3, 8003324 <_free_r+0x2c>
 8003316:	6063      	str	r3, [r4, #4]
 8003318:	6014      	str	r4, [r2, #0]
 800331a:	4628      	mov	r0, r5
 800331c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003320:	f7ff b866 	b.w	80023f0 <__malloc_unlock>
 8003324:	42a3      	cmp	r3, r4
 8003326:	d908      	bls.n	800333a <_free_r+0x42>
 8003328:	6820      	ldr	r0, [r4, #0]
 800332a:	1821      	adds	r1, r4, r0
 800332c:	428b      	cmp	r3, r1
 800332e:	bf01      	itttt	eq
 8003330:	6819      	ldreq	r1, [r3, #0]
 8003332:	685b      	ldreq	r3, [r3, #4]
 8003334:	1809      	addeq	r1, r1, r0
 8003336:	6021      	streq	r1, [r4, #0]
 8003338:	e7ed      	b.n	8003316 <_free_r+0x1e>
 800333a:	461a      	mov	r2, r3
 800333c:	685b      	ldr	r3, [r3, #4]
 800333e:	b10b      	cbz	r3, 8003344 <_free_r+0x4c>
 8003340:	42a3      	cmp	r3, r4
 8003342:	d9fa      	bls.n	800333a <_free_r+0x42>
 8003344:	6811      	ldr	r1, [r2, #0]
 8003346:	1850      	adds	r0, r2, r1
 8003348:	42a0      	cmp	r0, r4
 800334a:	d10b      	bne.n	8003364 <_free_r+0x6c>
 800334c:	6820      	ldr	r0, [r4, #0]
 800334e:	4401      	add	r1, r0
 8003350:	1850      	adds	r0, r2, r1
 8003352:	4283      	cmp	r3, r0
 8003354:	6011      	str	r1, [r2, #0]
 8003356:	d1e0      	bne.n	800331a <_free_r+0x22>
 8003358:	6818      	ldr	r0, [r3, #0]
 800335a:	685b      	ldr	r3, [r3, #4]
 800335c:	6053      	str	r3, [r2, #4]
 800335e:	4408      	add	r0, r1
 8003360:	6010      	str	r0, [r2, #0]
 8003362:	e7da      	b.n	800331a <_free_r+0x22>
 8003364:	d902      	bls.n	800336c <_free_r+0x74>
 8003366:	230c      	movs	r3, #12
 8003368:	602b      	str	r3, [r5, #0]
 800336a:	e7d6      	b.n	800331a <_free_r+0x22>
 800336c:	6820      	ldr	r0, [r4, #0]
 800336e:	1821      	adds	r1, r4, r0
 8003370:	428b      	cmp	r3, r1
 8003372:	bf04      	itt	eq
 8003374:	6819      	ldreq	r1, [r3, #0]
 8003376:	685b      	ldreq	r3, [r3, #4]
 8003378:	6063      	str	r3, [r4, #4]
 800337a:	bf04      	itt	eq
 800337c:	1809      	addeq	r1, r1, r0
 800337e:	6021      	streq	r1, [r4, #0]
 8003380:	6054      	str	r4, [r2, #4]
 8003382:	e7ca      	b.n	800331a <_free_r+0x22>
 8003384:	bd38      	pop	{r3, r4, r5, pc}
 8003386:	bf00      	nop
 8003388:	20000284 	.word	0x20000284

0800338c <__ssputs_r>:
 800338c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003390:	688e      	ldr	r6, [r1, #8]
 8003392:	461f      	mov	r7, r3
 8003394:	42be      	cmp	r6, r7
 8003396:	680b      	ldr	r3, [r1, #0]
 8003398:	4682      	mov	sl, r0
 800339a:	460c      	mov	r4, r1
 800339c:	4690      	mov	r8, r2
 800339e:	d82d      	bhi.n	80033fc <__ssputs_r+0x70>
 80033a0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80033a4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80033a8:	d026      	beq.n	80033f8 <__ssputs_r+0x6c>
 80033aa:	6965      	ldr	r5, [r4, #20]
 80033ac:	6909      	ldr	r1, [r1, #16]
 80033ae:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80033b2:	eba3 0901 	sub.w	r9, r3, r1
 80033b6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80033ba:	1c7b      	adds	r3, r7, #1
 80033bc:	444b      	add	r3, r9
 80033be:	106d      	asrs	r5, r5, #1
 80033c0:	429d      	cmp	r5, r3
 80033c2:	bf38      	it	cc
 80033c4:	461d      	movcc	r5, r3
 80033c6:	0553      	lsls	r3, r2, #21
 80033c8:	d527      	bpl.n	800341a <__ssputs_r+0x8e>
 80033ca:	4629      	mov	r1, r5
 80033cc:	f7fe fdfc 	bl	8001fc8 <_malloc_r>
 80033d0:	4606      	mov	r6, r0
 80033d2:	b360      	cbz	r0, 800342e <__ssputs_r+0xa2>
 80033d4:	6921      	ldr	r1, [r4, #16]
 80033d6:	464a      	mov	r2, r9
 80033d8:	f000 fe2a 	bl	8004030 <memcpy>
 80033dc:	89a3      	ldrh	r3, [r4, #12]
 80033de:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80033e2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80033e6:	81a3      	strh	r3, [r4, #12]
 80033e8:	6126      	str	r6, [r4, #16]
 80033ea:	6165      	str	r5, [r4, #20]
 80033ec:	444e      	add	r6, r9
 80033ee:	eba5 0509 	sub.w	r5, r5, r9
 80033f2:	6026      	str	r6, [r4, #0]
 80033f4:	60a5      	str	r5, [r4, #8]
 80033f6:	463e      	mov	r6, r7
 80033f8:	42be      	cmp	r6, r7
 80033fa:	d900      	bls.n	80033fe <__ssputs_r+0x72>
 80033fc:	463e      	mov	r6, r7
 80033fe:	6820      	ldr	r0, [r4, #0]
 8003400:	4632      	mov	r2, r6
 8003402:	4641      	mov	r1, r8
 8003404:	f000 fdb3 	bl	8003f6e <memmove>
 8003408:	68a3      	ldr	r3, [r4, #8]
 800340a:	1b9b      	subs	r3, r3, r6
 800340c:	60a3      	str	r3, [r4, #8]
 800340e:	6823      	ldr	r3, [r4, #0]
 8003410:	4433      	add	r3, r6
 8003412:	6023      	str	r3, [r4, #0]
 8003414:	2000      	movs	r0, #0
 8003416:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800341a:	462a      	mov	r2, r5
 800341c:	f000 fd79 	bl	8003f12 <_realloc_r>
 8003420:	4606      	mov	r6, r0
 8003422:	2800      	cmp	r0, #0
 8003424:	d1e0      	bne.n	80033e8 <__ssputs_r+0x5c>
 8003426:	6921      	ldr	r1, [r4, #16]
 8003428:	4650      	mov	r0, sl
 800342a:	f7ff ff65 	bl	80032f8 <_free_r>
 800342e:	230c      	movs	r3, #12
 8003430:	f8ca 3000 	str.w	r3, [sl]
 8003434:	89a3      	ldrh	r3, [r4, #12]
 8003436:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800343a:	81a3      	strh	r3, [r4, #12]
 800343c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003440:	e7e9      	b.n	8003416 <__ssputs_r+0x8a>
	...

08003444 <_svfiprintf_r>:
 8003444:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003448:	4698      	mov	r8, r3
 800344a:	898b      	ldrh	r3, [r1, #12]
 800344c:	061b      	lsls	r3, r3, #24
 800344e:	b09d      	sub	sp, #116	@ 0x74
 8003450:	4607      	mov	r7, r0
 8003452:	460d      	mov	r5, r1
 8003454:	4614      	mov	r4, r2
 8003456:	d510      	bpl.n	800347a <_svfiprintf_r+0x36>
 8003458:	690b      	ldr	r3, [r1, #16]
 800345a:	b973      	cbnz	r3, 800347a <_svfiprintf_r+0x36>
 800345c:	2140      	movs	r1, #64	@ 0x40
 800345e:	f7fe fdb3 	bl	8001fc8 <_malloc_r>
 8003462:	6028      	str	r0, [r5, #0]
 8003464:	6128      	str	r0, [r5, #16]
 8003466:	b930      	cbnz	r0, 8003476 <_svfiprintf_r+0x32>
 8003468:	230c      	movs	r3, #12
 800346a:	603b      	str	r3, [r7, #0]
 800346c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003470:	b01d      	add	sp, #116	@ 0x74
 8003472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003476:	2340      	movs	r3, #64	@ 0x40
 8003478:	616b      	str	r3, [r5, #20]
 800347a:	2300      	movs	r3, #0
 800347c:	9309      	str	r3, [sp, #36]	@ 0x24
 800347e:	2320      	movs	r3, #32
 8003480:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003484:	f8cd 800c 	str.w	r8, [sp, #12]
 8003488:	2330      	movs	r3, #48	@ 0x30
 800348a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003628 <_svfiprintf_r+0x1e4>
 800348e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003492:	f04f 0901 	mov.w	r9, #1
 8003496:	4623      	mov	r3, r4
 8003498:	469a      	mov	sl, r3
 800349a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800349e:	b10a      	cbz	r2, 80034a4 <_svfiprintf_r+0x60>
 80034a0:	2a25      	cmp	r2, #37	@ 0x25
 80034a2:	d1f9      	bne.n	8003498 <_svfiprintf_r+0x54>
 80034a4:	ebba 0b04 	subs.w	fp, sl, r4
 80034a8:	d00b      	beq.n	80034c2 <_svfiprintf_r+0x7e>
 80034aa:	465b      	mov	r3, fp
 80034ac:	4622      	mov	r2, r4
 80034ae:	4629      	mov	r1, r5
 80034b0:	4638      	mov	r0, r7
 80034b2:	f7ff ff6b 	bl	800338c <__ssputs_r>
 80034b6:	3001      	adds	r0, #1
 80034b8:	f000 80a7 	beq.w	800360a <_svfiprintf_r+0x1c6>
 80034bc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80034be:	445a      	add	r2, fp
 80034c0:	9209      	str	r2, [sp, #36]	@ 0x24
 80034c2:	f89a 3000 	ldrb.w	r3, [sl]
 80034c6:	2b00      	cmp	r3, #0
 80034c8:	f000 809f 	beq.w	800360a <_svfiprintf_r+0x1c6>
 80034cc:	2300      	movs	r3, #0
 80034ce:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80034d2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80034d6:	f10a 0a01 	add.w	sl, sl, #1
 80034da:	9304      	str	r3, [sp, #16]
 80034dc:	9307      	str	r3, [sp, #28]
 80034de:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80034e2:	931a      	str	r3, [sp, #104]	@ 0x68
 80034e4:	4654      	mov	r4, sl
 80034e6:	2205      	movs	r2, #5
 80034e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80034ec:	484e      	ldr	r0, [pc, #312]	@ (8003628 <_svfiprintf_r+0x1e4>)
 80034ee:	f7fc fe77 	bl	80001e0 <memchr>
 80034f2:	9a04      	ldr	r2, [sp, #16]
 80034f4:	b9d8      	cbnz	r0, 800352e <_svfiprintf_r+0xea>
 80034f6:	06d0      	lsls	r0, r2, #27
 80034f8:	bf44      	itt	mi
 80034fa:	2320      	movmi	r3, #32
 80034fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003500:	0711      	lsls	r1, r2, #28
 8003502:	bf44      	itt	mi
 8003504:	232b      	movmi	r3, #43	@ 0x2b
 8003506:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800350a:	f89a 3000 	ldrb.w	r3, [sl]
 800350e:	2b2a      	cmp	r3, #42	@ 0x2a
 8003510:	d015      	beq.n	800353e <_svfiprintf_r+0xfa>
 8003512:	9a07      	ldr	r2, [sp, #28]
 8003514:	4654      	mov	r4, sl
 8003516:	2000      	movs	r0, #0
 8003518:	f04f 0c0a 	mov.w	ip, #10
 800351c:	4621      	mov	r1, r4
 800351e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003522:	3b30      	subs	r3, #48	@ 0x30
 8003524:	2b09      	cmp	r3, #9
 8003526:	d94b      	bls.n	80035c0 <_svfiprintf_r+0x17c>
 8003528:	b1b0      	cbz	r0, 8003558 <_svfiprintf_r+0x114>
 800352a:	9207      	str	r2, [sp, #28]
 800352c:	e014      	b.n	8003558 <_svfiprintf_r+0x114>
 800352e:	eba0 0308 	sub.w	r3, r0, r8
 8003532:	fa09 f303 	lsl.w	r3, r9, r3
 8003536:	4313      	orrs	r3, r2
 8003538:	9304      	str	r3, [sp, #16]
 800353a:	46a2      	mov	sl, r4
 800353c:	e7d2      	b.n	80034e4 <_svfiprintf_r+0xa0>
 800353e:	9b03      	ldr	r3, [sp, #12]
 8003540:	1d19      	adds	r1, r3, #4
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	9103      	str	r1, [sp, #12]
 8003546:	2b00      	cmp	r3, #0
 8003548:	bfbb      	ittet	lt
 800354a:	425b      	neglt	r3, r3
 800354c:	f042 0202 	orrlt.w	r2, r2, #2
 8003550:	9307      	strge	r3, [sp, #28]
 8003552:	9307      	strlt	r3, [sp, #28]
 8003554:	bfb8      	it	lt
 8003556:	9204      	strlt	r2, [sp, #16]
 8003558:	7823      	ldrb	r3, [r4, #0]
 800355a:	2b2e      	cmp	r3, #46	@ 0x2e
 800355c:	d10a      	bne.n	8003574 <_svfiprintf_r+0x130>
 800355e:	7863      	ldrb	r3, [r4, #1]
 8003560:	2b2a      	cmp	r3, #42	@ 0x2a
 8003562:	d132      	bne.n	80035ca <_svfiprintf_r+0x186>
 8003564:	9b03      	ldr	r3, [sp, #12]
 8003566:	1d1a      	adds	r2, r3, #4
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	9203      	str	r2, [sp, #12]
 800356c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003570:	3402      	adds	r4, #2
 8003572:	9305      	str	r3, [sp, #20]
 8003574:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 800362c <_svfiprintf_r+0x1e8>
 8003578:	7821      	ldrb	r1, [r4, #0]
 800357a:	2203      	movs	r2, #3
 800357c:	4650      	mov	r0, sl
 800357e:	f7fc fe2f 	bl	80001e0 <memchr>
 8003582:	b138      	cbz	r0, 8003594 <_svfiprintf_r+0x150>
 8003584:	9b04      	ldr	r3, [sp, #16]
 8003586:	eba0 000a 	sub.w	r0, r0, sl
 800358a:	2240      	movs	r2, #64	@ 0x40
 800358c:	4082      	lsls	r2, r0
 800358e:	4313      	orrs	r3, r2
 8003590:	3401      	adds	r4, #1
 8003592:	9304      	str	r3, [sp, #16]
 8003594:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003598:	4825      	ldr	r0, [pc, #148]	@ (8003630 <_svfiprintf_r+0x1ec>)
 800359a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800359e:	2206      	movs	r2, #6
 80035a0:	f7fc fe1e 	bl	80001e0 <memchr>
 80035a4:	2800      	cmp	r0, #0
 80035a6:	d036      	beq.n	8003616 <_svfiprintf_r+0x1d2>
 80035a8:	4b22      	ldr	r3, [pc, #136]	@ (8003634 <_svfiprintf_r+0x1f0>)
 80035aa:	bb1b      	cbnz	r3, 80035f4 <_svfiprintf_r+0x1b0>
 80035ac:	9b03      	ldr	r3, [sp, #12]
 80035ae:	3307      	adds	r3, #7
 80035b0:	f023 0307 	bic.w	r3, r3, #7
 80035b4:	3308      	adds	r3, #8
 80035b6:	9303      	str	r3, [sp, #12]
 80035b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80035ba:	4433      	add	r3, r6
 80035bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80035be:	e76a      	b.n	8003496 <_svfiprintf_r+0x52>
 80035c0:	fb0c 3202 	mla	r2, ip, r2, r3
 80035c4:	460c      	mov	r4, r1
 80035c6:	2001      	movs	r0, #1
 80035c8:	e7a8      	b.n	800351c <_svfiprintf_r+0xd8>
 80035ca:	2300      	movs	r3, #0
 80035cc:	3401      	adds	r4, #1
 80035ce:	9305      	str	r3, [sp, #20]
 80035d0:	4619      	mov	r1, r3
 80035d2:	f04f 0c0a 	mov.w	ip, #10
 80035d6:	4620      	mov	r0, r4
 80035d8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80035dc:	3a30      	subs	r2, #48	@ 0x30
 80035de:	2a09      	cmp	r2, #9
 80035e0:	d903      	bls.n	80035ea <_svfiprintf_r+0x1a6>
 80035e2:	2b00      	cmp	r3, #0
 80035e4:	d0c6      	beq.n	8003574 <_svfiprintf_r+0x130>
 80035e6:	9105      	str	r1, [sp, #20]
 80035e8:	e7c4      	b.n	8003574 <_svfiprintf_r+0x130>
 80035ea:	fb0c 2101 	mla	r1, ip, r1, r2
 80035ee:	4604      	mov	r4, r0
 80035f0:	2301      	movs	r3, #1
 80035f2:	e7f0      	b.n	80035d6 <_svfiprintf_r+0x192>
 80035f4:	ab03      	add	r3, sp, #12
 80035f6:	9300      	str	r3, [sp, #0]
 80035f8:	462a      	mov	r2, r5
 80035fa:	4b0f      	ldr	r3, [pc, #60]	@ (8003638 <_svfiprintf_r+0x1f4>)
 80035fc:	a904      	add	r1, sp, #16
 80035fe:	4638      	mov	r0, r7
 8003600:	f7fe fa8c 	bl	8001b1c <_printf_float>
 8003604:	1c42      	adds	r2, r0, #1
 8003606:	4606      	mov	r6, r0
 8003608:	d1d6      	bne.n	80035b8 <_svfiprintf_r+0x174>
 800360a:	89ab      	ldrh	r3, [r5, #12]
 800360c:	065b      	lsls	r3, r3, #25
 800360e:	f53f af2d 	bmi.w	800346c <_svfiprintf_r+0x28>
 8003612:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003614:	e72c      	b.n	8003470 <_svfiprintf_r+0x2c>
 8003616:	ab03      	add	r3, sp, #12
 8003618:	9300      	str	r3, [sp, #0]
 800361a:	462a      	mov	r2, r5
 800361c:	4b06      	ldr	r3, [pc, #24]	@ (8003638 <_svfiprintf_r+0x1f4>)
 800361e:	a904      	add	r1, sp, #16
 8003620:	4638      	mov	r0, r7
 8003622:	f7fe fdbf 	bl	80021a4 <_printf_i>
 8003626:	e7ed      	b.n	8003604 <_svfiprintf_r+0x1c0>
 8003628:	080048ba 	.word	0x080048ba
 800362c:	080048c0 	.word	0x080048c0
 8003630:	080048c4 	.word	0x080048c4
 8003634:	08001b1d 	.word	0x08001b1d
 8003638:	0800338d 	.word	0x0800338d

0800363c <__sflush_r>:
 800363c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003642:	0716      	lsls	r6, r2, #28
 8003644:	4605      	mov	r5, r0
 8003646:	460c      	mov	r4, r1
 8003648:	d454      	bmi.n	80036f4 <__sflush_r+0xb8>
 800364a:	684b      	ldr	r3, [r1, #4]
 800364c:	2b00      	cmp	r3, #0
 800364e:	dc02      	bgt.n	8003656 <__sflush_r+0x1a>
 8003650:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003652:	2b00      	cmp	r3, #0
 8003654:	dd48      	ble.n	80036e8 <__sflush_r+0xac>
 8003656:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003658:	2e00      	cmp	r6, #0
 800365a:	d045      	beq.n	80036e8 <__sflush_r+0xac>
 800365c:	2300      	movs	r3, #0
 800365e:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003662:	682f      	ldr	r7, [r5, #0]
 8003664:	6a21      	ldr	r1, [r4, #32]
 8003666:	602b      	str	r3, [r5, #0]
 8003668:	d030      	beq.n	80036cc <__sflush_r+0x90>
 800366a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800366c:	89a3      	ldrh	r3, [r4, #12]
 800366e:	0759      	lsls	r1, r3, #29
 8003670:	d505      	bpl.n	800367e <__sflush_r+0x42>
 8003672:	6863      	ldr	r3, [r4, #4]
 8003674:	1ad2      	subs	r2, r2, r3
 8003676:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003678:	b10b      	cbz	r3, 800367e <__sflush_r+0x42>
 800367a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800367c:	1ad2      	subs	r2, r2, r3
 800367e:	2300      	movs	r3, #0
 8003680:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003682:	6a21      	ldr	r1, [r4, #32]
 8003684:	4628      	mov	r0, r5
 8003686:	47b0      	blx	r6
 8003688:	1c43      	adds	r3, r0, #1
 800368a:	89a3      	ldrh	r3, [r4, #12]
 800368c:	d106      	bne.n	800369c <__sflush_r+0x60>
 800368e:	6829      	ldr	r1, [r5, #0]
 8003690:	291d      	cmp	r1, #29
 8003692:	d82b      	bhi.n	80036ec <__sflush_r+0xb0>
 8003694:	4a28      	ldr	r2, [pc, #160]	@ (8003738 <__sflush_r+0xfc>)
 8003696:	410a      	asrs	r2, r1
 8003698:	07d6      	lsls	r6, r2, #31
 800369a:	d427      	bmi.n	80036ec <__sflush_r+0xb0>
 800369c:	2200      	movs	r2, #0
 800369e:	6062      	str	r2, [r4, #4]
 80036a0:	04d9      	lsls	r1, r3, #19
 80036a2:	6922      	ldr	r2, [r4, #16]
 80036a4:	6022      	str	r2, [r4, #0]
 80036a6:	d504      	bpl.n	80036b2 <__sflush_r+0x76>
 80036a8:	1c42      	adds	r2, r0, #1
 80036aa:	d101      	bne.n	80036b0 <__sflush_r+0x74>
 80036ac:	682b      	ldr	r3, [r5, #0]
 80036ae:	b903      	cbnz	r3, 80036b2 <__sflush_r+0x76>
 80036b0:	6560      	str	r0, [r4, #84]	@ 0x54
 80036b2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80036b4:	602f      	str	r7, [r5, #0]
 80036b6:	b1b9      	cbz	r1, 80036e8 <__sflush_r+0xac>
 80036b8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80036bc:	4299      	cmp	r1, r3
 80036be:	d002      	beq.n	80036c6 <__sflush_r+0x8a>
 80036c0:	4628      	mov	r0, r5
 80036c2:	f7ff fe19 	bl	80032f8 <_free_r>
 80036c6:	2300      	movs	r3, #0
 80036c8:	6363      	str	r3, [r4, #52]	@ 0x34
 80036ca:	e00d      	b.n	80036e8 <__sflush_r+0xac>
 80036cc:	2301      	movs	r3, #1
 80036ce:	4628      	mov	r0, r5
 80036d0:	47b0      	blx	r6
 80036d2:	4602      	mov	r2, r0
 80036d4:	1c50      	adds	r0, r2, #1
 80036d6:	d1c9      	bne.n	800366c <__sflush_r+0x30>
 80036d8:	682b      	ldr	r3, [r5, #0]
 80036da:	2b00      	cmp	r3, #0
 80036dc:	d0c6      	beq.n	800366c <__sflush_r+0x30>
 80036de:	2b1d      	cmp	r3, #29
 80036e0:	d001      	beq.n	80036e6 <__sflush_r+0xaa>
 80036e2:	2b16      	cmp	r3, #22
 80036e4:	d11d      	bne.n	8003722 <__sflush_r+0xe6>
 80036e6:	602f      	str	r7, [r5, #0]
 80036e8:	2000      	movs	r0, #0
 80036ea:	e021      	b.n	8003730 <__sflush_r+0xf4>
 80036ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80036f0:	b21b      	sxth	r3, r3
 80036f2:	e01a      	b.n	800372a <__sflush_r+0xee>
 80036f4:	690f      	ldr	r7, [r1, #16]
 80036f6:	2f00      	cmp	r7, #0
 80036f8:	d0f6      	beq.n	80036e8 <__sflush_r+0xac>
 80036fa:	0793      	lsls	r3, r2, #30
 80036fc:	680e      	ldr	r6, [r1, #0]
 80036fe:	bf08      	it	eq
 8003700:	694b      	ldreq	r3, [r1, #20]
 8003702:	600f      	str	r7, [r1, #0]
 8003704:	bf18      	it	ne
 8003706:	2300      	movne	r3, #0
 8003708:	1bf6      	subs	r6, r6, r7
 800370a:	608b      	str	r3, [r1, #8]
 800370c:	2e00      	cmp	r6, #0
 800370e:	ddeb      	ble.n	80036e8 <__sflush_r+0xac>
 8003710:	6a21      	ldr	r1, [r4, #32]
 8003712:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8003716:	4633      	mov	r3, r6
 8003718:	463a      	mov	r2, r7
 800371a:	4628      	mov	r0, r5
 800371c:	47e0      	blx	ip
 800371e:	2800      	cmp	r0, #0
 8003720:	dc07      	bgt.n	8003732 <__sflush_r+0xf6>
 8003722:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003726:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800372a:	81a3      	strh	r3, [r4, #12]
 800372c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003730:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003732:	4407      	add	r7, r0
 8003734:	1a36      	subs	r6, r6, r0
 8003736:	e7e9      	b.n	800370c <__sflush_r+0xd0>
 8003738:	dfbffffe 	.word	0xdfbffffe

0800373c <_fflush_r>:
 800373c:	b538      	push	{r3, r4, r5, lr}
 800373e:	690b      	ldr	r3, [r1, #16]
 8003740:	4605      	mov	r5, r0
 8003742:	460c      	mov	r4, r1
 8003744:	b913      	cbnz	r3, 800374c <_fflush_r+0x10>
 8003746:	2500      	movs	r5, #0
 8003748:	4628      	mov	r0, r5
 800374a:	bd38      	pop	{r3, r4, r5, pc}
 800374c:	b118      	cbz	r0, 8003756 <_fflush_r+0x1a>
 800374e:	6a03      	ldr	r3, [r0, #32]
 8003750:	b90b      	cbnz	r3, 8003756 <_fflush_r+0x1a>
 8003752:	f7fe feff 	bl	8002554 <__sinit>
 8003756:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800375a:	2b00      	cmp	r3, #0
 800375c:	d0f3      	beq.n	8003746 <_fflush_r+0xa>
 800375e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003760:	07d0      	lsls	r0, r2, #31
 8003762:	d404      	bmi.n	800376e <_fflush_r+0x32>
 8003764:	0599      	lsls	r1, r3, #22
 8003766:	d402      	bmi.n	800376e <_fflush_r+0x32>
 8003768:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800376a:	f7fe ff70 	bl	800264e <__retarget_lock_acquire_recursive>
 800376e:	4628      	mov	r0, r5
 8003770:	4621      	mov	r1, r4
 8003772:	f7ff ff63 	bl	800363c <__sflush_r>
 8003776:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003778:	07da      	lsls	r2, r3, #31
 800377a:	4605      	mov	r5, r0
 800377c:	d4e4      	bmi.n	8003748 <_fflush_r+0xc>
 800377e:	89a3      	ldrh	r3, [r4, #12]
 8003780:	059b      	lsls	r3, r3, #22
 8003782:	d4e1      	bmi.n	8003748 <_fflush_r+0xc>
 8003784:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003786:	f7fe ff63 	bl	8002650 <__retarget_lock_release_recursive>
 800378a:	e7dd      	b.n	8003748 <_fflush_r+0xc>

0800378c <_Balloc>:
 800378c:	b570      	push	{r4, r5, r6, lr}
 800378e:	69c6      	ldr	r6, [r0, #28]
 8003790:	4604      	mov	r4, r0
 8003792:	460d      	mov	r5, r1
 8003794:	b976      	cbnz	r6, 80037b4 <_Balloc+0x28>
 8003796:	2010      	movs	r0, #16
 8003798:	f7fe fbec 	bl	8001f74 <malloc>
 800379c:	4602      	mov	r2, r0
 800379e:	61e0      	str	r0, [r4, #28]
 80037a0:	b920      	cbnz	r0, 80037ac <_Balloc+0x20>
 80037a2:	4b18      	ldr	r3, [pc, #96]	@ (8003804 <_Balloc+0x78>)
 80037a4:	4818      	ldr	r0, [pc, #96]	@ (8003808 <_Balloc+0x7c>)
 80037a6:	216b      	movs	r1, #107	@ 0x6b
 80037a8:	f000 fc50 	bl	800404c <__assert_func>
 80037ac:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80037b0:	6006      	str	r6, [r0, #0]
 80037b2:	60c6      	str	r6, [r0, #12]
 80037b4:	69e6      	ldr	r6, [r4, #28]
 80037b6:	68f3      	ldr	r3, [r6, #12]
 80037b8:	b183      	cbz	r3, 80037dc <_Balloc+0x50>
 80037ba:	69e3      	ldr	r3, [r4, #28]
 80037bc:	68db      	ldr	r3, [r3, #12]
 80037be:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80037c2:	b9b8      	cbnz	r0, 80037f4 <_Balloc+0x68>
 80037c4:	2101      	movs	r1, #1
 80037c6:	fa01 f605 	lsl.w	r6, r1, r5
 80037ca:	1d72      	adds	r2, r6, #5
 80037cc:	0092      	lsls	r2, r2, #2
 80037ce:	4620      	mov	r0, r4
 80037d0:	f000 fc5a 	bl	8004088 <_calloc_r>
 80037d4:	b160      	cbz	r0, 80037f0 <_Balloc+0x64>
 80037d6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80037da:	e00e      	b.n	80037fa <_Balloc+0x6e>
 80037dc:	2221      	movs	r2, #33	@ 0x21
 80037de:	2104      	movs	r1, #4
 80037e0:	4620      	mov	r0, r4
 80037e2:	f000 fc51 	bl	8004088 <_calloc_r>
 80037e6:	69e3      	ldr	r3, [r4, #28]
 80037e8:	60f0      	str	r0, [r6, #12]
 80037ea:	68db      	ldr	r3, [r3, #12]
 80037ec:	2b00      	cmp	r3, #0
 80037ee:	d1e4      	bne.n	80037ba <_Balloc+0x2e>
 80037f0:	2000      	movs	r0, #0
 80037f2:	bd70      	pop	{r4, r5, r6, pc}
 80037f4:	6802      	ldr	r2, [r0, #0]
 80037f6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80037fa:	2300      	movs	r3, #0
 80037fc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003800:	e7f7      	b.n	80037f2 <_Balloc+0x66>
 8003802:	bf00      	nop
 8003804:	0800483a 	.word	0x0800483a
 8003808:	080048cb 	.word	0x080048cb

0800380c <_Bfree>:
 800380c:	b570      	push	{r4, r5, r6, lr}
 800380e:	69c6      	ldr	r6, [r0, #28]
 8003810:	4605      	mov	r5, r0
 8003812:	460c      	mov	r4, r1
 8003814:	b976      	cbnz	r6, 8003834 <_Bfree+0x28>
 8003816:	2010      	movs	r0, #16
 8003818:	f7fe fbac 	bl	8001f74 <malloc>
 800381c:	4602      	mov	r2, r0
 800381e:	61e8      	str	r0, [r5, #28]
 8003820:	b920      	cbnz	r0, 800382c <_Bfree+0x20>
 8003822:	4b09      	ldr	r3, [pc, #36]	@ (8003848 <_Bfree+0x3c>)
 8003824:	4809      	ldr	r0, [pc, #36]	@ (800384c <_Bfree+0x40>)
 8003826:	218f      	movs	r1, #143	@ 0x8f
 8003828:	f000 fc10 	bl	800404c <__assert_func>
 800382c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003830:	6006      	str	r6, [r0, #0]
 8003832:	60c6      	str	r6, [r0, #12]
 8003834:	b13c      	cbz	r4, 8003846 <_Bfree+0x3a>
 8003836:	69eb      	ldr	r3, [r5, #28]
 8003838:	6862      	ldr	r2, [r4, #4]
 800383a:	68db      	ldr	r3, [r3, #12]
 800383c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003840:	6021      	str	r1, [r4, #0]
 8003842:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003846:	bd70      	pop	{r4, r5, r6, pc}
 8003848:	0800483a 	.word	0x0800483a
 800384c:	080048cb 	.word	0x080048cb

08003850 <__multadd>:
 8003850:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003854:	690d      	ldr	r5, [r1, #16]
 8003856:	4607      	mov	r7, r0
 8003858:	460c      	mov	r4, r1
 800385a:	461e      	mov	r6, r3
 800385c:	f101 0c14 	add.w	ip, r1, #20
 8003860:	2000      	movs	r0, #0
 8003862:	f8dc 3000 	ldr.w	r3, [ip]
 8003866:	b299      	uxth	r1, r3
 8003868:	fb02 6101 	mla	r1, r2, r1, r6
 800386c:	0c1e      	lsrs	r6, r3, #16
 800386e:	0c0b      	lsrs	r3, r1, #16
 8003870:	fb02 3306 	mla	r3, r2, r6, r3
 8003874:	b289      	uxth	r1, r1
 8003876:	3001      	adds	r0, #1
 8003878:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800387c:	4285      	cmp	r5, r0
 800387e:	f84c 1b04 	str.w	r1, [ip], #4
 8003882:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003886:	dcec      	bgt.n	8003862 <__multadd+0x12>
 8003888:	b30e      	cbz	r6, 80038ce <__multadd+0x7e>
 800388a:	68a3      	ldr	r3, [r4, #8]
 800388c:	42ab      	cmp	r3, r5
 800388e:	dc19      	bgt.n	80038c4 <__multadd+0x74>
 8003890:	6861      	ldr	r1, [r4, #4]
 8003892:	4638      	mov	r0, r7
 8003894:	3101      	adds	r1, #1
 8003896:	f7ff ff79 	bl	800378c <_Balloc>
 800389a:	4680      	mov	r8, r0
 800389c:	b928      	cbnz	r0, 80038aa <__multadd+0x5a>
 800389e:	4602      	mov	r2, r0
 80038a0:	4b0c      	ldr	r3, [pc, #48]	@ (80038d4 <__multadd+0x84>)
 80038a2:	480d      	ldr	r0, [pc, #52]	@ (80038d8 <__multadd+0x88>)
 80038a4:	21ba      	movs	r1, #186	@ 0xba
 80038a6:	f000 fbd1 	bl	800404c <__assert_func>
 80038aa:	6922      	ldr	r2, [r4, #16]
 80038ac:	3202      	adds	r2, #2
 80038ae:	f104 010c 	add.w	r1, r4, #12
 80038b2:	0092      	lsls	r2, r2, #2
 80038b4:	300c      	adds	r0, #12
 80038b6:	f000 fbbb 	bl	8004030 <memcpy>
 80038ba:	4621      	mov	r1, r4
 80038bc:	4638      	mov	r0, r7
 80038be:	f7ff ffa5 	bl	800380c <_Bfree>
 80038c2:	4644      	mov	r4, r8
 80038c4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80038c8:	3501      	adds	r5, #1
 80038ca:	615e      	str	r6, [r3, #20]
 80038cc:	6125      	str	r5, [r4, #16]
 80038ce:	4620      	mov	r0, r4
 80038d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80038d4:	080048a9 	.word	0x080048a9
 80038d8:	080048cb 	.word	0x080048cb

080038dc <__hi0bits>:
 80038dc:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80038e0:	4603      	mov	r3, r0
 80038e2:	bf36      	itet	cc
 80038e4:	0403      	lslcc	r3, r0, #16
 80038e6:	2000      	movcs	r0, #0
 80038e8:	2010      	movcc	r0, #16
 80038ea:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80038ee:	bf3c      	itt	cc
 80038f0:	021b      	lslcc	r3, r3, #8
 80038f2:	3008      	addcc	r0, #8
 80038f4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80038f8:	bf3c      	itt	cc
 80038fa:	011b      	lslcc	r3, r3, #4
 80038fc:	3004      	addcc	r0, #4
 80038fe:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003902:	bf3c      	itt	cc
 8003904:	009b      	lslcc	r3, r3, #2
 8003906:	3002      	addcc	r0, #2
 8003908:	2b00      	cmp	r3, #0
 800390a:	db05      	blt.n	8003918 <__hi0bits+0x3c>
 800390c:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003910:	f100 0001 	add.w	r0, r0, #1
 8003914:	bf08      	it	eq
 8003916:	2020      	moveq	r0, #32
 8003918:	4770      	bx	lr

0800391a <__lo0bits>:
 800391a:	6803      	ldr	r3, [r0, #0]
 800391c:	4602      	mov	r2, r0
 800391e:	f013 0007 	ands.w	r0, r3, #7
 8003922:	d00b      	beq.n	800393c <__lo0bits+0x22>
 8003924:	07d9      	lsls	r1, r3, #31
 8003926:	d421      	bmi.n	800396c <__lo0bits+0x52>
 8003928:	0798      	lsls	r0, r3, #30
 800392a:	bf49      	itett	mi
 800392c:	085b      	lsrmi	r3, r3, #1
 800392e:	089b      	lsrpl	r3, r3, #2
 8003930:	2001      	movmi	r0, #1
 8003932:	6013      	strmi	r3, [r2, #0]
 8003934:	bf5c      	itt	pl
 8003936:	6013      	strpl	r3, [r2, #0]
 8003938:	2002      	movpl	r0, #2
 800393a:	4770      	bx	lr
 800393c:	b299      	uxth	r1, r3
 800393e:	b909      	cbnz	r1, 8003944 <__lo0bits+0x2a>
 8003940:	0c1b      	lsrs	r3, r3, #16
 8003942:	2010      	movs	r0, #16
 8003944:	b2d9      	uxtb	r1, r3
 8003946:	b909      	cbnz	r1, 800394c <__lo0bits+0x32>
 8003948:	3008      	adds	r0, #8
 800394a:	0a1b      	lsrs	r3, r3, #8
 800394c:	0719      	lsls	r1, r3, #28
 800394e:	bf04      	itt	eq
 8003950:	091b      	lsreq	r3, r3, #4
 8003952:	3004      	addeq	r0, #4
 8003954:	0799      	lsls	r1, r3, #30
 8003956:	bf04      	itt	eq
 8003958:	089b      	lsreq	r3, r3, #2
 800395a:	3002      	addeq	r0, #2
 800395c:	07d9      	lsls	r1, r3, #31
 800395e:	d403      	bmi.n	8003968 <__lo0bits+0x4e>
 8003960:	085b      	lsrs	r3, r3, #1
 8003962:	f100 0001 	add.w	r0, r0, #1
 8003966:	d003      	beq.n	8003970 <__lo0bits+0x56>
 8003968:	6013      	str	r3, [r2, #0]
 800396a:	4770      	bx	lr
 800396c:	2000      	movs	r0, #0
 800396e:	4770      	bx	lr
 8003970:	2020      	movs	r0, #32
 8003972:	4770      	bx	lr

08003974 <__i2b>:
 8003974:	b510      	push	{r4, lr}
 8003976:	460c      	mov	r4, r1
 8003978:	2101      	movs	r1, #1
 800397a:	f7ff ff07 	bl	800378c <_Balloc>
 800397e:	4602      	mov	r2, r0
 8003980:	b928      	cbnz	r0, 800398e <__i2b+0x1a>
 8003982:	4b05      	ldr	r3, [pc, #20]	@ (8003998 <__i2b+0x24>)
 8003984:	4805      	ldr	r0, [pc, #20]	@ (800399c <__i2b+0x28>)
 8003986:	f240 1145 	movw	r1, #325	@ 0x145
 800398a:	f000 fb5f 	bl	800404c <__assert_func>
 800398e:	2301      	movs	r3, #1
 8003990:	6144      	str	r4, [r0, #20]
 8003992:	6103      	str	r3, [r0, #16]
 8003994:	bd10      	pop	{r4, pc}
 8003996:	bf00      	nop
 8003998:	080048a9 	.word	0x080048a9
 800399c:	080048cb 	.word	0x080048cb

080039a0 <__multiply>:
 80039a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039a4:	4614      	mov	r4, r2
 80039a6:	690a      	ldr	r2, [r1, #16]
 80039a8:	6923      	ldr	r3, [r4, #16]
 80039aa:	429a      	cmp	r2, r3
 80039ac:	bfa8      	it	ge
 80039ae:	4623      	movge	r3, r4
 80039b0:	460f      	mov	r7, r1
 80039b2:	bfa4      	itt	ge
 80039b4:	460c      	movge	r4, r1
 80039b6:	461f      	movge	r7, r3
 80039b8:	f8d4 a010 	ldr.w	sl, [r4, #16]
 80039bc:	f8d7 9010 	ldr.w	r9, [r7, #16]
 80039c0:	68a3      	ldr	r3, [r4, #8]
 80039c2:	6861      	ldr	r1, [r4, #4]
 80039c4:	eb0a 0609 	add.w	r6, sl, r9
 80039c8:	42b3      	cmp	r3, r6
 80039ca:	b085      	sub	sp, #20
 80039cc:	bfb8      	it	lt
 80039ce:	3101      	addlt	r1, #1
 80039d0:	f7ff fedc 	bl	800378c <_Balloc>
 80039d4:	b930      	cbnz	r0, 80039e4 <__multiply+0x44>
 80039d6:	4602      	mov	r2, r0
 80039d8:	4b44      	ldr	r3, [pc, #272]	@ (8003aec <__multiply+0x14c>)
 80039da:	4845      	ldr	r0, [pc, #276]	@ (8003af0 <__multiply+0x150>)
 80039dc:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80039e0:	f000 fb34 	bl	800404c <__assert_func>
 80039e4:	f100 0514 	add.w	r5, r0, #20
 80039e8:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80039ec:	462b      	mov	r3, r5
 80039ee:	2200      	movs	r2, #0
 80039f0:	4543      	cmp	r3, r8
 80039f2:	d321      	bcc.n	8003a38 <__multiply+0x98>
 80039f4:	f107 0114 	add.w	r1, r7, #20
 80039f8:	f104 0214 	add.w	r2, r4, #20
 80039fc:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003a00:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003a04:	9302      	str	r3, [sp, #8]
 8003a06:	1b13      	subs	r3, r2, r4
 8003a08:	3b15      	subs	r3, #21
 8003a0a:	f023 0303 	bic.w	r3, r3, #3
 8003a0e:	3304      	adds	r3, #4
 8003a10:	f104 0715 	add.w	r7, r4, #21
 8003a14:	42ba      	cmp	r2, r7
 8003a16:	bf38      	it	cc
 8003a18:	2304      	movcc	r3, #4
 8003a1a:	9301      	str	r3, [sp, #4]
 8003a1c:	9b02      	ldr	r3, [sp, #8]
 8003a1e:	9103      	str	r1, [sp, #12]
 8003a20:	428b      	cmp	r3, r1
 8003a22:	d80c      	bhi.n	8003a3e <__multiply+0x9e>
 8003a24:	2e00      	cmp	r6, #0
 8003a26:	dd03      	ble.n	8003a30 <__multiply+0x90>
 8003a28:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003a2c:	2b00      	cmp	r3, #0
 8003a2e:	d05a      	beq.n	8003ae6 <__multiply+0x146>
 8003a30:	6106      	str	r6, [r0, #16]
 8003a32:	b005      	add	sp, #20
 8003a34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a38:	f843 2b04 	str.w	r2, [r3], #4
 8003a3c:	e7d8      	b.n	80039f0 <__multiply+0x50>
 8003a3e:	f8b1 a000 	ldrh.w	sl, [r1]
 8003a42:	f1ba 0f00 	cmp.w	sl, #0
 8003a46:	d023      	beq.n	8003a90 <__multiply+0xf0>
 8003a48:	f104 0e14 	add.w	lr, r4, #20
 8003a4c:	46a9      	mov	r9, r5
 8003a4e:	f04f 0c00 	mov.w	ip, #0
 8003a52:	f85e 7b04 	ldr.w	r7, [lr], #4
 8003a56:	f8d9 3000 	ldr.w	r3, [r9]
 8003a5a:	fa1f fb87 	uxth.w	fp, r7
 8003a5e:	b29b      	uxth	r3, r3
 8003a60:	fb0a 330b 	mla	r3, sl, fp, r3
 8003a64:	4463      	add	r3, ip
 8003a66:	f8d9 c000 	ldr.w	ip, [r9]
 8003a6a:	0c3f      	lsrs	r7, r7, #16
 8003a6c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8003a70:	fb0a c707 	mla	r7, sl, r7, ip
 8003a74:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8003a78:	b29b      	uxth	r3, r3
 8003a7a:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003a7e:	4572      	cmp	r2, lr
 8003a80:	f849 3b04 	str.w	r3, [r9], #4
 8003a84:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003a88:	d8e3      	bhi.n	8003a52 <__multiply+0xb2>
 8003a8a:	9b01      	ldr	r3, [sp, #4]
 8003a8c:	f845 c003 	str.w	ip, [r5, r3]
 8003a90:	9b03      	ldr	r3, [sp, #12]
 8003a92:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003a96:	3104      	adds	r1, #4
 8003a98:	f1b9 0f00 	cmp.w	r9, #0
 8003a9c:	d021      	beq.n	8003ae2 <__multiply+0x142>
 8003a9e:	682b      	ldr	r3, [r5, #0]
 8003aa0:	f104 0c14 	add.w	ip, r4, #20
 8003aa4:	46ae      	mov	lr, r5
 8003aa6:	f04f 0a00 	mov.w	sl, #0
 8003aaa:	f8bc b000 	ldrh.w	fp, [ip]
 8003aae:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003ab2:	fb09 770b 	mla	r7, r9, fp, r7
 8003ab6:	4457      	add	r7, sl
 8003ab8:	b29b      	uxth	r3, r3
 8003aba:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003abe:	f84e 3b04 	str.w	r3, [lr], #4
 8003ac2:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003ac6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003aca:	f8be 3000 	ldrh.w	r3, [lr]
 8003ace:	fb09 330a 	mla	r3, r9, sl, r3
 8003ad2:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8003ad6:	4562      	cmp	r2, ip
 8003ad8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003adc:	d8e5      	bhi.n	8003aaa <__multiply+0x10a>
 8003ade:	9f01      	ldr	r7, [sp, #4]
 8003ae0:	51eb      	str	r3, [r5, r7]
 8003ae2:	3504      	adds	r5, #4
 8003ae4:	e79a      	b.n	8003a1c <__multiply+0x7c>
 8003ae6:	3e01      	subs	r6, #1
 8003ae8:	e79c      	b.n	8003a24 <__multiply+0x84>
 8003aea:	bf00      	nop
 8003aec:	080048a9 	.word	0x080048a9
 8003af0:	080048cb 	.word	0x080048cb

08003af4 <__pow5mult>:
 8003af4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003af8:	4615      	mov	r5, r2
 8003afa:	f012 0203 	ands.w	r2, r2, #3
 8003afe:	4607      	mov	r7, r0
 8003b00:	460e      	mov	r6, r1
 8003b02:	d007      	beq.n	8003b14 <__pow5mult+0x20>
 8003b04:	4c25      	ldr	r4, [pc, #148]	@ (8003b9c <__pow5mult+0xa8>)
 8003b06:	3a01      	subs	r2, #1
 8003b08:	2300      	movs	r3, #0
 8003b0a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003b0e:	f7ff fe9f 	bl	8003850 <__multadd>
 8003b12:	4606      	mov	r6, r0
 8003b14:	10ad      	asrs	r5, r5, #2
 8003b16:	d03d      	beq.n	8003b94 <__pow5mult+0xa0>
 8003b18:	69fc      	ldr	r4, [r7, #28]
 8003b1a:	b97c      	cbnz	r4, 8003b3c <__pow5mult+0x48>
 8003b1c:	2010      	movs	r0, #16
 8003b1e:	f7fe fa29 	bl	8001f74 <malloc>
 8003b22:	4602      	mov	r2, r0
 8003b24:	61f8      	str	r0, [r7, #28]
 8003b26:	b928      	cbnz	r0, 8003b34 <__pow5mult+0x40>
 8003b28:	4b1d      	ldr	r3, [pc, #116]	@ (8003ba0 <__pow5mult+0xac>)
 8003b2a:	481e      	ldr	r0, [pc, #120]	@ (8003ba4 <__pow5mult+0xb0>)
 8003b2c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003b30:	f000 fa8c 	bl	800404c <__assert_func>
 8003b34:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003b38:	6004      	str	r4, [r0, #0]
 8003b3a:	60c4      	str	r4, [r0, #12]
 8003b3c:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003b40:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003b44:	b94c      	cbnz	r4, 8003b5a <__pow5mult+0x66>
 8003b46:	f240 2171 	movw	r1, #625	@ 0x271
 8003b4a:	4638      	mov	r0, r7
 8003b4c:	f7ff ff12 	bl	8003974 <__i2b>
 8003b50:	2300      	movs	r3, #0
 8003b52:	f8c8 0008 	str.w	r0, [r8, #8]
 8003b56:	4604      	mov	r4, r0
 8003b58:	6003      	str	r3, [r0, #0]
 8003b5a:	f04f 0900 	mov.w	r9, #0
 8003b5e:	07eb      	lsls	r3, r5, #31
 8003b60:	d50a      	bpl.n	8003b78 <__pow5mult+0x84>
 8003b62:	4631      	mov	r1, r6
 8003b64:	4622      	mov	r2, r4
 8003b66:	4638      	mov	r0, r7
 8003b68:	f7ff ff1a 	bl	80039a0 <__multiply>
 8003b6c:	4631      	mov	r1, r6
 8003b6e:	4680      	mov	r8, r0
 8003b70:	4638      	mov	r0, r7
 8003b72:	f7ff fe4b 	bl	800380c <_Bfree>
 8003b76:	4646      	mov	r6, r8
 8003b78:	106d      	asrs	r5, r5, #1
 8003b7a:	d00b      	beq.n	8003b94 <__pow5mult+0xa0>
 8003b7c:	6820      	ldr	r0, [r4, #0]
 8003b7e:	b938      	cbnz	r0, 8003b90 <__pow5mult+0x9c>
 8003b80:	4622      	mov	r2, r4
 8003b82:	4621      	mov	r1, r4
 8003b84:	4638      	mov	r0, r7
 8003b86:	f7ff ff0b 	bl	80039a0 <__multiply>
 8003b8a:	6020      	str	r0, [r4, #0]
 8003b8c:	f8c0 9000 	str.w	r9, [r0]
 8003b90:	4604      	mov	r4, r0
 8003b92:	e7e4      	b.n	8003b5e <__pow5mult+0x6a>
 8003b94:	4630      	mov	r0, r6
 8003b96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003b9a:	bf00      	nop
 8003b9c:	08004924 	.word	0x08004924
 8003ba0:	0800483a 	.word	0x0800483a
 8003ba4:	080048cb 	.word	0x080048cb

08003ba8 <__lshift>:
 8003ba8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003bac:	460c      	mov	r4, r1
 8003bae:	6849      	ldr	r1, [r1, #4]
 8003bb0:	6923      	ldr	r3, [r4, #16]
 8003bb2:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003bb6:	68a3      	ldr	r3, [r4, #8]
 8003bb8:	4607      	mov	r7, r0
 8003bba:	4691      	mov	r9, r2
 8003bbc:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003bc0:	f108 0601 	add.w	r6, r8, #1
 8003bc4:	42b3      	cmp	r3, r6
 8003bc6:	db0b      	blt.n	8003be0 <__lshift+0x38>
 8003bc8:	4638      	mov	r0, r7
 8003bca:	f7ff fddf 	bl	800378c <_Balloc>
 8003bce:	4605      	mov	r5, r0
 8003bd0:	b948      	cbnz	r0, 8003be6 <__lshift+0x3e>
 8003bd2:	4602      	mov	r2, r0
 8003bd4:	4b28      	ldr	r3, [pc, #160]	@ (8003c78 <__lshift+0xd0>)
 8003bd6:	4829      	ldr	r0, [pc, #164]	@ (8003c7c <__lshift+0xd4>)
 8003bd8:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003bdc:	f000 fa36 	bl	800404c <__assert_func>
 8003be0:	3101      	adds	r1, #1
 8003be2:	005b      	lsls	r3, r3, #1
 8003be4:	e7ee      	b.n	8003bc4 <__lshift+0x1c>
 8003be6:	2300      	movs	r3, #0
 8003be8:	f100 0114 	add.w	r1, r0, #20
 8003bec:	f100 0210 	add.w	r2, r0, #16
 8003bf0:	4618      	mov	r0, r3
 8003bf2:	4553      	cmp	r3, sl
 8003bf4:	db33      	blt.n	8003c5e <__lshift+0xb6>
 8003bf6:	6920      	ldr	r0, [r4, #16]
 8003bf8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003bfc:	f104 0314 	add.w	r3, r4, #20
 8003c00:	f019 091f 	ands.w	r9, r9, #31
 8003c04:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003c08:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003c0c:	d02b      	beq.n	8003c66 <__lshift+0xbe>
 8003c0e:	f1c9 0e20 	rsb	lr, r9, #32
 8003c12:	468a      	mov	sl, r1
 8003c14:	2200      	movs	r2, #0
 8003c16:	6818      	ldr	r0, [r3, #0]
 8003c18:	fa00 f009 	lsl.w	r0, r0, r9
 8003c1c:	4310      	orrs	r0, r2
 8003c1e:	f84a 0b04 	str.w	r0, [sl], #4
 8003c22:	f853 2b04 	ldr.w	r2, [r3], #4
 8003c26:	459c      	cmp	ip, r3
 8003c28:	fa22 f20e 	lsr.w	r2, r2, lr
 8003c2c:	d8f3      	bhi.n	8003c16 <__lshift+0x6e>
 8003c2e:	ebac 0304 	sub.w	r3, ip, r4
 8003c32:	3b15      	subs	r3, #21
 8003c34:	f023 0303 	bic.w	r3, r3, #3
 8003c38:	3304      	adds	r3, #4
 8003c3a:	f104 0015 	add.w	r0, r4, #21
 8003c3e:	4584      	cmp	ip, r0
 8003c40:	bf38      	it	cc
 8003c42:	2304      	movcc	r3, #4
 8003c44:	50ca      	str	r2, [r1, r3]
 8003c46:	b10a      	cbz	r2, 8003c4c <__lshift+0xa4>
 8003c48:	f108 0602 	add.w	r6, r8, #2
 8003c4c:	3e01      	subs	r6, #1
 8003c4e:	4638      	mov	r0, r7
 8003c50:	612e      	str	r6, [r5, #16]
 8003c52:	4621      	mov	r1, r4
 8003c54:	f7ff fdda 	bl	800380c <_Bfree>
 8003c58:	4628      	mov	r0, r5
 8003c5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c5e:	f842 0f04 	str.w	r0, [r2, #4]!
 8003c62:	3301      	adds	r3, #1
 8003c64:	e7c5      	b.n	8003bf2 <__lshift+0x4a>
 8003c66:	3904      	subs	r1, #4
 8003c68:	f853 2b04 	ldr.w	r2, [r3], #4
 8003c6c:	f841 2f04 	str.w	r2, [r1, #4]!
 8003c70:	459c      	cmp	ip, r3
 8003c72:	d8f9      	bhi.n	8003c68 <__lshift+0xc0>
 8003c74:	e7ea      	b.n	8003c4c <__lshift+0xa4>
 8003c76:	bf00      	nop
 8003c78:	080048a9 	.word	0x080048a9
 8003c7c:	080048cb 	.word	0x080048cb

08003c80 <__mcmp>:
 8003c80:	690a      	ldr	r2, [r1, #16]
 8003c82:	4603      	mov	r3, r0
 8003c84:	6900      	ldr	r0, [r0, #16]
 8003c86:	1a80      	subs	r0, r0, r2
 8003c88:	b530      	push	{r4, r5, lr}
 8003c8a:	d10e      	bne.n	8003caa <__mcmp+0x2a>
 8003c8c:	3314      	adds	r3, #20
 8003c8e:	3114      	adds	r1, #20
 8003c90:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003c94:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003c98:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003c9c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003ca0:	4295      	cmp	r5, r2
 8003ca2:	d003      	beq.n	8003cac <__mcmp+0x2c>
 8003ca4:	d205      	bcs.n	8003cb2 <__mcmp+0x32>
 8003ca6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003caa:	bd30      	pop	{r4, r5, pc}
 8003cac:	42a3      	cmp	r3, r4
 8003cae:	d3f3      	bcc.n	8003c98 <__mcmp+0x18>
 8003cb0:	e7fb      	b.n	8003caa <__mcmp+0x2a>
 8003cb2:	2001      	movs	r0, #1
 8003cb4:	e7f9      	b.n	8003caa <__mcmp+0x2a>
	...

08003cb8 <__mdiff>:
 8003cb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cbc:	4689      	mov	r9, r1
 8003cbe:	4606      	mov	r6, r0
 8003cc0:	4611      	mov	r1, r2
 8003cc2:	4648      	mov	r0, r9
 8003cc4:	4614      	mov	r4, r2
 8003cc6:	f7ff ffdb 	bl	8003c80 <__mcmp>
 8003cca:	1e05      	subs	r5, r0, #0
 8003ccc:	d112      	bne.n	8003cf4 <__mdiff+0x3c>
 8003cce:	4629      	mov	r1, r5
 8003cd0:	4630      	mov	r0, r6
 8003cd2:	f7ff fd5b 	bl	800378c <_Balloc>
 8003cd6:	4602      	mov	r2, r0
 8003cd8:	b928      	cbnz	r0, 8003ce6 <__mdiff+0x2e>
 8003cda:	4b3e      	ldr	r3, [pc, #248]	@ (8003dd4 <__mdiff+0x11c>)
 8003cdc:	f240 2137 	movw	r1, #567	@ 0x237
 8003ce0:	483d      	ldr	r0, [pc, #244]	@ (8003dd8 <__mdiff+0x120>)
 8003ce2:	f000 f9b3 	bl	800404c <__assert_func>
 8003ce6:	2301      	movs	r3, #1
 8003ce8:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003cec:	4610      	mov	r0, r2
 8003cee:	b003      	add	sp, #12
 8003cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003cf4:	bfbc      	itt	lt
 8003cf6:	464b      	movlt	r3, r9
 8003cf8:	46a1      	movlt	r9, r4
 8003cfa:	4630      	mov	r0, r6
 8003cfc:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003d00:	bfba      	itte	lt
 8003d02:	461c      	movlt	r4, r3
 8003d04:	2501      	movlt	r5, #1
 8003d06:	2500      	movge	r5, #0
 8003d08:	f7ff fd40 	bl	800378c <_Balloc>
 8003d0c:	4602      	mov	r2, r0
 8003d0e:	b918      	cbnz	r0, 8003d18 <__mdiff+0x60>
 8003d10:	4b30      	ldr	r3, [pc, #192]	@ (8003dd4 <__mdiff+0x11c>)
 8003d12:	f240 2145 	movw	r1, #581	@ 0x245
 8003d16:	e7e3      	b.n	8003ce0 <__mdiff+0x28>
 8003d18:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003d1c:	6926      	ldr	r6, [r4, #16]
 8003d1e:	60c5      	str	r5, [r0, #12]
 8003d20:	f109 0310 	add.w	r3, r9, #16
 8003d24:	f109 0514 	add.w	r5, r9, #20
 8003d28:	f104 0e14 	add.w	lr, r4, #20
 8003d2c:	f100 0b14 	add.w	fp, r0, #20
 8003d30:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003d34:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003d38:	9301      	str	r3, [sp, #4]
 8003d3a:	46d9      	mov	r9, fp
 8003d3c:	f04f 0c00 	mov.w	ip, #0
 8003d40:	9b01      	ldr	r3, [sp, #4]
 8003d42:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003d46:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003d4a:	9301      	str	r3, [sp, #4]
 8003d4c:	b281      	uxth	r1, r0
 8003d4e:	fa1f f38a 	uxth.w	r3, sl
 8003d52:	1a5b      	subs	r3, r3, r1
 8003d54:	0c00      	lsrs	r0, r0, #16
 8003d56:	4463      	add	r3, ip
 8003d58:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003d5c:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003d60:	b29b      	uxth	r3, r3
 8003d62:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003d66:	4576      	cmp	r6, lr
 8003d68:	f849 3b04 	str.w	r3, [r9], #4
 8003d6c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003d70:	d8e6      	bhi.n	8003d40 <__mdiff+0x88>
 8003d72:	1b33      	subs	r3, r6, r4
 8003d74:	3b15      	subs	r3, #21
 8003d76:	f023 0303 	bic.w	r3, r3, #3
 8003d7a:	3415      	adds	r4, #21
 8003d7c:	3304      	adds	r3, #4
 8003d7e:	42a6      	cmp	r6, r4
 8003d80:	bf38      	it	cc
 8003d82:	2304      	movcc	r3, #4
 8003d84:	441d      	add	r5, r3
 8003d86:	445b      	add	r3, fp
 8003d88:	461e      	mov	r6, r3
 8003d8a:	462c      	mov	r4, r5
 8003d8c:	4544      	cmp	r4, r8
 8003d8e:	d30e      	bcc.n	8003dae <__mdiff+0xf6>
 8003d90:	f108 0103 	add.w	r1, r8, #3
 8003d94:	1b49      	subs	r1, r1, r5
 8003d96:	f021 0103 	bic.w	r1, r1, #3
 8003d9a:	3d03      	subs	r5, #3
 8003d9c:	45a8      	cmp	r8, r5
 8003d9e:	bf38      	it	cc
 8003da0:	2100      	movcc	r1, #0
 8003da2:	440b      	add	r3, r1
 8003da4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003da8:	b191      	cbz	r1, 8003dd0 <__mdiff+0x118>
 8003daa:	6117      	str	r7, [r2, #16]
 8003dac:	e79e      	b.n	8003cec <__mdiff+0x34>
 8003dae:	f854 1b04 	ldr.w	r1, [r4], #4
 8003db2:	46e6      	mov	lr, ip
 8003db4:	0c08      	lsrs	r0, r1, #16
 8003db6:	fa1c fc81 	uxtah	ip, ip, r1
 8003dba:	4471      	add	r1, lr
 8003dbc:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003dc0:	b289      	uxth	r1, r1
 8003dc2:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003dc6:	f846 1b04 	str.w	r1, [r6], #4
 8003dca:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003dce:	e7dd      	b.n	8003d8c <__mdiff+0xd4>
 8003dd0:	3f01      	subs	r7, #1
 8003dd2:	e7e7      	b.n	8003da4 <__mdiff+0xec>
 8003dd4:	080048a9 	.word	0x080048a9
 8003dd8:	080048cb 	.word	0x080048cb

08003ddc <__d2b>:
 8003ddc:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8003de0:	2101      	movs	r1, #1
 8003de2:	9e08      	ldr	r6, [sp, #32]
 8003de4:	4690      	mov	r8, r2
 8003de6:	4699      	mov	r9, r3
 8003de8:	f7ff fcd0 	bl	800378c <_Balloc>
 8003dec:	4604      	mov	r4, r0
 8003dee:	b930      	cbnz	r0, 8003dfe <__d2b+0x22>
 8003df0:	4602      	mov	r2, r0
 8003df2:	4b24      	ldr	r3, [pc, #144]	@ (8003e84 <__d2b+0xa8>)
 8003df4:	4824      	ldr	r0, [pc, #144]	@ (8003e88 <__d2b+0xac>)
 8003df6:	f240 310f 	movw	r1, #783	@ 0x30f
 8003dfa:	f000 f927 	bl	800404c <__assert_func>
 8003dfe:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003e02:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003e06:	b10d      	cbz	r5, 8003e0c <__d2b+0x30>
 8003e08:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003e0c:	9301      	str	r3, [sp, #4]
 8003e0e:	f1b8 0300 	subs.w	r3, r8, #0
 8003e12:	d024      	beq.n	8003e5e <__d2b+0x82>
 8003e14:	4668      	mov	r0, sp
 8003e16:	9300      	str	r3, [sp, #0]
 8003e18:	f7ff fd7f 	bl	800391a <__lo0bits>
 8003e1c:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003e20:	b1d8      	cbz	r0, 8003e5a <__d2b+0x7e>
 8003e22:	f1c0 0320 	rsb	r3, r0, #32
 8003e26:	fa02 f303 	lsl.w	r3, r2, r3
 8003e2a:	430b      	orrs	r3, r1
 8003e2c:	40c2      	lsrs	r2, r0
 8003e2e:	6163      	str	r3, [r4, #20]
 8003e30:	9201      	str	r2, [sp, #4]
 8003e32:	9b01      	ldr	r3, [sp, #4]
 8003e34:	61a3      	str	r3, [r4, #24]
 8003e36:	2b00      	cmp	r3, #0
 8003e38:	bf0c      	ite	eq
 8003e3a:	2201      	moveq	r2, #1
 8003e3c:	2202      	movne	r2, #2
 8003e3e:	6122      	str	r2, [r4, #16]
 8003e40:	b1ad      	cbz	r5, 8003e6e <__d2b+0x92>
 8003e42:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003e46:	4405      	add	r5, r0
 8003e48:	6035      	str	r5, [r6, #0]
 8003e4a:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003e4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003e50:	6018      	str	r0, [r3, #0]
 8003e52:	4620      	mov	r0, r4
 8003e54:	b002      	add	sp, #8
 8003e56:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8003e5a:	6161      	str	r1, [r4, #20]
 8003e5c:	e7e9      	b.n	8003e32 <__d2b+0x56>
 8003e5e:	a801      	add	r0, sp, #4
 8003e60:	f7ff fd5b 	bl	800391a <__lo0bits>
 8003e64:	9b01      	ldr	r3, [sp, #4]
 8003e66:	6163      	str	r3, [r4, #20]
 8003e68:	3020      	adds	r0, #32
 8003e6a:	2201      	movs	r2, #1
 8003e6c:	e7e7      	b.n	8003e3e <__d2b+0x62>
 8003e6e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003e72:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003e76:	6030      	str	r0, [r6, #0]
 8003e78:	6918      	ldr	r0, [r3, #16]
 8003e7a:	f7ff fd2f 	bl	80038dc <__hi0bits>
 8003e7e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003e82:	e7e4      	b.n	8003e4e <__d2b+0x72>
 8003e84:	080048a9 	.word	0x080048a9
 8003e88:	080048cb 	.word	0x080048cb

08003e8c <__sread>:
 8003e8c:	b510      	push	{r4, lr}
 8003e8e:	460c      	mov	r4, r1
 8003e90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003e94:	f000 f8a8 	bl	8003fe8 <_read_r>
 8003e98:	2800      	cmp	r0, #0
 8003e9a:	bfab      	itete	ge
 8003e9c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8003e9e:	89a3      	ldrhlt	r3, [r4, #12]
 8003ea0:	181b      	addge	r3, r3, r0
 8003ea2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8003ea6:	bfac      	ite	ge
 8003ea8:	6563      	strge	r3, [r4, #84]	@ 0x54
 8003eaa:	81a3      	strhlt	r3, [r4, #12]
 8003eac:	bd10      	pop	{r4, pc}

08003eae <__swrite>:
 8003eae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003eb2:	461f      	mov	r7, r3
 8003eb4:	898b      	ldrh	r3, [r1, #12]
 8003eb6:	05db      	lsls	r3, r3, #23
 8003eb8:	4605      	mov	r5, r0
 8003eba:	460c      	mov	r4, r1
 8003ebc:	4616      	mov	r6, r2
 8003ebe:	d505      	bpl.n	8003ecc <__swrite+0x1e>
 8003ec0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003ec4:	2302      	movs	r3, #2
 8003ec6:	2200      	movs	r2, #0
 8003ec8:	f000 f87c 	bl	8003fc4 <_lseek_r>
 8003ecc:	89a3      	ldrh	r3, [r4, #12]
 8003ece:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003ed2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003ed6:	81a3      	strh	r3, [r4, #12]
 8003ed8:	4632      	mov	r2, r6
 8003eda:	463b      	mov	r3, r7
 8003edc:	4628      	mov	r0, r5
 8003ede:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003ee2:	f000 b893 	b.w	800400c <_write_r>

08003ee6 <__sseek>:
 8003ee6:	b510      	push	{r4, lr}
 8003ee8:	460c      	mov	r4, r1
 8003eea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003eee:	f000 f869 	bl	8003fc4 <_lseek_r>
 8003ef2:	1c43      	adds	r3, r0, #1
 8003ef4:	89a3      	ldrh	r3, [r4, #12]
 8003ef6:	bf15      	itete	ne
 8003ef8:	6560      	strne	r0, [r4, #84]	@ 0x54
 8003efa:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8003efe:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8003f02:	81a3      	strheq	r3, [r4, #12]
 8003f04:	bf18      	it	ne
 8003f06:	81a3      	strhne	r3, [r4, #12]
 8003f08:	bd10      	pop	{r4, pc}

08003f0a <__sclose>:
 8003f0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003f0e:	f000 b849 	b.w	8003fa4 <_close_r>

08003f12 <_realloc_r>:
 8003f12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f16:	4680      	mov	r8, r0
 8003f18:	4615      	mov	r5, r2
 8003f1a:	460c      	mov	r4, r1
 8003f1c:	b921      	cbnz	r1, 8003f28 <_realloc_r+0x16>
 8003f1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003f22:	4611      	mov	r1, r2
 8003f24:	f7fe b850 	b.w	8001fc8 <_malloc_r>
 8003f28:	b92a      	cbnz	r2, 8003f36 <_realloc_r+0x24>
 8003f2a:	f7ff f9e5 	bl	80032f8 <_free_r>
 8003f2e:	2400      	movs	r4, #0
 8003f30:	4620      	mov	r0, r4
 8003f32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003f36:	f000 f8cd 	bl	80040d4 <_malloc_usable_size_r>
 8003f3a:	4285      	cmp	r5, r0
 8003f3c:	4606      	mov	r6, r0
 8003f3e:	d802      	bhi.n	8003f46 <_realloc_r+0x34>
 8003f40:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8003f44:	d8f4      	bhi.n	8003f30 <_realloc_r+0x1e>
 8003f46:	4629      	mov	r1, r5
 8003f48:	4640      	mov	r0, r8
 8003f4a:	f7fe f83d 	bl	8001fc8 <_malloc_r>
 8003f4e:	4607      	mov	r7, r0
 8003f50:	2800      	cmp	r0, #0
 8003f52:	d0ec      	beq.n	8003f2e <_realloc_r+0x1c>
 8003f54:	42b5      	cmp	r5, r6
 8003f56:	462a      	mov	r2, r5
 8003f58:	4621      	mov	r1, r4
 8003f5a:	bf28      	it	cs
 8003f5c:	4632      	movcs	r2, r6
 8003f5e:	f000 f867 	bl	8004030 <memcpy>
 8003f62:	4621      	mov	r1, r4
 8003f64:	4640      	mov	r0, r8
 8003f66:	f7ff f9c7 	bl	80032f8 <_free_r>
 8003f6a:	463c      	mov	r4, r7
 8003f6c:	e7e0      	b.n	8003f30 <_realloc_r+0x1e>

08003f6e <memmove>:
 8003f6e:	4288      	cmp	r0, r1
 8003f70:	b510      	push	{r4, lr}
 8003f72:	eb01 0402 	add.w	r4, r1, r2
 8003f76:	d902      	bls.n	8003f7e <memmove+0x10>
 8003f78:	4284      	cmp	r4, r0
 8003f7a:	4623      	mov	r3, r4
 8003f7c:	d807      	bhi.n	8003f8e <memmove+0x20>
 8003f7e:	1e43      	subs	r3, r0, #1
 8003f80:	42a1      	cmp	r1, r4
 8003f82:	d008      	beq.n	8003f96 <memmove+0x28>
 8003f84:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003f88:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003f8c:	e7f8      	b.n	8003f80 <memmove+0x12>
 8003f8e:	4402      	add	r2, r0
 8003f90:	4601      	mov	r1, r0
 8003f92:	428a      	cmp	r2, r1
 8003f94:	d100      	bne.n	8003f98 <memmove+0x2a>
 8003f96:	bd10      	pop	{r4, pc}
 8003f98:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003f9c:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003fa0:	e7f7      	b.n	8003f92 <memmove+0x24>
	...

08003fa4 <_close_r>:
 8003fa4:	b538      	push	{r3, r4, r5, lr}
 8003fa6:	4d06      	ldr	r5, [pc, #24]	@ (8003fc0 <_close_r+0x1c>)
 8003fa8:	2300      	movs	r3, #0
 8003faa:	4604      	mov	r4, r0
 8003fac:	4608      	mov	r0, r1
 8003fae:	602b      	str	r3, [r5, #0]
 8003fb0:	f7fd fc85 	bl	80018be <_close>
 8003fb4:	1c43      	adds	r3, r0, #1
 8003fb6:	d102      	bne.n	8003fbe <_close_r+0x1a>
 8003fb8:	682b      	ldr	r3, [r5, #0]
 8003fba:	b103      	cbz	r3, 8003fbe <_close_r+0x1a>
 8003fbc:	6023      	str	r3, [r4, #0]
 8003fbe:	bd38      	pop	{r3, r4, r5, pc}
 8003fc0:	200003c8 	.word	0x200003c8

08003fc4 <_lseek_r>:
 8003fc4:	b538      	push	{r3, r4, r5, lr}
 8003fc6:	4d07      	ldr	r5, [pc, #28]	@ (8003fe4 <_lseek_r+0x20>)
 8003fc8:	4604      	mov	r4, r0
 8003fca:	4608      	mov	r0, r1
 8003fcc:	4611      	mov	r1, r2
 8003fce:	2200      	movs	r2, #0
 8003fd0:	602a      	str	r2, [r5, #0]
 8003fd2:	461a      	mov	r2, r3
 8003fd4:	f7fd fc97 	bl	8001906 <_lseek>
 8003fd8:	1c43      	adds	r3, r0, #1
 8003fda:	d102      	bne.n	8003fe2 <_lseek_r+0x1e>
 8003fdc:	682b      	ldr	r3, [r5, #0]
 8003fde:	b103      	cbz	r3, 8003fe2 <_lseek_r+0x1e>
 8003fe0:	6023      	str	r3, [r4, #0]
 8003fe2:	bd38      	pop	{r3, r4, r5, pc}
 8003fe4:	200003c8 	.word	0x200003c8

08003fe8 <_read_r>:
 8003fe8:	b538      	push	{r3, r4, r5, lr}
 8003fea:	4d07      	ldr	r5, [pc, #28]	@ (8004008 <_read_r+0x20>)
 8003fec:	4604      	mov	r4, r0
 8003fee:	4608      	mov	r0, r1
 8003ff0:	4611      	mov	r1, r2
 8003ff2:	2200      	movs	r2, #0
 8003ff4:	602a      	str	r2, [r5, #0]
 8003ff6:	461a      	mov	r2, r3
 8003ff8:	f7fd fc28 	bl	800184c <_read>
 8003ffc:	1c43      	adds	r3, r0, #1
 8003ffe:	d102      	bne.n	8004006 <_read_r+0x1e>
 8004000:	682b      	ldr	r3, [r5, #0]
 8004002:	b103      	cbz	r3, 8004006 <_read_r+0x1e>
 8004004:	6023      	str	r3, [r4, #0]
 8004006:	bd38      	pop	{r3, r4, r5, pc}
 8004008:	200003c8 	.word	0x200003c8

0800400c <_write_r>:
 800400c:	b538      	push	{r3, r4, r5, lr}
 800400e:	4d07      	ldr	r5, [pc, #28]	@ (800402c <_write_r+0x20>)
 8004010:	4604      	mov	r4, r0
 8004012:	4608      	mov	r0, r1
 8004014:	4611      	mov	r1, r2
 8004016:	2200      	movs	r2, #0
 8004018:	602a      	str	r2, [r5, #0]
 800401a:	461a      	mov	r2, r3
 800401c:	f7fd fc33 	bl	8001886 <_write>
 8004020:	1c43      	adds	r3, r0, #1
 8004022:	d102      	bne.n	800402a <_write_r+0x1e>
 8004024:	682b      	ldr	r3, [r5, #0]
 8004026:	b103      	cbz	r3, 800402a <_write_r+0x1e>
 8004028:	6023      	str	r3, [r4, #0]
 800402a:	bd38      	pop	{r3, r4, r5, pc}
 800402c:	200003c8 	.word	0x200003c8

08004030 <memcpy>:
 8004030:	440a      	add	r2, r1
 8004032:	4291      	cmp	r1, r2
 8004034:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8004038:	d100      	bne.n	800403c <memcpy+0xc>
 800403a:	4770      	bx	lr
 800403c:	b510      	push	{r4, lr}
 800403e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004042:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004046:	4291      	cmp	r1, r2
 8004048:	d1f9      	bne.n	800403e <memcpy+0xe>
 800404a:	bd10      	pop	{r4, pc}

0800404c <__assert_func>:
 800404c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800404e:	4614      	mov	r4, r2
 8004050:	461a      	mov	r2, r3
 8004052:	4b09      	ldr	r3, [pc, #36]	@ (8004078 <__assert_func+0x2c>)
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	4605      	mov	r5, r0
 8004058:	68d8      	ldr	r0, [r3, #12]
 800405a:	b954      	cbnz	r4, 8004072 <__assert_func+0x26>
 800405c:	4b07      	ldr	r3, [pc, #28]	@ (800407c <__assert_func+0x30>)
 800405e:	461c      	mov	r4, r3
 8004060:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004064:	9100      	str	r1, [sp, #0]
 8004066:	462b      	mov	r3, r5
 8004068:	4905      	ldr	r1, [pc, #20]	@ (8004080 <__assert_func+0x34>)
 800406a:	f000 f83b 	bl	80040e4 <fiprintf>
 800406e:	f000 f858 	bl	8004122 <abort>
 8004072:	4b04      	ldr	r3, [pc, #16]	@ (8004084 <__assert_func+0x38>)
 8004074:	e7f4      	b.n	8004060 <__assert_func+0x14>
 8004076:	bf00      	nop
 8004078:	20000038 	.word	0x20000038
 800407c:	08004b66 	.word	0x08004b66
 8004080:	08004b38 	.word	0x08004b38
 8004084:	08004b2b 	.word	0x08004b2b

08004088 <_calloc_r>:
 8004088:	b570      	push	{r4, r5, r6, lr}
 800408a:	fba1 5402 	umull	r5, r4, r1, r2
 800408e:	b93c      	cbnz	r4, 80040a0 <_calloc_r+0x18>
 8004090:	4629      	mov	r1, r5
 8004092:	f7fd ff99 	bl	8001fc8 <_malloc_r>
 8004096:	4606      	mov	r6, r0
 8004098:	b928      	cbnz	r0, 80040a6 <_calloc_r+0x1e>
 800409a:	2600      	movs	r6, #0
 800409c:	4630      	mov	r0, r6
 800409e:	bd70      	pop	{r4, r5, r6, pc}
 80040a0:	220c      	movs	r2, #12
 80040a2:	6002      	str	r2, [r0, #0]
 80040a4:	e7f9      	b.n	800409a <_calloc_r+0x12>
 80040a6:	462a      	mov	r2, r5
 80040a8:	4621      	mov	r1, r4
 80040aa:	f7fe fa89 	bl	80025c0 <memset>
 80040ae:	e7f5      	b.n	800409c <_calloc_r+0x14>

080040b0 <__ascii_mbtowc>:
 80040b0:	b082      	sub	sp, #8
 80040b2:	b901      	cbnz	r1, 80040b6 <__ascii_mbtowc+0x6>
 80040b4:	a901      	add	r1, sp, #4
 80040b6:	b142      	cbz	r2, 80040ca <__ascii_mbtowc+0x1a>
 80040b8:	b14b      	cbz	r3, 80040ce <__ascii_mbtowc+0x1e>
 80040ba:	7813      	ldrb	r3, [r2, #0]
 80040bc:	600b      	str	r3, [r1, #0]
 80040be:	7812      	ldrb	r2, [r2, #0]
 80040c0:	1e10      	subs	r0, r2, #0
 80040c2:	bf18      	it	ne
 80040c4:	2001      	movne	r0, #1
 80040c6:	b002      	add	sp, #8
 80040c8:	4770      	bx	lr
 80040ca:	4610      	mov	r0, r2
 80040cc:	e7fb      	b.n	80040c6 <__ascii_mbtowc+0x16>
 80040ce:	f06f 0001 	mvn.w	r0, #1
 80040d2:	e7f8      	b.n	80040c6 <__ascii_mbtowc+0x16>

080040d4 <_malloc_usable_size_r>:
 80040d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80040d8:	1f18      	subs	r0, r3, #4
 80040da:	2b00      	cmp	r3, #0
 80040dc:	bfbc      	itt	lt
 80040de:	580b      	ldrlt	r3, [r1, r0]
 80040e0:	18c0      	addlt	r0, r0, r3
 80040e2:	4770      	bx	lr

080040e4 <fiprintf>:
 80040e4:	b40e      	push	{r1, r2, r3}
 80040e6:	b503      	push	{r0, r1, lr}
 80040e8:	4601      	mov	r1, r0
 80040ea:	ab03      	add	r3, sp, #12
 80040ec:	4805      	ldr	r0, [pc, #20]	@ (8004104 <fiprintf+0x20>)
 80040ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80040f2:	6800      	ldr	r0, [r0, #0]
 80040f4:	9301      	str	r3, [sp, #4]
 80040f6:	f000 f843 	bl	8004180 <_vfiprintf_r>
 80040fa:	b002      	add	sp, #8
 80040fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8004100:	b003      	add	sp, #12
 8004102:	4770      	bx	lr
 8004104:	20000038 	.word	0x20000038

08004108 <__ascii_wctomb>:
 8004108:	4603      	mov	r3, r0
 800410a:	4608      	mov	r0, r1
 800410c:	b141      	cbz	r1, 8004120 <__ascii_wctomb+0x18>
 800410e:	2aff      	cmp	r2, #255	@ 0xff
 8004110:	d904      	bls.n	800411c <__ascii_wctomb+0x14>
 8004112:	228a      	movs	r2, #138	@ 0x8a
 8004114:	601a      	str	r2, [r3, #0]
 8004116:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800411a:	4770      	bx	lr
 800411c:	700a      	strb	r2, [r1, #0]
 800411e:	2001      	movs	r0, #1
 8004120:	4770      	bx	lr

08004122 <abort>:
 8004122:	b508      	push	{r3, lr}
 8004124:	2006      	movs	r0, #6
 8004126:	f000 fa83 	bl	8004630 <raise>
 800412a:	2001      	movs	r0, #1
 800412c:	f7fd fb83 	bl	8001836 <_exit>

08004130 <__sfputc_r>:
 8004130:	6893      	ldr	r3, [r2, #8]
 8004132:	3b01      	subs	r3, #1
 8004134:	2b00      	cmp	r3, #0
 8004136:	b410      	push	{r4}
 8004138:	6093      	str	r3, [r2, #8]
 800413a:	da07      	bge.n	800414c <__sfputc_r+0x1c>
 800413c:	6994      	ldr	r4, [r2, #24]
 800413e:	42a3      	cmp	r3, r4
 8004140:	db01      	blt.n	8004146 <__sfputc_r+0x16>
 8004142:	290a      	cmp	r1, #10
 8004144:	d102      	bne.n	800414c <__sfputc_r+0x1c>
 8004146:	bc10      	pop	{r4}
 8004148:	f000 b932 	b.w	80043b0 <__swbuf_r>
 800414c:	6813      	ldr	r3, [r2, #0]
 800414e:	1c58      	adds	r0, r3, #1
 8004150:	6010      	str	r0, [r2, #0]
 8004152:	7019      	strb	r1, [r3, #0]
 8004154:	4608      	mov	r0, r1
 8004156:	bc10      	pop	{r4}
 8004158:	4770      	bx	lr

0800415a <__sfputs_r>:
 800415a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800415c:	4606      	mov	r6, r0
 800415e:	460f      	mov	r7, r1
 8004160:	4614      	mov	r4, r2
 8004162:	18d5      	adds	r5, r2, r3
 8004164:	42ac      	cmp	r4, r5
 8004166:	d101      	bne.n	800416c <__sfputs_r+0x12>
 8004168:	2000      	movs	r0, #0
 800416a:	e007      	b.n	800417c <__sfputs_r+0x22>
 800416c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004170:	463a      	mov	r2, r7
 8004172:	4630      	mov	r0, r6
 8004174:	f7ff ffdc 	bl	8004130 <__sfputc_r>
 8004178:	1c43      	adds	r3, r0, #1
 800417a:	d1f3      	bne.n	8004164 <__sfputs_r+0xa>
 800417c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08004180 <_vfiprintf_r>:
 8004180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004184:	460d      	mov	r5, r1
 8004186:	b09d      	sub	sp, #116	@ 0x74
 8004188:	4614      	mov	r4, r2
 800418a:	4698      	mov	r8, r3
 800418c:	4606      	mov	r6, r0
 800418e:	b118      	cbz	r0, 8004198 <_vfiprintf_r+0x18>
 8004190:	6a03      	ldr	r3, [r0, #32]
 8004192:	b90b      	cbnz	r3, 8004198 <_vfiprintf_r+0x18>
 8004194:	f7fe f9de 	bl	8002554 <__sinit>
 8004198:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800419a:	07d9      	lsls	r1, r3, #31
 800419c:	d405      	bmi.n	80041aa <_vfiprintf_r+0x2a>
 800419e:	89ab      	ldrh	r3, [r5, #12]
 80041a0:	059a      	lsls	r2, r3, #22
 80041a2:	d402      	bmi.n	80041aa <_vfiprintf_r+0x2a>
 80041a4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80041a6:	f7fe fa52 	bl	800264e <__retarget_lock_acquire_recursive>
 80041aa:	89ab      	ldrh	r3, [r5, #12]
 80041ac:	071b      	lsls	r3, r3, #28
 80041ae:	d501      	bpl.n	80041b4 <_vfiprintf_r+0x34>
 80041b0:	692b      	ldr	r3, [r5, #16]
 80041b2:	b99b      	cbnz	r3, 80041dc <_vfiprintf_r+0x5c>
 80041b4:	4629      	mov	r1, r5
 80041b6:	4630      	mov	r0, r6
 80041b8:	f000 f938 	bl	800442c <__swsetup_r>
 80041bc:	b170      	cbz	r0, 80041dc <_vfiprintf_r+0x5c>
 80041be:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80041c0:	07dc      	lsls	r4, r3, #31
 80041c2:	d504      	bpl.n	80041ce <_vfiprintf_r+0x4e>
 80041c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80041c8:	b01d      	add	sp, #116	@ 0x74
 80041ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80041ce:	89ab      	ldrh	r3, [r5, #12]
 80041d0:	0598      	lsls	r0, r3, #22
 80041d2:	d4f7      	bmi.n	80041c4 <_vfiprintf_r+0x44>
 80041d4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80041d6:	f7fe fa3b 	bl	8002650 <__retarget_lock_release_recursive>
 80041da:	e7f3      	b.n	80041c4 <_vfiprintf_r+0x44>
 80041dc:	2300      	movs	r3, #0
 80041de:	9309      	str	r3, [sp, #36]	@ 0x24
 80041e0:	2320      	movs	r3, #32
 80041e2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80041e6:	f8cd 800c 	str.w	r8, [sp, #12]
 80041ea:	2330      	movs	r3, #48	@ 0x30
 80041ec:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800439c <_vfiprintf_r+0x21c>
 80041f0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80041f4:	f04f 0901 	mov.w	r9, #1
 80041f8:	4623      	mov	r3, r4
 80041fa:	469a      	mov	sl, r3
 80041fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004200:	b10a      	cbz	r2, 8004206 <_vfiprintf_r+0x86>
 8004202:	2a25      	cmp	r2, #37	@ 0x25
 8004204:	d1f9      	bne.n	80041fa <_vfiprintf_r+0x7a>
 8004206:	ebba 0b04 	subs.w	fp, sl, r4
 800420a:	d00b      	beq.n	8004224 <_vfiprintf_r+0xa4>
 800420c:	465b      	mov	r3, fp
 800420e:	4622      	mov	r2, r4
 8004210:	4629      	mov	r1, r5
 8004212:	4630      	mov	r0, r6
 8004214:	f7ff ffa1 	bl	800415a <__sfputs_r>
 8004218:	3001      	adds	r0, #1
 800421a:	f000 80a7 	beq.w	800436c <_vfiprintf_r+0x1ec>
 800421e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004220:	445a      	add	r2, fp
 8004222:	9209      	str	r2, [sp, #36]	@ 0x24
 8004224:	f89a 3000 	ldrb.w	r3, [sl]
 8004228:	2b00      	cmp	r3, #0
 800422a:	f000 809f 	beq.w	800436c <_vfiprintf_r+0x1ec>
 800422e:	2300      	movs	r3, #0
 8004230:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8004234:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004238:	f10a 0a01 	add.w	sl, sl, #1
 800423c:	9304      	str	r3, [sp, #16]
 800423e:	9307      	str	r3, [sp, #28]
 8004240:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004244:	931a      	str	r3, [sp, #104]	@ 0x68
 8004246:	4654      	mov	r4, sl
 8004248:	2205      	movs	r2, #5
 800424a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800424e:	4853      	ldr	r0, [pc, #332]	@ (800439c <_vfiprintf_r+0x21c>)
 8004250:	f7fb ffc6 	bl	80001e0 <memchr>
 8004254:	9a04      	ldr	r2, [sp, #16]
 8004256:	b9d8      	cbnz	r0, 8004290 <_vfiprintf_r+0x110>
 8004258:	06d1      	lsls	r1, r2, #27
 800425a:	bf44      	itt	mi
 800425c:	2320      	movmi	r3, #32
 800425e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004262:	0713      	lsls	r3, r2, #28
 8004264:	bf44      	itt	mi
 8004266:	232b      	movmi	r3, #43	@ 0x2b
 8004268:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800426c:	f89a 3000 	ldrb.w	r3, [sl]
 8004270:	2b2a      	cmp	r3, #42	@ 0x2a
 8004272:	d015      	beq.n	80042a0 <_vfiprintf_r+0x120>
 8004274:	9a07      	ldr	r2, [sp, #28]
 8004276:	4654      	mov	r4, sl
 8004278:	2000      	movs	r0, #0
 800427a:	f04f 0c0a 	mov.w	ip, #10
 800427e:	4621      	mov	r1, r4
 8004280:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004284:	3b30      	subs	r3, #48	@ 0x30
 8004286:	2b09      	cmp	r3, #9
 8004288:	d94b      	bls.n	8004322 <_vfiprintf_r+0x1a2>
 800428a:	b1b0      	cbz	r0, 80042ba <_vfiprintf_r+0x13a>
 800428c:	9207      	str	r2, [sp, #28]
 800428e:	e014      	b.n	80042ba <_vfiprintf_r+0x13a>
 8004290:	eba0 0308 	sub.w	r3, r0, r8
 8004294:	fa09 f303 	lsl.w	r3, r9, r3
 8004298:	4313      	orrs	r3, r2
 800429a:	9304      	str	r3, [sp, #16]
 800429c:	46a2      	mov	sl, r4
 800429e:	e7d2      	b.n	8004246 <_vfiprintf_r+0xc6>
 80042a0:	9b03      	ldr	r3, [sp, #12]
 80042a2:	1d19      	adds	r1, r3, #4
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	9103      	str	r1, [sp, #12]
 80042a8:	2b00      	cmp	r3, #0
 80042aa:	bfbb      	ittet	lt
 80042ac:	425b      	neglt	r3, r3
 80042ae:	f042 0202 	orrlt.w	r2, r2, #2
 80042b2:	9307      	strge	r3, [sp, #28]
 80042b4:	9307      	strlt	r3, [sp, #28]
 80042b6:	bfb8      	it	lt
 80042b8:	9204      	strlt	r2, [sp, #16]
 80042ba:	7823      	ldrb	r3, [r4, #0]
 80042bc:	2b2e      	cmp	r3, #46	@ 0x2e
 80042be:	d10a      	bne.n	80042d6 <_vfiprintf_r+0x156>
 80042c0:	7863      	ldrb	r3, [r4, #1]
 80042c2:	2b2a      	cmp	r3, #42	@ 0x2a
 80042c4:	d132      	bne.n	800432c <_vfiprintf_r+0x1ac>
 80042c6:	9b03      	ldr	r3, [sp, #12]
 80042c8:	1d1a      	adds	r2, r3, #4
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	9203      	str	r2, [sp, #12]
 80042ce:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80042d2:	3402      	adds	r4, #2
 80042d4:	9305      	str	r3, [sp, #20]
 80042d6:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 80043a0 <_vfiprintf_r+0x220>
 80042da:	7821      	ldrb	r1, [r4, #0]
 80042dc:	2203      	movs	r2, #3
 80042de:	4650      	mov	r0, sl
 80042e0:	f7fb ff7e 	bl	80001e0 <memchr>
 80042e4:	b138      	cbz	r0, 80042f6 <_vfiprintf_r+0x176>
 80042e6:	9b04      	ldr	r3, [sp, #16]
 80042e8:	eba0 000a 	sub.w	r0, r0, sl
 80042ec:	2240      	movs	r2, #64	@ 0x40
 80042ee:	4082      	lsls	r2, r0
 80042f0:	4313      	orrs	r3, r2
 80042f2:	3401      	adds	r4, #1
 80042f4:	9304      	str	r3, [sp, #16]
 80042f6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80042fa:	482a      	ldr	r0, [pc, #168]	@ (80043a4 <_vfiprintf_r+0x224>)
 80042fc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004300:	2206      	movs	r2, #6
 8004302:	f7fb ff6d 	bl	80001e0 <memchr>
 8004306:	2800      	cmp	r0, #0
 8004308:	d03f      	beq.n	800438a <_vfiprintf_r+0x20a>
 800430a:	4b27      	ldr	r3, [pc, #156]	@ (80043a8 <_vfiprintf_r+0x228>)
 800430c:	bb1b      	cbnz	r3, 8004356 <_vfiprintf_r+0x1d6>
 800430e:	9b03      	ldr	r3, [sp, #12]
 8004310:	3307      	adds	r3, #7
 8004312:	f023 0307 	bic.w	r3, r3, #7
 8004316:	3308      	adds	r3, #8
 8004318:	9303      	str	r3, [sp, #12]
 800431a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800431c:	443b      	add	r3, r7
 800431e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004320:	e76a      	b.n	80041f8 <_vfiprintf_r+0x78>
 8004322:	fb0c 3202 	mla	r2, ip, r2, r3
 8004326:	460c      	mov	r4, r1
 8004328:	2001      	movs	r0, #1
 800432a:	e7a8      	b.n	800427e <_vfiprintf_r+0xfe>
 800432c:	2300      	movs	r3, #0
 800432e:	3401      	adds	r4, #1
 8004330:	9305      	str	r3, [sp, #20]
 8004332:	4619      	mov	r1, r3
 8004334:	f04f 0c0a 	mov.w	ip, #10
 8004338:	4620      	mov	r0, r4
 800433a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800433e:	3a30      	subs	r2, #48	@ 0x30
 8004340:	2a09      	cmp	r2, #9
 8004342:	d903      	bls.n	800434c <_vfiprintf_r+0x1cc>
 8004344:	2b00      	cmp	r3, #0
 8004346:	d0c6      	beq.n	80042d6 <_vfiprintf_r+0x156>
 8004348:	9105      	str	r1, [sp, #20]
 800434a:	e7c4      	b.n	80042d6 <_vfiprintf_r+0x156>
 800434c:	fb0c 2101 	mla	r1, ip, r1, r2
 8004350:	4604      	mov	r4, r0
 8004352:	2301      	movs	r3, #1
 8004354:	e7f0      	b.n	8004338 <_vfiprintf_r+0x1b8>
 8004356:	ab03      	add	r3, sp, #12
 8004358:	9300      	str	r3, [sp, #0]
 800435a:	462a      	mov	r2, r5
 800435c:	4b13      	ldr	r3, [pc, #76]	@ (80043ac <_vfiprintf_r+0x22c>)
 800435e:	a904      	add	r1, sp, #16
 8004360:	4630      	mov	r0, r6
 8004362:	f7fd fbdb 	bl	8001b1c <_printf_float>
 8004366:	4607      	mov	r7, r0
 8004368:	1c78      	adds	r0, r7, #1
 800436a:	d1d6      	bne.n	800431a <_vfiprintf_r+0x19a>
 800436c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800436e:	07d9      	lsls	r1, r3, #31
 8004370:	d405      	bmi.n	800437e <_vfiprintf_r+0x1fe>
 8004372:	89ab      	ldrh	r3, [r5, #12]
 8004374:	059a      	lsls	r2, r3, #22
 8004376:	d402      	bmi.n	800437e <_vfiprintf_r+0x1fe>
 8004378:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800437a:	f7fe f969 	bl	8002650 <__retarget_lock_release_recursive>
 800437e:	89ab      	ldrh	r3, [r5, #12]
 8004380:	065b      	lsls	r3, r3, #25
 8004382:	f53f af1f 	bmi.w	80041c4 <_vfiprintf_r+0x44>
 8004386:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004388:	e71e      	b.n	80041c8 <_vfiprintf_r+0x48>
 800438a:	ab03      	add	r3, sp, #12
 800438c:	9300      	str	r3, [sp, #0]
 800438e:	462a      	mov	r2, r5
 8004390:	4b06      	ldr	r3, [pc, #24]	@ (80043ac <_vfiprintf_r+0x22c>)
 8004392:	a904      	add	r1, sp, #16
 8004394:	4630      	mov	r0, r6
 8004396:	f7fd ff05 	bl	80021a4 <_printf_i>
 800439a:	e7e4      	b.n	8004366 <_vfiprintf_r+0x1e6>
 800439c:	080048ba 	.word	0x080048ba
 80043a0:	080048c0 	.word	0x080048c0
 80043a4:	080048c4 	.word	0x080048c4
 80043a8:	08001b1d 	.word	0x08001b1d
 80043ac:	0800415b 	.word	0x0800415b

080043b0 <__swbuf_r>:
 80043b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043b2:	460e      	mov	r6, r1
 80043b4:	4614      	mov	r4, r2
 80043b6:	4605      	mov	r5, r0
 80043b8:	b118      	cbz	r0, 80043c2 <__swbuf_r+0x12>
 80043ba:	6a03      	ldr	r3, [r0, #32]
 80043bc:	b90b      	cbnz	r3, 80043c2 <__swbuf_r+0x12>
 80043be:	f7fe f8c9 	bl	8002554 <__sinit>
 80043c2:	69a3      	ldr	r3, [r4, #24]
 80043c4:	60a3      	str	r3, [r4, #8]
 80043c6:	89a3      	ldrh	r3, [r4, #12]
 80043c8:	071a      	lsls	r2, r3, #28
 80043ca:	d501      	bpl.n	80043d0 <__swbuf_r+0x20>
 80043cc:	6923      	ldr	r3, [r4, #16]
 80043ce:	b943      	cbnz	r3, 80043e2 <__swbuf_r+0x32>
 80043d0:	4621      	mov	r1, r4
 80043d2:	4628      	mov	r0, r5
 80043d4:	f000 f82a 	bl	800442c <__swsetup_r>
 80043d8:	b118      	cbz	r0, 80043e2 <__swbuf_r+0x32>
 80043da:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80043de:	4638      	mov	r0, r7
 80043e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80043e2:	6823      	ldr	r3, [r4, #0]
 80043e4:	6922      	ldr	r2, [r4, #16]
 80043e6:	1a98      	subs	r0, r3, r2
 80043e8:	6963      	ldr	r3, [r4, #20]
 80043ea:	b2f6      	uxtb	r6, r6
 80043ec:	4283      	cmp	r3, r0
 80043ee:	4637      	mov	r7, r6
 80043f0:	dc05      	bgt.n	80043fe <__swbuf_r+0x4e>
 80043f2:	4621      	mov	r1, r4
 80043f4:	4628      	mov	r0, r5
 80043f6:	f7ff f9a1 	bl	800373c <_fflush_r>
 80043fa:	2800      	cmp	r0, #0
 80043fc:	d1ed      	bne.n	80043da <__swbuf_r+0x2a>
 80043fe:	68a3      	ldr	r3, [r4, #8]
 8004400:	3b01      	subs	r3, #1
 8004402:	60a3      	str	r3, [r4, #8]
 8004404:	6823      	ldr	r3, [r4, #0]
 8004406:	1c5a      	adds	r2, r3, #1
 8004408:	6022      	str	r2, [r4, #0]
 800440a:	701e      	strb	r6, [r3, #0]
 800440c:	6962      	ldr	r2, [r4, #20]
 800440e:	1c43      	adds	r3, r0, #1
 8004410:	429a      	cmp	r2, r3
 8004412:	d004      	beq.n	800441e <__swbuf_r+0x6e>
 8004414:	89a3      	ldrh	r3, [r4, #12]
 8004416:	07db      	lsls	r3, r3, #31
 8004418:	d5e1      	bpl.n	80043de <__swbuf_r+0x2e>
 800441a:	2e0a      	cmp	r6, #10
 800441c:	d1df      	bne.n	80043de <__swbuf_r+0x2e>
 800441e:	4621      	mov	r1, r4
 8004420:	4628      	mov	r0, r5
 8004422:	f7ff f98b 	bl	800373c <_fflush_r>
 8004426:	2800      	cmp	r0, #0
 8004428:	d0d9      	beq.n	80043de <__swbuf_r+0x2e>
 800442a:	e7d6      	b.n	80043da <__swbuf_r+0x2a>

0800442c <__swsetup_r>:
 800442c:	b538      	push	{r3, r4, r5, lr}
 800442e:	4b29      	ldr	r3, [pc, #164]	@ (80044d4 <__swsetup_r+0xa8>)
 8004430:	4605      	mov	r5, r0
 8004432:	6818      	ldr	r0, [r3, #0]
 8004434:	460c      	mov	r4, r1
 8004436:	b118      	cbz	r0, 8004440 <__swsetup_r+0x14>
 8004438:	6a03      	ldr	r3, [r0, #32]
 800443a:	b90b      	cbnz	r3, 8004440 <__swsetup_r+0x14>
 800443c:	f7fe f88a 	bl	8002554 <__sinit>
 8004440:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004444:	0719      	lsls	r1, r3, #28
 8004446:	d422      	bmi.n	800448e <__swsetup_r+0x62>
 8004448:	06da      	lsls	r2, r3, #27
 800444a:	d407      	bmi.n	800445c <__swsetup_r+0x30>
 800444c:	2209      	movs	r2, #9
 800444e:	602a      	str	r2, [r5, #0]
 8004450:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004454:	81a3      	strh	r3, [r4, #12]
 8004456:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800445a:	e033      	b.n	80044c4 <__swsetup_r+0x98>
 800445c:	0758      	lsls	r0, r3, #29
 800445e:	d512      	bpl.n	8004486 <__swsetup_r+0x5a>
 8004460:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004462:	b141      	cbz	r1, 8004476 <__swsetup_r+0x4a>
 8004464:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004468:	4299      	cmp	r1, r3
 800446a:	d002      	beq.n	8004472 <__swsetup_r+0x46>
 800446c:	4628      	mov	r0, r5
 800446e:	f7fe ff43 	bl	80032f8 <_free_r>
 8004472:	2300      	movs	r3, #0
 8004474:	6363      	str	r3, [r4, #52]	@ 0x34
 8004476:	89a3      	ldrh	r3, [r4, #12]
 8004478:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800447c:	81a3      	strh	r3, [r4, #12]
 800447e:	2300      	movs	r3, #0
 8004480:	6063      	str	r3, [r4, #4]
 8004482:	6923      	ldr	r3, [r4, #16]
 8004484:	6023      	str	r3, [r4, #0]
 8004486:	89a3      	ldrh	r3, [r4, #12]
 8004488:	f043 0308 	orr.w	r3, r3, #8
 800448c:	81a3      	strh	r3, [r4, #12]
 800448e:	6923      	ldr	r3, [r4, #16]
 8004490:	b94b      	cbnz	r3, 80044a6 <__swsetup_r+0x7a>
 8004492:	89a3      	ldrh	r3, [r4, #12]
 8004494:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8004498:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800449c:	d003      	beq.n	80044a6 <__swsetup_r+0x7a>
 800449e:	4621      	mov	r1, r4
 80044a0:	4628      	mov	r0, r5
 80044a2:	f000 f83f 	bl	8004524 <__smakebuf_r>
 80044a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80044aa:	f013 0201 	ands.w	r2, r3, #1
 80044ae:	d00a      	beq.n	80044c6 <__swsetup_r+0x9a>
 80044b0:	2200      	movs	r2, #0
 80044b2:	60a2      	str	r2, [r4, #8]
 80044b4:	6962      	ldr	r2, [r4, #20]
 80044b6:	4252      	negs	r2, r2
 80044b8:	61a2      	str	r2, [r4, #24]
 80044ba:	6922      	ldr	r2, [r4, #16]
 80044bc:	b942      	cbnz	r2, 80044d0 <__swsetup_r+0xa4>
 80044be:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80044c2:	d1c5      	bne.n	8004450 <__swsetup_r+0x24>
 80044c4:	bd38      	pop	{r3, r4, r5, pc}
 80044c6:	0799      	lsls	r1, r3, #30
 80044c8:	bf58      	it	pl
 80044ca:	6962      	ldrpl	r2, [r4, #20]
 80044cc:	60a2      	str	r2, [r4, #8]
 80044ce:	e7f4      	b.n	80044ba <__swsetup_r+0x8e>
 80044d0:	2000      	movs	r0, #0
 80044d2:	e7f7      	b.n	80044c4 <__swsetup_r+0x98>
 80044d4:	20000038 	.word	0x20000038

080044d8 <__swhatbuf_r>:
 80044d8:	b570      	push	{r4, r5, r6, lr}
 80044da:	460c      	mov	r4, r1
 80044dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80044e0:	2900      	cmp	r1, #0
 80044e2:	b096      	sub	sp, #88	@ 0x58
 80044e4:	4615      	mov	r5, r2
 80044e6:	461e      	mov	r6, r3
 80044e8:	da0d      	bge.n	8004506 <__swhatbuf_r+0x2e>
 80044ea:	89a3      	ldrh	r3, [r4, #12]
 80044ec:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80044f0:	f04f 0100 	mov.w	r1, #0
 80044f4:	bf14      	ite	ne
 80044f6:	2340      	movne	r3, #64	@ 0x40
 80044f8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80044fc:	2000      	movs	r0, #0
 80044fe:	6031      	str	r1, [r6, #0]
 8004500:	602b      	str	r3, [r5, #0]
 8004502:	b016      	add	sp, #88	@ 0x58
 8004504:	bd70      	pop	{r4, r5, r6, pc}
 8004506:	466a      	mov	r2, sp
 8004508:	f000 f848 	bl	800459c <_fstat_r>
 800450c:	2800      	cmp	r0, #0
 800450e:	dbec      	blt.n	80044ea <__swhatbuf_r+0x12>
 8004510:	9901      	ldr	r1, [sp, #4]
 8004512:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8004516:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800451a:	4259      	negs	r1, r3
 800451c:	4159      	adcs	r1, r3
 800451e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8004522:	e7eb      	b.n	80044fc <__swhatbuf_r+0x24>

08004524 <__smakebuf_r>:
 8004524:	898b      	ldrh	r3, [r1, #12]
 8004526:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004528:	079d      	lsls	r5, r3, #30
 800452a:	4606      	mov	r6, r0
 800452c:	460c      	mov	r4, r1
 800452e:	d507      	bpl.n	8004540 <__smakebuf_r+0x1c>
 8004530:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8004534:	6023      	str	r3, [r4, #0]
 8004536:	6123      	str	r3, [r4, #16]
 8004538:	2301      	movs	r3, #1
 800453a:	6163      	str	r3, [r4, #20]
 800453c:	b003      	add	sp, #12
 800453e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004540:	ab01      	add	r3, sp, #4
 8004542:	466a      	mov	r2, sp
 8004544:	f7ff ffc8 	bl	80044d8 <__swhatbuf_r>
 8004548:	9f00      	ldr	r7, [sp, #0]
 800454a:	4605      	mov	r5, r0
 800454c:	4639      	mov	r1, r7
 800454e:	4630      	mov	r0, r6
 8004550:	f7fd fd3a 	bl	8001fc8 <_malloc_r>
 8004554:	b948      	cbnz	r0, 800456a <__smakebuf_r+0x46>
 8004556:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800455a:	059a      	lsls	r2, r3, #22
 800455c:	d4ee      	bmi.n	800453c <__smakebuf_r+0x18>
 800455e:	f023 0303 	bic.w	r3, r3, #3
 8004562:	f043 0302 	orr.w	r3, r3, #2
 8004566:	81a3      	strh	r3, [r4, #12]
 8004568:	e7e2      	b.n	8004530 <__smakebuf_r+0xc>
 800456a:	89a3      	ldrh	r3, [r4, #12]
 800456c:	6020      	str	r0, [r4, #0]
 800456e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004572:	81a3      	strh	r3, [r4, #12]
 8004574:	9b01      	ldr	r3, [sp, #4]
 8004576:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800457a:	b15b      	cbz	r3, 8004594 <__smakebuf_r+0x70>
 800457c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004580:	4630      	mov	r0, r6
 8004582:	f000 f81d 	bl	80045c0 <_isatty_r>
 8004586:	b128      	cbz	r0, 8004594 <__smakebuf_r+0x70>
 8004588:	89a3      	ldrh	r3, [r4, #12]
 800458a:	f023 0303 	bic.w	r3, r3, #3
 800458e:	f043 0301 	orr.w	r3, r3, #1
 8004592:	81a3      	strh	r3, [r4, #12]
 8004594:	89a3      	ldrh	r3, [r4, #12]
 8004596:	431d      	orrs	r5, r3
 8004598:	81a5      	strh	r5, [r4, #12]
 800459a:	e7cf      	b.n	800453c <__smakebuf_r+0x18>

0800459c <_fstat_r>:
 800459c:	b538      	push	{r3, r4, r5, lr}
 800459e:	4d07      	ldr	r5, [pc, #28]	@ (80045bc <_fstat_r+0x20>)
 80045a0:	2300      	movs	r3, #0
 80045a2:	4604      	mov	r4, r0
 80045a4:	4608      	mov	r0, r1
 80045a6:	4611      	mov	r1, r2
 80045a8:	602b      	str	r3, [r5, #0]
 80045aa:	f7fd f993 	bl	80018d4 <_fstat>
 80045ae:	1c43      	adds	r3, r0, #1
 80045b0:	d102      	bne.n	80045b8 <_fstat_r+0x1c>
 80045b2:	682b      	ldr	r3, [r5, #0]
 80045b4:	b103      	cbz	r3, 80045b8 <_fstat_r+0x1c>
 80045b6:	6023      	str	r3, [r4, #0]
 80045b8:	bd38      	pop	{r3, r4, r5, pc}
 80045ba:	bf00      	nop
 80045bc:	200003c8 	.word	0x200003c8

080045c0 <_isatty_r>:
 80045c0:	b538      	push	{r3, r4, r5, lr}
 80045c2:	4d06      	ldr	r5, [pc, #24]	@ (80045dc <_isatty_r+0x1c>)
 80045c4:	2300      	movs	r3, #0
 80045c6:	4604      	mov	r4, r0
 80045c8:	4608      	mov	r0, r1
 80045ca:	602b      	str	r3, [r5, #0]
 80045cc:	f7fd f991 	bl	80018f2 <_isatty>
 80045d0:	1c43      	adds	r3, r0, #1
 80045d2:	d102      	bne.n	80045da <_isatty_r+0x1a>
 80045d4:	682b      	ldr	r3, [r5, #0]
 80045d6:	b103      	cbz	r3, 80045da <_isatty_r+0x1a>
 80045d8:	6023      	str	r3, [r4, #0]
 80045da:	bd38      	pop	{r3, r4, r5, pc}
 80045dc:	200003c8 	.word	0x200003c8

080045e0 <_raise_r>:
 80045e0:	291f      	cmp	r1, #31
 80045e2:	b538      	push	{r3, r4, r5, lr}
 80045e4:	4605      	mov	r5, r0
 80045e6:	460c      	mov	r4, r1
 80045e8:	d904      	bls.n	80045f4 <_raise_r+0x14>
 80045ea:	2316      	movs	r3, #22
 80045ec:	6003      	str	r3, [r0, #0]
 80045ee:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80045f2:	bd38      	pop	{r3, r4, r5, pc}
 80045f4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80045f6:	b112      	cbz	r2, 80045fe <_raise_r+0x1e>
 80045f8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80045fc:	b94b      	cbnz	r3, 8004612 <_raise_r+0x32>
 80045fe:	4628      	mov	r0, r5
 8004600:	f000 f830 	bl	8004664 <_getpid_r>
 8004604:	4622      	mov	r2, r4
 8004606:	4601      	mov	r1, r0
 8004608:	4628      	mov	r0, r5
 800460a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800460e:	f000 b817 	b.w	8004640 <_kill_r>
 8004612:	2b01      	cmp	r3, #1
 8004614:	d00a      	beq.n	800462c <_raise_r+0x4c>
 8004616:	1c59      	adds	r1, r3, #1
 8004618:	d103      	bne.n	8004622 <_raise_r+0x42>
 800461a:	2316      	movs	r3, #22
 800461c:	6003      	str	r3, [r0, #0]
 800461e:	2001      	movs	r0, #1
 8004620:	e7e7      	b.n	80045f2 <_raise_r+0x12>
 8004622:	2100      	movs	r1, #0
 8004624:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004628:	4620      	mov	r0, r4
 800462a:	4798      	blx	r3
 800462c:	2000      	movs	r0, #0
 800462e:	e7e0      	b.n	80045f2 <_raise_r+0x12>

08004630 <raise>:
 8004630:	4b02      	ldr	r3, [pc, #8]	@ (800463c <raise+0xc>)
 8004632:	4601      	mov	r1, r0
 8004634:	6818      	ldr	r0, [r3, #0]
 8004636:	f7ff bfd3 	b.w	80045e0 <_raise_r>
 800463a:	bf00      	nop
 800463c:	20000038 	.word	0x20000038

08004640 <_kill_r>:
 8004640:	b538      	push	{r3, r4, r5, lr}
 8004642:	4d07      	ldr	r5, [pc, #28]	@ (8004660 <_kill_r+0x20>)
 8004644:	2300      	movs	r3, #0
 8004646:	4604      	mov	r4, r0
 8004648:	4608      	mov	r0, r1
 800464a:	4611      	mov	r1, r2
 800464c:	602b      	str	r3, [r5, #0]
 800464e:	f7fd f8e2 	bl	8001816 <_kill>
 8004652:	1c43      	adds	r3, r0, #1
 8004654:	d102      	bne.n	800465c <_kill_r+0x1c>
 8004656:	682b      	ldr	r3, [r5, #0]
 8004658:	b103      	cbz	r3, 800465c <_kill_r+0x1c>
 800465a:	6023      	str	r3, [r4, #0]
 800465c:	bd38      	pop	{r3, r4, r5, pc}
 800465e:	bf00      	nop
 8004660:	200003c8 	.word	0x200003c8

08004664 <_getpid_r>:
 8004664:	f7fd b8d0 	b.w	8001808 <_getpid>

08004668 <_init>:
 8004668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800466a:	bf00      	nop
 800466c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800466e:	bc08      	pop	{r3}
 8004670:	469e      	mov	lr, r3
 8004672:	4770      	bx	lr

08004674 <_fini>:
 8004674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004676:	bf00      	nop
 8004678:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800467a:	bc08      	pop	{r3}
 800467c:	469e      	mov	lr, r3
 800467e:	4770      	bx	lr
