
week6-modular-design.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004368  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004d8  08004508  08004508  00005508  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080049e0  080049e0  000061f0  2**0
                  CONTENTS
  4 .ARM          00000008  080049e0  080049e0  000059e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080049e8  080049e8  000061f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080049e8  080049e8  000059e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080049ec  080049ec  000059ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f0  20000000  080049f0  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000061f0  2**0
                  CONTENTS
 10 .bss          00000170  200001f0  200001f0  000061f0  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000360  20000360  000061f0  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000061f0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001d49  00000000  00000000  0000621a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000924  00000000  00000000  00007f63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001d0  00000000  00000000  00008888  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000013e  00000000  00000000  00008a58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00016ec2  00000000  00000000  00008b96  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000250b  00000000  00000000  0001fa58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0007841c  00000000  00000000  00021f63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0009a37f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000017a8  00000000  00000000  0009a3c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006f  00000000  00000000  0009bb6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001f0 	.word	0x200001f0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080044f0 	.word	0x080044f0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001f4 	.word	0x200001f4
 80001dc:	080044f0 	.word	0x080044f0

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_fmul>:
 8000290:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000294:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000298:	bf1e      	ittt	ne
 800029a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800029e:	ea92 0f0c 	teqne	r2, ip
 80002a2:	ea93 0f0c 	teqne	r3, ip
 80002a6:	d06f      	beq.n	8000388 <__aeabi_fmul+0xf8>
 80002a8:	441a      	add	r2, r3
 80002aa:	ea80 0c01 	eor.w	ip, r0, r1
 80002ae:	0240      	lsls	r0, r0, #9
 80002b0:	bf18      	it	ne
 80002b2:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80002b6:	d01e      	beq.n	80002f6 <__aeabi_fmul+0x66>
 80002b8:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 80002bc:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80002c0:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80002c4:	fba0 3101 	umull	r3, r1, r0, r1
 80002c8:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 80002cc:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 80002d0:	bf3e      	ittt	cc
 80002d2:	0049      	lslcc	r1, r1, #1
 80002d4:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80002d8:	005b      	lslcc	r3, r3, #1
 80002da:	ea40 0001 	orr.w	r0, r0, r1
 80002de:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 80002e2:	2afd      	cmp	r2, #253	@ 0xfd
 80002e4:	d81d      	bhi.n	8000322 <__aeabi_fmul+0x92>
 80002e6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80002ea:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80002ee:	bf08      	it	eq
 80002f0:	f020 0001 	biceq.w	r0, r0, #1
 80002f4:	4770      	bx	lr
 80002f6:	f090 0f00 	teq	r0, #0
 80002fa:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 80002fe:	bf08      	it	eq
 8000300:	0249      	lsleq	r1, r1, #9
 8000302:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000306:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 800030a:	3a7f      	subs	r2, #127	@ 0x7f
 800030c:	bfc2      	ittt	gt
 800030e:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000312:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000316:	4770      	bxgt	lr
 8000318:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 800031c:	f04f 0300 	mov.w	r3, #0
 8000320:	3a01      	subs	r2, #1
 8000322:	dc5d      	bgt.n	80003e0 <__aeabi_fmul+0x150>
 8000324:	f112 0f19 	cmn.w	r2, #25
 8000328:	bfdc      	itt	le
 800032a:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 800032e:	4770      	bxle	lr
 8000330:	f1c2 0200 	rsb	r2, r2, #0
 8000334:	0041      	lsls	r1, r0, #1
 8000336:	fa21 f102 	lsr.w	r1, r1, r2
 800033a:	f1c2 0220 	rsb	r2, r2, #32
 800033e:	fa00 fc02 	lsl.w	ip, r0, r2
 8000342:	ea5f 0031 	movs.w	r0, r1, rrx
 8000346:	f140 0000 	adc.w	r0, r0, #0
 800034a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800034e:	bf08      	it	eq
 8000350:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000354:	4770      	bx	lr
 8000356:	f092 0f00 	teq	r2, #0
 800035a:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 800035e:	bf02      	ittt	eq
 8000360:	0040      	lsleq	r0, r0, #1
 8000362:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000366:	3a01      	subeq	r2, #1
 8000368:	d0f9      	beq.n	800035e <__aeabi_fmul+0xce>
 800036a:	ea40 000c 	orr.w	r0, r0, ip
 800036e:	f093 0f00 	teq	r3, #0
 8000372:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000376:	bf02      	ittt	eq
 8000378:	0049      	lsleq	r1, r1, #1
 800037a:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 800037e:	3b01      	subeq	r3, #1
 8000380:	d0f9      	beq.n	8000376 <__aeabi_fmul+0xe6>
 8000382:	ea41 010c 	orr.w	r1, r1, ip
 8000386:	e78f      	b.n	80002a8 <__aeabi_fmul+0x18>
 8000388:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800038c:	ea92 0f0c 	teq	r2, ip
 8000390:	bf18      	it	ne
 8000392:	ea93 0f0c 	teqne	r3, ip
 8000396:	d00a      	beq.n	80003ae <__aeabi_fmul+0x11e>
 8000398:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 800039c:	bf18      	it	ne
 800039e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 80003a2:	d1d8      	bne.n	8000356 <__aeabi_fmul+0xc6>
 80003a4:	ea80 0001 	eor.w	r0, r0, r1
 80003a8:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80003ac:	4770      	bx	lr
 80003ae:	f090 0f00 	teq	r0, #0
 80003b2:	bf17      	itett	ne
 80003b4:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 80003b8:	4608      	moveq	r0, r1
 80003ba:	f091 0f00 	teqne	r1, #0
 80003be:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 80003c2:	d014      	beq.n	80003ee <__aeabi_fmul+0x15e>
 80003c4:	ea92 0f0c 	teq	r2, ip
 80003c8:	d101      	bne.n	80003ce <__aeabi_fmul+0x13e>
 80003ca:	0242      	lsls	r2, r0, #9
 80003cc:	d10f      	bne.n	80003ee <__aeabi_fmul+0x15e>
 80003ce:	ea93 0f0c 	teq	r3, ip
 80003d2:	d103      	bne.n	80003dc <__aeabi_fmul+0x14c>
 80003d4:	024b      	lsls	r3, r1, #9
 80003d6:	bf18      	it	ne
 80003d8:	4608      	movne	r0, r1
 80003da:	d108      	bne.n	80003ee <__aeabi_fmul+0x15e>
 80003dc:	ea80 0001 	eor.w	r0, r0, r1
 80003e0:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80003e4:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80003e8:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80003ec:	4770      	bx	lr
 80003ee:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80003f2:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 80003f6:	4770      	bx	lr

080003f8 <__aeabi_drsub>:
 80003f8:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80003fc:	e002      	b.n	8000404 <__adddf3>
 80003fe:	bf00      	nop

08000400 <__aeabi_dsub>:
 8000400:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000404 <__adddf3>:
 8000404:	b530      	push	{r4, r5, lr}
 8000406:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800040a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800040e:	ea94 0f05 	teq	r4, r5
 8000412:	bf08      	it	eq
 8000414:	ea90 0f02 	teqeq	r0, r2
 8000418:	bf1f      	itttt	ne
 800041a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800041e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000422:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000426:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800042a:	f000 80e2 	beq.w	80005f2 <__adddf3+0x1ee>
 800042e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000432:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000436:	bfb8      	it	lt
 8000438:	426d      	neglt	r5, r5
 800043a:	dd0c      	ble.n	8000456 <__adddf3+0x52>
 800043c:	442c      	add	r4, r5
 800043e:	ea80 0202 	eor.w	r2, r0, r2
 8000442:	ea81 0303 	eor.w	r3, r1, r3
 8000446:	ea82 0000 	eor.w	r0, r2, r0
 800044a:	ea83 0101 	eor.w	r1, r3, r1
 800044e:	ea80 0202 	eor.w	r2, r0, r2
 8000452:	ea81 0303 	eor.w	r3, r1, r3
 8000456:	2d36      	cmp	r5, #54	@ 0x36
 8000458:	bf88      	it	hi
 800045a:	bd30      	pophi	{r4, r5, pc}
 800045c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000460:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000464:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000468:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800046c:	d002      	beq.n	8000474 <__adddf3+0x70>
 800046e:	4240      	negs	r0, r0
 8000470:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000474:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000478:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800047c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000480:	d002      	beq.n	8000488 <__adddf3+0x84>
 8000482:	4252      	negs	r2, r2
 8000484:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000488:	ea94 0f05 	teq	r4, r5
 800048c:	f000 80a7 	beq.w	80005de <__adddf3+0x1da>
 8000490:	f1a4 0401 	sub.w	r4, r4, #1
 8000494:	f1d5 0e20 	rsbs	lr, r5, #32
 8000498:	db0d      	blt.n	80004b6 <__adddf3+0xb2>
 800049a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800049e:	fa22 f205 	lsr.w	r2, r2, r5
 80004a2:	1880      	adds	r0, r0, r2
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	fa03 f20e 	lsl.w	r2, r3, lr
 80004ac:	1880      	adds	r0, r0, r2
 80004ae:	fa43 f305 	asr.w	r3, r3, r5
 80004b2:	4159      	adcs	r1, r3
 80004b4:	e00e      	b.n	80004d4 <__adddf3+0xd0>
 80004b6:	f1a5 0520 	sub.w	r5, r5, #32
 80004ba:	f10e 0e20 	add.w	lr, lr, #32
 80004be:	2a01      	cmp	r2, #1
 80004c0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80004c4:	bf28      	it	cs
 80004c6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80004ca:	fa43 f305 	asr.w	r3, r3, r5
 80004ce:	18c0      	adds	r0, r0, r3
 80004d0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80004d4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004d8:	d507      	bpl.n	80004ea <__adddf3+0xe6>
 80004da:	f04f 0e00 	mov.w	lr, #0
 80004de:	f1dc 0c00 	rsbs	ip, ip, #0
 80004e2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80004e6:	eb6e 0101 	sbc.w	r1, lr, r1
 80004ea:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80004ee:	d31b      	bcc.n	8000528 <__adddf3+0x124>
 80004f0:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80004f4:	d30c      	bcc.n	8000510 <__adddf3+0x10c>
 80004f6:	0849      	lsrs	r1, r1, #1
 80004f8:	ea5f 0030 	movs.w	r0, r0, rrx
 80004fc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000500:	f104 0401 	add.w	r4, r4, #1
 8000504:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000508:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 800050c:	f080 809a 	bcs.w	8000644 <__adddf3+0x240>
 8000510:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000514:	bf08      	it	eq
 8000516:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800051a:	f150 0000 	adcs.w	r0, r0, #0
 800051e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000522:	ea41 0105 	orr.w	r1, r1, r5
 8000526:	bd30      	pop	{r4, r5, pc}
 8000528:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800052c:	4140      	adcs	r0, r0
 800052e:	eb41 0101 	adc.w	r1, r1, r1
 8000532:	3c01      	subs	r4, #1
 8000534:	bf28      	it	cs
 8000536:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800053a:	d2e9      	bcs.n	8000510 <__adddf3+0x10c>
 800053c:	f091 0f00 	teq	r1, #0
 8000540:	bf04      	itt	eq
 8000542:	4601      	moveq	r1, r0
 8000544:	2000      	moveq	r0, #0
 8000546:	fab1 f381 	clz	r3, r1
 800054a:	bf08      	it	eq
 800054c:	3320      	addeq	r3, #32
 800054e:	f1a3 030b 	sub.w	r3, r3, #11
 8000552:	f1b3 0220 	subs.w	r2, r3, #32
 8000556:	da0c      	bge.n	8000572 <__adddf3+0x16e>
 8000558:	320c      	adds	r2, #12
 800055a:	dd08      	ble.n	800056e <__adddf3+0x16a>
 800055c:	f102 0c14 	add.w	ip, r2, #20
 8000560:	f1c2 020c 	rsb	r2, r2, #12
 8000564:	fa01 f00c 	lsl.w	r0, r1, ip
 8000568:	fa21 f102 	lsr.w	r1, r1, r2
 800056c:	e00c      	b.n	8000588 <__adddf3+0x184>
 800056e:	f102 0214 	add.w	r2, r2, #20
 8000572:	bfd8      	it	le
 8000574:	f1c2 0c20 	rsble	ip, r2, #32
 8000578:	fa01 f102 	lsl.w	r1, r1, r2
 800057c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000580:	bfdc      	itt	le
 8000582:	ea41 010c 	orrle.w	r1, r1, ip
 8000586:	4090      	lslle	r0, r2
 8000588:	1ae4      	subs	r4, r4, r3
 800058a:	bfa2      	ittt	ge
 800058c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000590:	4329      	orrge	r1, r5
 8000592:	bd30      	popge	{r4, r5, pc}
 8000594:	ea6f 0404 	mvn.w	r4, r4
 8000598:	3c1f      	subs	r4, #31
 800059a:	da1c      	bge.n	80005d6 <__adddf3+0x1d2>
 800059c:	340c      	adds	r4, #12
 800059e:	dc0e      	bgt.n	80005be <__adddf3+0x1ba>
 80005a0:	f104 0414 	add.w	r4, r4, #20
 80005a4:	f1c4 0220 	rsb	r2, r4, #32
 80005a8:	fa20 f004 	lsr.w	r0, r0, r4
 80005ac:	fa01 f302 	lsl.w	r3, r1, r2
 80005b0:	ea40 0003 	orr.w	r0, r0, r3
 80005b4:	fa21 f304 	lsr.w	r3, r1, r4
 80005b8:	ea45 0103 	orr.w	r1, r5, r3
 80005bc:	bd30      	pop	{r4, r5, pc}
 80005be:	f1c4 040c 	rsb	r4, r4, #12
 80005c2:	f1c4 0220 	rsb	r2, r4, #32
 80005c6:	fa20 f002 	lsr.w	r0, r0, r2
 80005ca:	fa01 f304 	lsl.w	r3, r1, r4
 80005ce:	ea40 0003 	orr.w	r0, r0, r3
 80005d2:	4629      	mov	r1, r5
 80005d4:	bd30      	pop	{r4, r5, pc}
 80005d6:	fa21 f004 	lsr.w	r0, r1, r4
 80005da:	4629      	mov	r1, r5
 80005dc:	bd30      	pop	{r4, r5, pc}
 80005de:	f094 0f00 	teq	r4, #0
 80005e2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80005e6:	bf06      	itte	eq
 80005e8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80005ec:	3401      	addeq	r4, #1
 80005ee:	3d01      	subne	r5, #1
 80005f0:	e74e      	b.n	8000490 <__adddf3+0x8c>
 80005f2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005f6:	bf18      	it	ne
 80005f8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005fc:	d029      	beq.n	8000652 <__adddf3+0x24e>
 80005fe:	ea94 0f05 	teq	r4, r5
 8000602:	bf08      	it	eq
 8000604:	ea90 0f02 	teqeq	r0, r2
 8000608:	d005      	beq.n	8000616 <__adddf3+0x212>
 800060a:	ea54 0c00 	orrs.w	ip, r4, r0
 800060e:	bf04      	itt	eq
 8000610:	4619      	moveq	r1, r3
 8000612:	4610      	moveq	r0, r2
 8000614:	bd30      	pop	{r4, r5, pc}
 8000616:	ea91 0f03 	teq	r1, r3
 800061a:	bf1e      	ittt	ne
 800061c:	2100      	movne	r1, #0
 800061e:	2000      	movne	r0, #0
 8000620:	bd30      	popne	{r4, r5, pc}
 8000622:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000626:	d105      	bne.n	8000634 <__adddf3+0x230>
 8000628:	0040      	lsls	r0, r0, #1
 800062a:	4149      	adcs	r1, r1
 800062c:	bf28      	it	cs
 800062e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000632:	bd30      	pop	{r4, r5, pc}
 8000634:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000638:	bf3c      	itt	cc
 800063a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800063e:	bd30      	popcc	{r4, r5, pc}
 8000640:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000644:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000648:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800064c:	f04f 0000 	mov.w	r0, #0
 8000650:	bd30      	pop	{r4, r5, pc}
 8000652:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000656:	bf1a      	itte	ne
 8000658:	4619      	movne	r1, r3
 800065a:	4610      	movne	r0, r2
 800065c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000660:	bf1c      	itt	ne
 8000662:	460b      	movne	r3, r1
 8000664:	4602      	movne	r2, r0
 8000666:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800066a:	bf06      	itte	eq
 800066c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000670:	ea91 0f03 	teqeq	r1, r3
 8000674:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000678:	bd30      	pop	{r4, r5, pc}
 800067a:	bf00      	nop

0800067c <__aeabi_ui2d>:
 800067c:	f090 0f00 	teq	r0, #0
 8000680:	bf04      	itt	eq
 8000682:	2100      	moveq	r1, #0
 8000684:	4770      	bxeq	lr
 8000686:	b530      	push	{r4, r5, lr}
 8000688:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800068c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000690:	f04f 0500 	mov.w	r5, #0
 8000694:	f04f 0100 	mov.w	r1, #0
 8000698:	e750      	b.n	800053c <__adddf3+0x138>
 800069a:	bf00      	nop

0800069c <__aeabi_i2d>:
 800069c:	f090 0f00 	teq	r0, #0
 80006a0:	bf04      	itt	eq
 80006a2:	2100      	moveq	r1, #0
 80006a4:	4770      	bxeq	lr
 80006a6:	b530      	push	{r4, r5, lr}
 80006a8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80006ac:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80006b0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80006b4:	bf48      	it	mi
 80006b6:	4240      	negmi	r0, r0
 80006b8:	f04f 0100 	mov.w	r1, #0
 80006bc:	e73e      	b.n	800053c <__adddf3+0x138>
 80006be:	bf00      	nop

080006c0 <__aeabi_f2d>:
 80006c0:	0042      	lsls	r2, r0, #1
 80006c2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80006c6:	ea4f 0131 	mov.w	r1, r1, rrx
 80006ca:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80006ce:	bf1f      	itttt	ne
 80006d0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80006d4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80006d8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80006dc:	4770      	bxne	lr
 80006de:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80006e2:	bf08      	it	eq
 80006e4:	4770      	bxeq	lr
 80006e6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80006ea:	bf04      	itt	eq
 80006ec:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80006f0:	4770      	bxeq	lr
 80006f2:	b530      	push	{r4, r5, lr}
 80006f4:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80006f8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80006fc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000700:	e71c      	b.n	800053c <__adddf3+0x138>
 8000702:	bf00      	nop

08000704 <__aeabi_ul2d>:
 8000704:	ea50 0201 	orrs.w	r2, r0, r1
 8000708:	bf08      	it	eq
 800070a:	4770      	bxeq	lr
 800070c:	b530      	push	{r4, r5, lr}
 800070e:	f04f 0500 	mov.w	r5, #0
 8000712:	e00a      	b.n	800072a <__aeabi_l2d+0x16>

08000714 <__aeabi_l2d>:
 8000714:	ea50 0201 	orrs.w	r2, r0, r1
 8000718:	bf08      	it	eq
 800071a:	4770      	bxeq	lr
 800071c:	b530      	push	{r4, r5, lr}
 800071e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000722:	d502      	bpl.n	800072a <__aeabi_l2d+0x16>
 8000724:	4240      	negs	r0, r0
 8000726:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800072a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800072e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000732:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000736:	f43f aed8 	beq.w	80004ea <__adddf3+0xe6>
 800073a:	f04f 0203 	mov.w	r2, #3
 800073e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000742:	bf18      	it	ne
 8000744:	3203      	addne	r2, #3
 8000746:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800074a:	bf18      	it	ne
 800074c:	3203      	addne	r2, #3
 800074e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000752:	f1c2 0320 	rsb	r3, r2, #32
 8000756:	fa00 fc03 	lsl.w	ip, r0, r3
 800075a:	fa20 f002 	lsr.w	r0, r0, r2
 800075e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000762:	ea40 000e 	orr.w	r0, r0, lr
 8000766:	fa21 f102 	lsr.w	r1, r1, r2
 800076a:	4414      	add	r4, r2
 800076c:	e6bd      	b.n	80004ea <__adddf3+0xe6>
 800076e:	bf00      	nop

08000770 <__aeabi_dmul>:
 8000770:	b570      	push	{r4, r5, r6, lr}
 8000772:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000776:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800077a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800077e:	bf1d      	ittte	ne
 8000780:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000784:	ea94 0f0c 	teqne	r4, ip
 8000788:	ea95 0f0c 	teqne	r5, ip
 800078c:	f000 f8de 	bleq	800094c <__aeabi_dmul+0x1dc>
 8000790:	442c      	add	r4, r5
 8000792:	ea81 0603 	eor.w	r6, r1, r3
 8000796:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800079a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800079e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80007a2:	bf18      	it	ne
 80007a4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80007a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80007ac:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80007b0:	d038      	beq.n	8000824 <__aeabi_dmul+0xb4>
 80007b2:	fba0 ce02 	umull	ip, lr, r0, r2
 80007b6:	f04f 0500 	mov.w	r5, #0
 80007ba:	fbe1 e502 	umlal	lr, r5, r1, r2
 80007be:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80007c2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80007c6:	f04f 0600 	mov.w	r6, #0
 80007ca:	fbe1 5603 	umlal	r5, r6, r1, r3
 80007ce:	f09c 0f00 	teq	ip, #0
 80007d2:	bf18      	it	ne
 80007d4:	f04e 0e01 	orrne.w	lr, lr, #1
 80007d8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80007dc:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80007e0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80007e4:	d204      	bcs.n	80007f0 <__aeabi_dmul+0x80>
 80007e6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80007ea:	416d      	adcs	r5, r5
 80007ec:	eb46 0606 	adc.w	r6, r6, r6
 80007f0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80007f4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80007f8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80007fc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000800:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000804:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000808:	bf88      	it	hi
 800080a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800080e:	d81e      	bhi.n	800084e <__aeabi_dmul+0xde>
 8000810:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000814:	bf08      	it	eq
 8000816:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800081a:	f150 0000 	adcs.w	r0, r0, #0
 800081e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000822:	bd70      	pop	{r4, r5, r6, pc}
 8000824:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000828:	ea46 0101 	orr.w	r1, r6, r1
 800082c:	ea40 0002 	orr.w	r0, r0, r2
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000838:	bfc2      	ittt	gt
 800083a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800083e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000842:	bd70      	popgt	{r4, r5, r6, pc}
 8000844:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000848:	f04f 0e00 	mov.w	lr, #0
 800084c:	3c01      	subs	r4, #1
 800084e:	f300 80ab 	bgt.w	80009a8 <__aeabi_dmul+0x238>
 8000852:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000856:	bfde      	ittt	le
 8000858:	2000      	movle	r0, #0
 800085a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800085e:	bd70      	pople	{r4, r5, r6, pc}
 8000860:	f1c4 0400 	rsb	r4, r4, #0
 8000864:	3c20      	subs	r4, #32
 8000866:	da35      	bge.n	80008d4 <__aeabi_dmul+0x164>
 8000868:	340c      	adds	r4, #12
 800086a:	dc1b      	bgt.n	80008a4 <__aeabi_dmul+0x134>
 800086c:	f104 0414 	add.w	r4, r4, #20
 8000870:	f1c4 0520 	rsb	r5, r4, #32
 8000874:	fa00 f305 	lsl.w	r3, r0, r5
 8000878:	fa20 f004 	lsr.w	r0, r0, r4
 800087c:	fa01 f205 	lsl.w	r2, r1, r5
 8000880:	ea40 0002 	orr.w	r0, r0, r2
 8000884:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000888:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800088c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000890:	fa21 f604 	lsr.w	r6, r1, r4
 8000894:	eb42 0106 	adc.w	r1, r2, r6
 8000898:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800089c:	bf08      	it	eq
 800089e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80008a2:	bd70      	pop	{r4, r5, r6, pc}
 80008a4:	f1c4 040c 	rsb	r4, r4, #12
 80008a8:	f1c4 0520 	rsb	r5, r4, #32
 80008ac:	fa00 f304 	lsl.w	r3, r0, r4
 80008b0:	fa20 f005 	lsr.w	r0, r0, r5
 80008b4:	fa01 f204 	lsl.w	r2, r1, r4
 80008b8:	ea40 0002 	orr.w	r0, r0, r2
 80008bc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80008c0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80008c4:	f141 0100 	adc.w	r1, r1, #0
 80008c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80008cc:	bf08      	it	eq
 80008ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80008d2:	bd70      	pop	{r4, r5, r6, pc}
 80008d4:	f1c4 0520 	rsb	r5, r4, #32
 80008d8:	fa00 f205 	lsl.w	r2, r0, r5
 80008dc:	ea4e 0e02 	orr.w	lr, lr, r2
 80008e0:	fa20 f304 	lsr.w	r3, r0, r4
 80008e4:	fa01 f205 	lsl.w	r2, r1, r5
 80008e8:	ea43 0302 	orr.w	r3, r3, r2
 80008ec:	fa21 f004 	lsr.w	r0, r1, r4
 80008f0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80008f4:	fa21 f204 	lsr.w	r2, r1, r4
 80008f8:	ea20 0002 	bic.w	r0, r0, r2
 80008fc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000900:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000904:	bf08      	it	eq
 8000906:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800090a:	bd70      	pop	{r4, r5, r6, pc}
 800090c:	f094 0f00 	teq	r4, #0
 8000910:	d10f      	bne.n	8000932 <__aeabi_dmul+0x1c2>
 8000912:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000916:	0040      	lsls	r0, r0, #1
 8000918:	eb41 0101 	adc.w	r1, r1, r1
 800091c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000920:	bf08      	it	eq
 8000922:	3c01      	subeq	r4, #1
 8000924:	d0f7      	beq.n	8000916 <__aeabi_dmul+0x1a6>
 8000926:	ea41 0106 	orr.w	r1, r1, r6
 800092a:	f095 0f00 	teq	r5, #0
 800092e:	bf18      	it	ne
 8000930:	4770      	bxne	lr
 8000932:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000936:	0052      	lsls	r2, r2, #1
 8000938:	eb43 0303 	adc.w	r3, r3, r3
 800093c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000940:	bf08      	it	eq
 8000942:	3d01      	subeq	r5, #1
 8000944:	d0f7      	beq.n	8000936 <__aeabi_dmul+0x1c6>
 8000946:	ea43 0306 	orr.w	r3, r3, r6
 800094a:	4770      	bx	lr
 800094c:	ea94 0f0c 	teq	r4, ip
 8000950:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000954:	bf18      	it	ne
 8000956:	ea95 0f0c 	teqne	r5, ip
 800095a:	d00c      	beq.n	8000976 <__aeabi_dmul+0x206>
 800095c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000960:	bf18      	it	ne
 8000962:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000966:	d1d1      	bne.n	800090c <__aeabi_dmul+0x19c>
 8000968:	ea81 0103 	eor.w	r1, r1, r3
 800096c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000970:	f04f 0000 	mov.w	r0, #0
 8000974:	bd70      	pop	{r4, r5, r6, pc}
 8000976:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800097a:	bf06      	itte	eq
 800097c:	4610      	moveq	r0, r2
 800097e:	4619      	moveq	r1, r3
 8000980:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000984:	d019      	beq.n	80009ba <__aeabi_dmul+0x24a>
 8000986:	ea94 0f0c 	teq	r4, ip
 800098a:	d102      	bne.n	8000992 <__aeabi_dmul+0x222>
 800098c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000990:	d113      	bne.n	80009ba <__aeabi_dmul+0x24a>
 8000992:	ea95 0f0c 	teq	r5, ip
 8000996:	d105      	bne.n	80009a4 <__aeabi_dmul+0x234>
 8000998:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800099c:	bf1c      	itt	ne
 800099e:	4610      	movne	r0, r2
 80009a0:	4619      	movne	r1, r3
 80009a2:	d10a      	bne.n	80009ba <__aeabi_dmul+0x24a>
 80009a4:	ea81 0103 	eor.w	r1, r1, r3
 80009a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80009ac:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80009b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80009b4:	f04f 0000 	mov.w	r0, #0
 80009b8:	bd70      	pop	{r4, r5, r6, pc}
 80009ba:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80009be:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80009c2:	bd70      	pop	{r4, r5, r6, pc}

080009c4 <__aeabi_ddiv>:
 80009c4:	b570      	push	{r4, r5, r6, lr}
 80009c6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80009ca:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80009ce:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80009d2:	bf1d      	ittte	ne
 80009d4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80009d8:	ea94 0f0c 	teqne	r4, ip
 80009dc:	ea95 0f0c 	teqne	r5, ip
 80009e0:	f000 f8a7 	bleq	8000b32 <__aeabi_ddiv+0x16e>
 80009e4:	eba4 0405 	sub.w	r4, r4, r5
 80009e8:	ea81 0e03 	eor.w	lr, r1, r3
 80009ec:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80009f4:	f000 8088 	beq.w	8000b08 <__aeabi_ddiv+0x144>
 80009f8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80009fc:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000a00:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000a04:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000a08:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000a0c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000a10:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000a14:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000a18:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000a1c:	429d      	cmp	r5, r3
 8000a1e:	bf08      	it	eq
 8000a20:	4296      	cmpeq	r6, r2
 8000a22:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000a26:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000a2a:	d202      	bcs.n	8000a32 <__aeabi_ddiv+0x6e>
 8000a2c:	085b      	lsrs	r3, r3, #1
 8000a2e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a32:	1ab6      	subs	r6, r6, r2
 8000a34:	eb65 0503 	sbc.w	r5, r5, r3
 8000a38:	085b      	lsrs	r3, r3, #1
 8000a3a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a3e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000a42:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000a46:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a4a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a4e:	bf22      	ittt	cs
 8000a50:	1ab6      	subcs	r6, r6, r2
 8000a52:	4675      	movcs	r5, lr
 8000a54:	ea40 000c 	orrcs.w	r0, r0, ip
 8000a58:	085b      	lsrs	r3, r3, #1
 8000a5a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a5e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a62:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a66:	bf22      	ittt	cs
 8000a68:	1ab6      	subcs	r6, r6, r2
 8000a6a:	4675      	movcs	r5, lr
 8000a6c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000a70:	085b      	lsrs	r3, r3, #1
 8000a72:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a76:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a7a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a7e:	bf22      	ittt	cs
 8000a80:	1ab6      	subcs	r6, r6, r2
 8000a82:	4675      	movcs	r5, lr
 8000a84:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000a88:	085b      	lsrs	r3, r3, #1
 8000a8a:	ea4f 0232 	mov.w	r2, r2, rrx
 8000a8e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000a92:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000a96:	bf22      	ittt	cs
 8000a98:	1ab6      	subcs	r6, r6, r2
 8000a9a:	4675      	movcs	r5, lr
 8000a9c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000aa0:	ea55 0e06 	orrs.w	lr, r5, r6
 8000aa4:	d018      	beq.n	8000ad8 <__aeabi_ddiv+0x114>
 8000aa6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000aaa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000aae:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000ab2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000ab6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000aba:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000abe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000ac2:	d1c0      	bne.n	8000a46 <__aeabi_ddiv+0x82>
 8000ac4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000ac8:	d10b      	bne.n	8000ae2 <__aeabi_ddiv+0x11e>
 8000aca:	ea41 0100 	orr.w	r1, r1, r0
 8000ace:	f04f 0000 	mov.w	r0, #0
 8000ad2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8000ad6:	e7b6      	b.n	8000a46 <__aeabi_ddiv+0x82>
 8000ad8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000adc:	bf04      	itt	eq
 8000ade:	4301      	orreq	r1, r0
 8000ae0:	2000      	moveq	r0, #0
 8000ae2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000ae6:	bf88      	it	hi
 8000ae8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000aec:	f63f aeaf 	bhi.w	800084e <__aeabi_dmul+0xde>
 8000af0:	ebb5 0c03 	subs.w	ip, r5, r3
 8000af4:	bf04      	itt	eq
 8000af6:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000afa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000afe:	f150 0000 	adcs.w	r0, r0, #0
 8000b02:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000b06:	bd70      	pop	{r4, r5, r6, pc}
 8000b08:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000b0c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000b10:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000b14:	bfc2      	ittt	gt
 8000b16:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000b1a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000b1e:	bd70      	popgt	{r4, r5, r6, pc}
 8000b20:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b24:	f04f 0e00 	mov.w	lr, #0
 8000b28:	3c01      	subs	r4, #1
 8000b2a:	e690      	b.n	800084e <__aeabi_dmul+0xde>
 8000b2c:	ea45 0e06 	orr.w	lr, r5, r6
 8000b30:	e68d      	b.n	800084e <__aeabi_dmul+0xde>
 8000b32:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000b36:	ea94 0f0c 	teq	r4, ip
 8000b3a:	bf08      	it	eq
 8000b3c:	ea95 0f0c 	teqeq	r5, ip
 8000b40:	f43f af3b 	beq.w	80009ba <__aeabi_dmul+0x24a>
 8000b44:	ea94 0f0c 	teq	r4, ip
 8000b48:	d10a      	bne.n	8000b60 <__aeabi_ddiv+0x19c>
 8000b4a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000b4e:	f47f af34 	bne.w	80009ba <__aeabi_dmul+0x24a>
 8000b52:	ea95 0f0c 	teq	r5, ip
 8000b56:	f47f af25 	bne.w	80009a4 <__aeabi_dmul+0x234>
 8000b5a:	4610      	mov	r0, r2
 8000b5c:	4619      	mov	r1, r3
 8000b5e:	e72c      	b.n	80009ba <__aeabi_dmul+0x24a>
 8000b60:	ea95 0f0c 	teq	r5, ip
 8000b64:	d106      	bne.n	8000b74 <__aeabi_ddiv+0x1b0>
 8000b66:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000b6a:	f43f aefd 	beq.w	8000968 <__aeabi_dmul+0x1f8>
 8000b6e:	4610      	mov	r0, r2
 8000b70:	4619      	mov	r1, r3
 8000b72:	e722      	b.n	80009ba <__aeabi_dmul+0x24a>
 8000b74:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000b78:	bf18      	it	ne
 8000b7a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000b7e:	f47f aec5 	bne.w	800090c <__aeabi_dmul+0x19c>
 8000b82:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000b86:	f47f af0d 	bne.w	80009a4 <__aeabi_dmul+0x234>
 8000b8a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000b8e:	f47f aeeb 	bne.w	8000968 <__aeabi_dmul+0x1f8>
 8000b92:	e712      	b.n	80009ba <__aeabi_dmul+0x24a>

08000b94 <__gedf2>:
 8000b94:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000b98:	e006      	b.n	8000ba8 <__cmpdf2+0x4>
 8000b9a:	bf00      	nop

08000b9c <__ledf2>:
 8000b9c:	f04f 0c01 	mov.w	ip, #1
 8000ba0:	e002      	b.n	8000ba8 <__cmpdf2+0x4>
 8000ba2:	bf00      	nop

08000ba4 <__cmpdf2>:
 8000ba4:	f04f 0c01 	mov.w	ip, #1
 8000ba8:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000bac:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000bb0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000bb4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000bb8:	bf18      	it	ne
 8000bba:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000bbe:	d01b      	beq.n	8000bf8 <__cmpdf2+0x54>
 8000bc0:	b001      	add	sp, #4
 8000bc2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000bc6:	bf0c      	ite	eq
 8000bc8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000bcc:	ea91 0f03 	teqne	r1, r3
 8000bd0:	bf02      	ittt	eq
 8000bd2:	ea90 0f02 	teqeq	r0, r2
 8000bd6:	2000      	moveq	r0, #0
 8000bd8:	4770      	bxeq	lr
 8000bda:	f110 0f00 	cmn.w	r0, #0
 8000bde:	ea91 0f03 	teq	r1, r3
 8000be2:	bf58      	it	pl
 8000be4:	4299      	cmppl	r1, r3
 8000be6:	bf08      	it	eq
 8000be8:	4290      	cmpeq	r0, r2
 8000bea:	bf2c      	ite	cs
 8000bec:	17d8      	asrcs	r0, r3, #31
 8000bee:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000bf2:	f040 0001 	orr.w	r0, r0, #1
 8000bf6:	4770      	bx	lr
 8000bf8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000bfc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c00:	d102      	bne.n	8000c08 <__cmpdf2+0x64>
 8000c02:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000c06:	d107      	bne.n	8000c18 <__cmpdf2+0x74>
 8000c08:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000c0c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c10:	d1d6      	bne.n	8000bc0 <__cmpdf2+0x1c>
 8000c12:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000c16:	d0d3      	beq.n	8000bc0 <__cmpdf2+0x1c>
 8000c18:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000c1c:	4770      	bx	lr
 8000c1e:	bf00      	nop

08000c20 <__aeabi_cdrcmple>:
 8000c20:	4684      	mov	ip, r0
 8000c22:	4610      	mov	r0, r2
 8000c24:	4662      	mov	r2, ip
 8000c26:	468c      	mov	ip, r1
 8000c28:	4619      	mov	r1, r3
 8000c2a:	4663      	mov	r3, ip
 8000c2c:	e000      	b.n	8000c30 <__aeabi_cdcmpeq>
 8000c2e:	bf00      	nop

08000c30 <__aeabi_cdcmpeq>:
 8000c30:	b501      	push	{r0, lr}
 8000c32:	f7ff ffb7 	bl	8000ba4 <__cmpdf2>
 8000c36:	2800      	cmp	r0, #0
 8000c38:	bf48      	it	mi
 8000c3a:	f110 0f00 	cmnmi.w	r0, #0
 8000c3e:	bd01      	pop	{r0, pc}

08000c40 <__aeabi_dcmpeq>:
 8000c40:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c44:	f7ff fff4 	bl	8000c30 <__aeabi_cdcmpeq>
 8000c48:	bf0c      	ite	eq
 8000c4a:	2001      	moveq	r0, #1
 8000c4c:	2000      	movne	r0, #0
 8000c4e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c52:	bf00      	nop

08000c54 <__aeabi_dcmplt>:
 8000c54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c58:	f7ff ffea 	bl	8000c30 <__aeabi_cdcmpeq>
 8000c5c:	bf34      	ite	cc
 8000c5e:	2001      	movcc	r0, #1
 8000c60:	2000      	movcs	r0, #0
 8000c62:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c66:	bf00      	nop

08000c68 <__aeabi_dcmple>:
 8000c68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c6c:	f7ff ffe0 	bl	8000c30 <__aeabi_cdcmpeq>
 8000c70:	bf94      	ite	ls
 8000c72:	2001      	movls	r0, #1
 8000c74:	2000      	movhi	r0, #0
 8000c76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c7a:	bf00      	nop

08000c7c <__aeabi_dcmpge>:
 8000c7c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c80:	f7ff ffce 	bl	8000c20 <__aeabi_cdrcmple>
 8000c84:	bf94      	ite	ls
 8000c86:	2001      	movls	r0, #1
 8000c88:	2000      	movhi	r0, #0
 8000c8a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c8e:	bf00      	nop

08000c90 <__aeabi_dcmpgt>:
 8000c90:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000c94:	f7ff ffc4 	bl	8000c20 <__aeabi_cdrcmple>
 8000c98:	bf34      	ite	cc
 8000c9a:	2001      	movcc	r0, #1
 8000c9c:	2000      	movcs	r0, #0
 8000c9e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ca2:	bf00      	nop

08000ca4 <__aeabi_dcmpun>:
 8000ca4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ca8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000cac:	d102      	bne.n	8000cb4 <__aeabi_dcmpun+0x10>
 8000cae:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000cb2:	d10a      	bne.n	8000cca <__aeabi_dcmpun+0x26>
 8000cb4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000cb8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000cbc:	d102      	bne.n	8000cc4 <__aeabi_dcmpun+0x20>
 8000cbe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000cc2:	d102      	bne.n	8000cca <__aeabi_dcmpun+0x26>
 8000cc4:	f04f 0000 	mov.w	r0, #0
 8000cc8:	4770      	bx	lr
 8000cca:	f04f 0001 	mov.w	r0, #1
 8000cce:	4770      	bx	lr

08000cd0 <__aeabi_d2iz>:
 8000cd0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000cd4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000cd8:	d215      	bcs.n	8000d06 <__aeabi_d2iz+0x36>
 8000cda:	d511      	bpl.n	8000d00 <__aeabi_d2iz+0x30>
 8000cdc:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ce0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ce4:	d912      	bls.n	8000d0c <__aeabi_d2iz+0x3c>
 8000ce6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000cea:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000cee:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000cf2:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000cf6:	fa23 f002 	lsr.w	r0, r3, r2
 8000cfa:	bf18      	it	ne
 8000cfc:	4240      	negne	r0, r0
 8000cfe:	4770      	bx	lr
 8000d00:	f04f 0000 	mov.w	r0, #0
 8000d04:	4770      	bx	lr
 8000d06:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000d0a:	d105      	bne.n	8000d18 <__aeabi_d2iz+0x48>
 8000d0c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000d10:	bf08      	it	eq
 8000d12:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000d16:	4770      	bx	lr
 8000d18:	f04f 0000 	mov.w	r0, #0
 8000d1c:	4770      	bx	lr
 8000d1e:	bf00      	nop

08000d20 <__aeabi_frsub>:
 8000d20:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000d24:	e002      	b.n	8000d2c <__addsf3>
 8000d26:	bf00      	nop

08000d28 <__aeabi_fsub>:
 8000d28:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000d2c <__addsf3>:
 8000d2c:	0042      	lsls	r2, r0, #1
 8000d2e:	bf1f      	itttt	ne
 8000d30:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000d34:	ea92 0f03 	teqne	r2, r3
 8000d38:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000d3c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000d40:	d06a      	beq.n	8000e18 <__addsf3+0xec>
 8000d42:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000d46:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000d4a:	bfc1      	itttt	gt
 8000d4c:	18d2      	addgt	r2, r2, r3
 8000d4e:	4041      	eorgt	r1, r0
 8000d50:	4048      	eorgt	r0, r1
 8000d52:	4041      	eorgt	r1, r0
 8000d54:	bfb8      	it	lt
 8000d56:	425b      	neglt	r3, r3
 8000d58:	2b19      	cmp	r3, #25
 8000d5a:	bf88      	it	hi
 8000d5c:	4770      	bxhi	lr
 8000d5e:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000d62:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d66:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000d6a:	bf18      	it	ne
 8000d6c:	4240      	negne	r0, r0
 8000d6e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000d72:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000d76:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000d7a:	bf18      	it	ne
 8000d7c:	4249      	negne	r1, r1
 8000d7e:	ea92 0f03 	teq	r2, r3
 8000d82:	d03f      	beq.n	8000e04 <__addsf3+0xd8>
 8000d84:	f1a2 0201 	sub.w	r2, r2, #1
 8000d88:	fa41 fc03 	asr.w	ip, r1, r3
 8000d8c:	eb10 000c 	adds.w	r0, r0, ip
 8000d90:	f1c3 0320 	rsb	r3, r3, #32
 8000d94:	fa01 f103 	lsl.w	r1, r1, r3
 8000d98:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000d9c:	d502      	bpl.n	8000da4 <__addsf3+0x78>
 8000d9e:	4249      	negs	r1, r1
 8000da0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000da4:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000da8:	d313      	bcc.n	8000dd2 <__addsf3+0xa6>
 8000daa:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000dae:	d306      	bcc.n	8000dbe <__addsf3+0x92>
 8000db0:	0840      	lsrs	r0, r0, #1
 8000db2:	ea4f 0131 	mov.w	r1, r1, rrx
 8000db6:	f102 0201 	add.w	r2, r2, #1
 8000dba:	2afe      	cmp	r2, #254	@ 0xfe
 8000dbc:	d251      	bcs.n	8000e62 <__addsf3+0x136>
 8000dbe:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000dc2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000dc6:	bf08      	it	eq
 8000dc8:	f020 0001 	biceq.w	r0, r0, #1
 8000dcc:	ea40 0003 	orr.w	r0, r0, r3
 8000dd0:	4770      	bx	lr
 8000dd2:	0049      	lsls	r1, r1, #1
 8000dd4:	eb40 0000 	adc.w	r0, r0, r0
 8000dd8:	3a01      	subs	r2, #1
 8000dda:	bf28      	it	cs
 8000ddc:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000de0:	d2ed      	bcs.n	8000dbe <__addsf3+0x92>
 8000de2:	fab0 fc80 	clz	ip, r0
 8000de6:	f1ac 0c08 	sub.w	ip, ip, #8
 8000dea:	ebb2 020c 	subs.w	r2, r2, ip
 8000dee:	fa00 f00c 	lsl.w	r0, r0, ip
 8000df2:	bfaa      	itet	ge
 8000df4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000df8:	4252      	neglt	r2, r2
 8000dfa:	4318      	orrge	r0, r3
 8000dfc:	bfbc      	itt	lt
 8000dfe:	40d0      	lsrlt	r0, r2
 8000e00:	4318      	orrlt	r0, r3
 8000e02:	4770      	bx	lr
 8000e04:	f092 0f00 	teq	r2, #0
 8000e08:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000e0c:	bf06      	itte	eq
 8000e0e:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000e12:	3201      	addeq	r2, #1
 8000e14:	3b01      	subne	r3, #1
 8000e16:	e7b5      	b.n	8000d84 <__addsf3+0x58>
 8000e18:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000e1c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000e20:	bf18      	it	ne
 8000e22:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000e26:	d021      	beq.n	8000e6c <__addsf3+0x140>
 8000e28:	ea92 0f03 	teq	r2, r3
 8000e2c:	d004      	beq.n	8000e38 <__addsf3+0x10c>
 8000e2e:	f092 0f00 	teq	r2, #0
 8000e32:	bf08      	it	eq
 8000e34:	4608      	moveq	r0, r1
 8000e36:	4770      	bx	lr
 8000e38:	ea90 0f01 	teq	r0, r1
 8000e3c:	bf1c      	itt	ne
 8000e3e:	2000      	movne	r0, #0
 8000e40:	4770      	bxne	lr
 8000e42:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000e46:	d104      	bne.n	8000e52 <__addsf3+0x126>
 8000e48:	0040      	lsls	r0, r0, #1
 8000e4a:	bf28      	it	cs
 8000e4c:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000e50:	4770      	bx	lr
 8000e52:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000e56:	bf3c      	itt	cc
 8000e58:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000e5c:	4770      	bxcc	lr
 8000e5e:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000e62:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000e66:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e6a:	4770      	bx	lr
 8000e6c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000e70:	bf16      	itet	ne
 8000e72:	4608      	movne	r0, r1
 8000e74:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000e78:	4601      	movne	r1, r0
 8000e7a:	0242      	lsls	r2, r0, #9
 8000e7c:	bf06      	itte	eq
 8000e7e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000e82:	ea90 0f01 	teqeq	r0, r1
 8000e86:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000e8a:	4770      	bx	lr

08000e8c <__aeabi_ui2f>:
 8000e8c:	f04f 0300 	mov.w	r3, #0
 8000e90:	e004      	b.n	8000e9c <__aeabi_i2f+0x8>
 8000e92:	bf00      	nop

08000e94 <__aeabi_i2f>:
 8000e94:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000e98:	bf48      	it	mi
 8000e9a:	4240      	negmi	r0, r0
 8000e9c:	ea5f 0c00 	movs.w	ip, r0
 8000ea0:	bf08      	it	eq
 8000ea2:	4770      	bxeq	lr
 8000ea4:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000ea8:	4601      	mov	r1, r0
 8000eaa:	f04f 0000 	mov.w	r0, #0
 8000eae:	e01c      	b.n	8000eea <__aeabi_l2f+0x2a>

08000eb0 <__aeabi_ul2f>:
 8000eb0:	ea50 0201 	orrs.w	r2, r0, r1
 8000eb4:	bf08      	it	eq
 8000eb6:	4770      	bxeq	lr
 8000eb8:	f04f 0300 	mov.w	r3, #0
 8000ebc:	e00a      	b.n	8000ed4 <__aeabi_l2f+0x14>
 8000ebe:	bf00      	nop

08000ec0 <__aeabi_l2f>:
 8000ec0:	ea50 0201 	orrs.w	r2, r0, r1
 8000ec4:	bf08      	it	eq
 8000ec6:	4770      	bxeq	lr
 8000ec8:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000ecc:	d502      	bpl.n	8000ed4 <__aeabi_l2f+0x14>
 8000ece:	4240      	negs	r0, r0
 8000ed0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ed4:	ea5f 0c01 	movs.w	ip, r1
 8000ed8:	bf02      	ittt	eq
 8000eda:	4684      	moveq	ip, r0
 8000edc:	4601      	moveq	r1, r0
 8000ede:	2000      	moveq	r0, #0
 8000ee0:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000ee4:	bf08      	it	eq
 8000ee6:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000eea:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000eee:	fabc f28c 	clz	r2, ip
 8000ef2:	3a08      	subs	r2, #8
 8000ef4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000ef8:	db10      	blt.n	8000f1c <__aeabi_l2f+0x5c>
 8000efa:	fa01 fc02 	lsl.w	ip, r1, r2
 8000efe:	4463      	add	r3, ip
 8000f00:	fa00 fc02 	lsl.w	ip, r0, r2
 8000f04:	f1c2 0220 	rsb	r2, r2, #32
 8000f08:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000f0c:	fa20 f202 	lsr.w	r2, r0, r2
 8000f10:	eb43 0002 	adc.w	r0, r3, r2
 8000f14:	bf08      	it	eq
 8000f16:	f020 0001 	biceq.w	r0, r0, #1
 8000f1a:	4770      	bx	lr
 8000f1c:	f102 0220 	add.w	r2, r2, #32
 8000f20:	fa01 fc02 	lsl.w	ip, r1, r2
 8000f24:	f1c2 0220 	rsb	r2, r2, #32
 8000f28:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000f2c:	fa21 f202 	lsr.w	r2, r1, r2
 8000f30:	eb43 0002 	adc.w	r0, r3, r2
 8000f34:	bf08      	it	eq
 8000f36:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000f3a:	4770      	bx	lr

08000f3c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000f3c:	b480      	push	{r7}
 8000f3e:	b083      	sub	sp, #12
 8000f40:	af00      	add	r7, sp, #0
 8000f42:	4603      	mov	r3, r0
 8000f44:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000f46:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f4a:	2b00      	cmp	r3, #0
 8000f4c:	db0b      	blt.n	8000f66 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f4e:	79fb      	ldrb	r3, [r7, #7]
 8000f50:	f003 021f 	and.w	r2, r3, #31
 8000f54:	4906      	ldr	r1, [pc, #24]	@ (8000f70 <__NVIC_EnableIRQ+0x34>)
 8000f56:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f5a:	095b      	lsrs	r3, r3, #5
 8000f5c:	2001      	movs	r0, #1
 8000f5e:	fa00 f202 	lsl.w	r2, r0, r2
 8000f62:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000f66:	bf00      	nop
 8000f68:	370c      	adds	r7, #12
 8000f6a:	46bd      	mov	sp, r7
 8000f6c:	bc80      	pop	{r7}
 8000f6e:	4770      	bx	lr
 8000f70:	e000e100 	.word	0xe000e100

08000f74 <finished_transmission>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


void finished_transmission(uint32_t bytes_sent) {
 8000f74:	b480      	push	{r7}
 8000f76:	b085      	sub	sp, #20
 8000f78:	af00      	add	r7, sp, #0
 8000f7a:	6078      	str	r0, [r7, #4]
	// This function will be called after a transmission is complete

	volatile uint32_t test = 0;
 8000f7c:	2300      	movs	r3, #0
 8000f7e:	60fb      	str	r3, [r7, #12]
	// make a very simple delay
	for (volatile uint32_t i = 0; i < 0x8ffff; i++) {
 8000f80:	2300      	movs	r3, #0
 8000f82:	60bb      	str	r3, [r7, #8]
 8000f84:	e002      	b.n	8000f8c <finished_transmission+0x18>
 8000f86:	68bb      	ldr	r3, [r7, #8]
 8000f88:	3301      	adds	r3, #1
 8000f8a:	60bb      	str	r3, [r7, #8]
 8000f8c:	68bb      	ldr	r3, [r7, #8]
 8000f8e:	4a04      	ldr	r2, [pc, #16]	@ (8000fa0 <finished_transmission+0x2c>)
 8000f90:	4293      	cmp	r3, r2
 8000f92:	d9f8      	bls.n	8000f86 <finished_transmission+0x12>
		// waste time !
	}
}
 8000f94:	bf00      	nop
 8000f96:	bf00      	nop
 8000f98:	3714      	adds	r7, #20
 8000f9a:	46bd      	mov	sp, r7
 8000f9c:	bc80      	pop	{r7}
 8000f9e:	4770      	bx	lr
 8000fa0:	0008fffe 	.word	0x0008fffe

08000fa4 <main>:
void ShapeDemo();
const int NUMBER_OF_SHAPES = 16;
volatile uint8_t start_command_received = 0; // declaring start_cmd_received

int main(void)
{
 8000fa4:	b580      	push	{r7, lr}
 8000fa6:	b082      	sub	sp, #8
 8000fa8:	af00      	add	r7, sp, #0
	SerialInitialise(BAUD_115200, &USART1_PORT, &finished_transmission);
 8000faa:	4a11      	ldr	r2, [pc, #68]	@ (8000ff0 <main+0x4c>)
 8000fac:	4911      	ldr	r1, [pc, #68]	@ (8000ff4 <main+0x50>)
 8000fae:	2004      	movs	r0, #4
 8000fb0:	f000 f9ec 	bl	800138c <SerialInitialise>
    // 2. Enable RXNE interrupt and USART1 IRQ
    USART1->CR1 |= USART_CR1_RXNEIE;
 8000fb4:	4b10      	ldr	r3, [pc, #64]	@ (8000ff8 <main+0x54>)
 8000fb6:	681b      	ldr	r3, [r3, #0]
 8000fb8:	4a0f      	ldr	r2, [pc, #60]	@ (8000ff8 <main+0x54>)
 8000fba:	f043 0320 	orr.w	r3, r3, #32
 8000fbe:	6013      	str	r3, [r2, #0]
    NVIC_EnableIRQ(USART1_IRQn);
 8000fc0:	2025      	movs	r0, #37	@ 0x25
 8000fc2:	f7ff ffbb 	bl	8000f3c <__NVIC_EnableIRQ>

    // 3. Prompt the user via serial
    SerialOutputString((uint8_t *)"Type 'start' to begin\r\n", &USART1_PORT);
 8000fc6:	490b      	ldr	r1, [pc, #44]	@ (8000ff4 <main+0x50>)
 8000fc8:	480c      	ldr	r0, [pc, #48]	@ (8000ffc <main+0x58>)
 8000fca:	f000 fa8b 	bl	80014e4 <SerialOutputString>

    // 4. NEW: wait for 'start' command (flag set by ISR)
    while (!start_command_received) {
 8000fce:	e000      	b.n	8000fd2 <main+0x2e>
        __WFI();  // Wait For Interrupt — low power mode
 8000fd0:	bf30      	wfi
    while (!start_command_received) {
 8000fd2:	4b0b      	ldr	r3, [pc, #44]	@ (8001000 <main+0x5c>)
 8000fd4:	781b      	ldrb	r3, [r3, #0]
 8000fd6:	b2db      	uxtb	r3, r3
 8000fd8:	2b00      	cmp	r3, #0
 8000fda:	d0f9      	beq.n	8000fd0 <main+0x2c>
    }
    // 5. Once flag is raised, run shape demo
    ShapeDemo();
 8000fdc:	f000 f814 	bl	8001008 <ShapeDemo>

    // 6. Then repeat printing the string forever
    const char *repeat_str = "This is a string !\r\n";
 8000fe0:	4b08      	ldr	r3, [pc, #32]	@ (8001004 <main+0x60>)
 8000fe2:	607b      	str	r3, [r7, #4]
    for (;;) {
        SerialOutputString((uint8_t *)repeat_str, &USART1_PORT);
 8000fe4:	4903      	ldr	r1, [pc, #12]	@ (8000ff4 <main+0x50>)
 8000fe6:	6878      	ldr	r0, [r7, #4]
 8000fe8:	f000 fa7c 	bl	80014e4 <SerialOutputString>
 8000fec:	e7fa      	b.n	8000fe4 <main+0x40>
 8000fee:	bf00      	nop
 8000ff0:	08000f75 	.word	0x08000f75
 8000ff4:	20000000 	.word	0x20000000
 8000ff8:	40013800 	.word	0x40013800
 8000ffc:	08004508 	.word	0x08004508
 8001000:	2000020c 	.word	0x2000020c
 8001004:	08004520 	.word	0x08004520

08001008 <ShapeDemo>:
    }
}


void ShapeDemo(void) {
 8001008:	b5b0      	push	{r4, r5, r7, lr}
 800100a:	b0f4      	sub	sp, #464	@ 0x1d0
 800100c:	af00      	add	r7, sp, #0

	struct shape shape_1 = generate_shape(SHAPE_SPHERE, 5, 5);
 800100e:	f507 70d6 	add.w	r0, r7, #428	@ 0x1ac
 8001012:	2305      	movs	r3, #5
 8001014:	2205      	movs	r2, #5
 8001016:	2100      	movs	r1, #0
 8001018:	f000 fa90 	bl	800153c <generate_shape>

	struct shape shape_array[16];

	uint8_t string_buffer[64];

	shape_string(&shape_1, &string_buffer[0]);
 800101c:	f107 0218 	add.w	r2, r7, #24
 8001020:	f507 73d6 	add.w	r3, r7, #428	@ 0x1ac
 8001024:	4611      	mov	r1, r2
 8001026:	4618      	mov	r0, r3
 8001028:	f000 face 	bl	80015c8 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 800102c:	f107 0318 	add.w	r3, r7, #24
 8001030:	498b      	ldr	r1, [pc, #556]	@ (8001260 <ShapeDemo+0x258>)
 8001032:	4618      	mov	r0, r3
 8001034:	f000 fa56 	bl	80014e4 <SerialOutputString>

	shape_string(&shape_2, &string_buffer[0]);
 8001038:	f107 0218 	add.w	r2, r7, #24
 800103c:	f507 73cc 	add.w	r3, r7, #408	@ 0x198
 8001040:	4611      	mov	r1, r2
 8001042:	4618      	mov	r0, r3
 8001044:	f000 fac0 	bl	80015c8 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 8001048:	f107 0318 	add.w	r3, r7, #24
 800104c:	4984      	ldr	r1, [pc, #528]	@ (8001260 <ShapeDemo+0x258>)
 800104e:	4618      	mov	r0, r3
 8001050:	f000 fa48 	bl	80014e4 <SerialOutputString>

	shape_3 = (struct shape*)malloc(sizeof(struct shape));
 8001054:	2014      	movs	r0, #20
 8001056:	f000 fed1 	bl	8001dfc <malloc>
 800105a:	4603      	mov	r3, r0
 800105c:	f8c7 31c0 	str.w	r3, [r7, #448]	@ 0x1c0
	shape_string(shape_3, &string_buffer[0]);
 8001060:	f107 0318 	add.w	r3, r7, #24
 8001064:	4619      	mov	r1, r3
 8001066:	f8d7 01c0 	ldr.w	r0, [r7, #448]	@ 0x1c0
 800106a:	f000 faad 	bl	80015c8 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 800106e:	f107 0318 	add.w	r3, r7, #24
 8001072:	497b      	ldr	r1, [pc, #492]	@ (8001260 <ShapeDemo+0x258>)
 8001074:	4618      	mov	r0, r3
 8001076:	f000 fa35 	bl	80014e4 <SerialOutputString>

	*shape_3 = generate_shape(SHAPE_CONE, 6,3);
 800107a:	f8d7 41c0 	ldr.w	r4, [r7, #448]	@ 0x1c0
 800107e:	4638      	mov	r0, r7
 8001080:	2303      	movs	r3, #3
 8001082:	2206      	movs	r2, #6
 8001084:	2102      	movs	r1, #2
 8001086:	f000 fa59 	bl	800153c <generate_shape>
 800108a:	f507 73e8 	add.w	r3, r7, #464	@ 0x1d0
 800108e:	f5a3 73e8 	sub.w	r3, r3, #464	@ 0x1d0
 8001092:	461d      	mov	r5, r3
 8001094:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001096:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001098:	682b      	ldr	r3, [r5, #0]
 800109a:	6023      	str	r3, [r4, #0]
	shape_string(shape_3, &string_buffer[0]);
 800109c:	f107 0318 	add.w	r3, r7, #24
 80010a0:	4619      	mov	r1, r3
 80010a2:	f8d7 01c0 	ldr.w	r0, [r7, #448]	@ 0x1c0
 80010a6:	f000 fa8f 	bl	80015c8 <shape_string>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 80010aa:	f107 0318 	add.w	r3, r7, #24
 80010ae:	496c      	ldr	r1, [pc, #432]	@ (8001260 <ShapeDemo+0x258>)
 80010b0:	4618      	mov	r0, r3
 80010b2:	f000 fa17 	bl	80014e4 <SerialOutputString>


	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 80010b6:	2300      	movs	r3, #0
 80010b8:	f8c7 31cc 	str.w	r3, [r7, #460]	@ 0x1cc
 80010bc:	e049      	b.n	8001152 <ShapeDemo+0x14a>
		if (initialise_shape(&shape_array[counter], counter % 3, 3, 4)) {
 80010be:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 80010c2:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 80010c6:	4613      	mov	r3, r2
 80010c8:	009b      	lsls	r3, r3, #2
 80010ca:	4413      	add	r3, r2
 80010cc:	009b      	lsls	r3, r3, #2
 80010ce:	18c8      	adds	r0, r1, r3
 80010d0:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 80010d4:	4b63      	ldr	r3, [pc, #396]	@ (8001264 <ShapeDemo+0x25c>)
 80010d6:	fba3 1302 	umull	r1, r3, r3, r2
 80010da:	0859      	lsrs	r1, r3, #1
 80010dc:	460b      	mov	r3, r1
 80010de:	005b      	lsls	r3, r3, #1
 80010e0:	440b      	add	r3, r1
 80010e2:	1ad1      	subs	r1, r2, r3
 80010e4:	2304      	movs	r3, #4
 80010e6:	2203      	movs	r2, #3
 80010e8:	f000 fa48 	bl	800157c <initialise_shape>
 80010ec:	4603      	mov	r3, r0
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d015      	beq.n	800111e <ShapeDemo+0x116>
			shape_string(&shape_array[counter], &string_buffer[0]);
 80010f2:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 80010f6:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 80010fa:	4613      	mov	r3, r2
 80010fc:	009b      	lsls	r3, r3, #2
 80010fe:	4413      	add	r3, r2
 8001100:	009b      	lsls	r3, r3, #2
 8001102:	440b      	add	r3, r1
 8001104:	f107 0218 	add.w	r2, r7, #24
 8001108:	4611      	mov	r1, r2
 800110a:	4618      	mov	r0, r3
 800110c:	f000 fa5c 	bl	80015c8 <shape_string>
			SerialOutputString(&string_buffer[0], &USART1_PORT);
 8001110:	f107 0318 	add.w	r3, r7, #24
 8001114:	4952      	ldr	r1, [pc, #328]	@ (8001260 <ShapeDemo+0x258>)
 8001116:	4618      	mov	r0, r3
 8001118:	f000 f9e4 	bl	80014e4 <SerialOutputString>
 800111c:	e014      	b.n	8001148 <ShapeDemo+0x140>
		} else {
			shape_string(&shape_array[counter], &string_buffer[0]);
 800111e:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8001122:	f8d7 21cc 	ldr.w	r2, [r7, #460]	@ 0x1cc
 8001126:	4613      	mov	r3, r2
 8001128:	009b      	lsls	r3, r3, #2
 800112a:	4413      	add	r3, r2
 800112c:	009b      	lsls	r3, r3, #2
 800112e:	440b      	add	r3, r1
 8001130:	f107 0218 	add.w	r2, r7, #24
 8001134:	4611      	mov	r1, r2
 8001136:	4618      	mov	r0, r3
 8001138:	f000 fa46 	bl	80015c8 <shape_string>
			SerialOutputString(&string_buffer[0], &USART1_PORT);
 800113c:	f107 0318 	add.w	r3, r7, #24
 8001140:	4947      	ldr	r1, [pc, #284]	@ (8001260 <ShapeDemo+0x258>)
 8001142:	4618      	mov	r0, r3
 8001144:	f000 f9ce 	bl	80014e4 <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 8001148:	f8d7 31cc 	ldr.w	r3, [r7, #460]	@ 0x1cc
 800114c:	3301      	adds	r3, #1
 800114e:	f8c7 31cc 	str.w	r3, [r7, #460]	@ 0x1cc
 8001152:	2310      	movs	r3, #16
 8001154:	461a      	mov	r2, r3
 8001156:	f8d7 31cc 	ldr.w	r3, [r7, #460]	@ 0x1cc
 800115a:	4293      	cmp	r3, r2
 800115c:	d3af      	bcc.n	80010be <ShapeDemo+0xb6>
		}
	}

	// slide the shapes
	sprintf(&string_buffer[0], "sliding the shapes by 1.5 units\r\n");
 800115e:	f107 0318 	add.w	r3, r7, #24
 8001162:	4941      	ldr	r1, [pc, #260]	@ (8001268 <ShapeDemo+0x260>)
 8001164:	4618      	mov	r0, r3
 8001166:	f001 f88d 	bl	8002284 <siprintf>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 800116a:	f107 0318 	add.w	r3, r7, #24
 800116e:	493c      	ldr	r1, [pc, #240]	@ (8001260 <ShapeDemo+0x258>)
 8001170:	4618      	mov	r0, r3
 8001172:	f000 f9b7 	bl	80014e4 <SerialOutputString>

	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 8001176:	2300      	movs	r3, #0
 8001178:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 800117c:	e027      	b.n	80011ce <ShapeDemo+0x1c6>
		slide_shape(&shape_array[counter], 1.5);
 800117e:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8001182:	f8d7 21c8 	ldr.w	r2, [r7, #456]	@ 0x1c8
 8001186:	4613      	mov	r3, r2
 8001188:	009b      	lsls	r3, r3, #2
 800118a:	4413      	add	r3, r2
 800118c:	009b      	lsls	r3, r3, #2
 800118e:	440b      	add	r3, r1
 8001190:	f04f 517f 	mov.w	r1, #1069547520	@ 0x3fc00000
 8001194:	4618      	mov	r0, r3
 8001196:	f000 f8ca 	bl	800132e <slide_shape>
		shape_string(&shape_array[counter], &string_buffer[0]);
 800119a:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 800119e:	f8d7 21c8 	ldr.w	r2, [r7, #456]	@ 0x1c8
 80011a2:	4613      	mov	r3, r2
 80011a4:	009b      	lsls	r3, r3, #2
 80011a6:	4413      	add	r3, r2
 80011a8:	009b      	lsls	r3, r3, #2
 80011aa:	440b      	add	r3, r1
 80011ac:	f107 0218 	add.w	r2, r7, #24
 80011b0:	4611      	mov	r1, r2
 80011b2:	4618      	mov	r0, r3
 80011b4:	f000 fa08 	bl	80015c8 <shape_string>
		SerialOutputString(&string_buffer[0], &USART1_PORT);
 80011b8:	f107 0318 	add.w	r3, r7, #24
 80011bc:	4928      	ldr	r1, [pc, #160]	@ (8001260 <ShapeDemo+0x258>)
 80011be:	4618      	mov	r0, r3
 80011c0:	f000 f990 	bl	80014e4 <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 80011c4:	f8d7 31c8 	ldr.w	r3, [r7, #456]	@ 0x1c8
 80011c8:	3301      	adds	r3, #1
 80011ca:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 80011ce:	2310      	movs	r3, #16
 80011d0:	461a      	mov	r2, r3
 80011d2:	f8d7 31c8 	ldr.w	r3, [r7, #456]	@ 0x1c8
 80011d6:	4293      	cmp	r3, r2
 80011d8:	d3d1      	bcc.n	800117e <ShapeDemo+0x176>
	}

	// roll the shapes
	sprintf(&string_buffer[0], "rolling the shapes by 2.5 units\n");
 80011da:	f107 0318 	add.w	r3, r7, #24
 80011de:	4923      	ldr	r1, [pc, #140]	@ (800126c <ShapeDemo+0x264>)
 80011e0:	4618      	mov	r0, r3
 80011e2:	f001 f84f 	bl	8002284 <siprintf>
	SerialOutputString(&string_buffer[0], &USART1_PORT);
 80011e6:	f107 0318 	add.w	r3, r7, #24
 80011ea:	491d      	ldr	r1, [pc, #116]	@ (8001260 <ShapeDemo+0x258>)
 80011ec:	4618      	mov	r0, r3
 80011ee:	f000 f979 	bl	80014e4 <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 80011f2:	2300      	movs	r3, #0
 80011f4:	f8c7 31c4 	str.w	r3, [r7, #452]	@ 0x1c4
 80011f8:	e026      	b.n	8001248 <ShapeDemo+0x240>
		roll_shape(&shape_array[counter], 2.5);
 80011fa:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 80011fe:	f8d7 21c4 	ldr.w	r2, [r7, #452]	@ 0x1c4
 8001202:	4613      	mov	r3, r2
 8001204:	009b      	lsls	r3, r3, #2
 8001206:	4413      	add	r3, r2
 8001208:	009b      	lsls	r3, r3, #2
 800120a:	440b      	add	r3, r1
 800120c:	4918      	ldr	r1, [pc, #96]	@ (8001270 <ShapeDemo+0x268>)
 800120e:	4618      	mov	r0, r3
 8001210:	f000 f870 	bl	80012f4 <roll_shape>
		shape_string(&shape_array[counter], &string_buffer[0]);
 8001214:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8001218:	f8d7 21c4 	ldr.w	r2, [r7, #452]	@ 0x1c4
 800121c:	4613      	mov	r3, r2
 800121e:	009b      	lsls	r3, r3, #2
 8001220:	4413      	add	r3, r2
 8001222:	009b      	lsls	r3, r3, #2
 8001224:	440b      	add	r3, r1
 8001226:	f107 0218 	add.w	r2, r7, #24
 800122a:	4611      	mov	r1, r2
 800122c:	4618      	mov	r0, r3
 800122e:	f000 f9cb 	bl	80015c8 <shape_string>
		SerialOutputString(&string_buffer[0], &USART1_PORT);
 8001232:	f107 0318 	add.w	r3, r7, #24
 8001236:	490a      	ldr	r1, [pc, #40]	@ (8001260 <ShapeDemo+0x258>)
 8001238:	4618      	mov	r0, r3
 800123a:	f000 f953 	bl	80014e4 <SerialOutputString>
	for (uint32_t counter = 0; counter < NUMBER_OF_SHAPES; counter++) {
 800123e:	f8d7 31c4 	ldr.w	r3, [r7, #452]	@ 0x1c4
 8001242:	3301      	adds	r3, #1
 8001244:	f8c7 31c4 	str.w	r3, [r7, #452]	@ 0x1c4
 8001248:	2310      	movs	r3, #16
 800124a:	461a      	mov	r2, r3
 800124c:	f8d7 31c4 	ldr.w	r3, [r7, #452]	@ 0x1c4
 8001250:	4293      	cmp	r3, r2
 8001252:	d3d2      	bcc.n	80011fa <ShapeDemo+0x1f2>
	}

}
 8001254:	bf00      	nop
 8001256:	bf00      	nop
 8001258:	f507 77e8 	add.w	r7, r7, #464	@ 0x1d0
 800125c:	46bd      	mov	sp, r7
 800125e:	bdb0      	pop	{r4, r5, r7, pc}
 8001260:	20000000 	.word	0x20000000
 8001264:	aaaaaaab 	.word	0xaaaaaaab
 8001268:	08004538 	.word	0x08004538
 800126c:	0800455c 	.word	0x0800455c
 8001270:	40200000 	.word	0x40200000

08001274 <roll_unit_distance>:
const float SHAPE_SPHERE_MULTIPLIER = 5;
const float SHAPE_CUBE_MULTIPLIER = 1.5;
const float SHAPE_CONE_MULTIPLIER = 0.5;


float roll_unit_distance(struct shape *_shape) {
 8001274:	b580      	push	{r7, lr}
 8001276:	b082      	sub	sp, #8
 8001278:	af00      	add	r7, sp, #0
 800127a:	6078      	str	r0, [r7, #4]

  if (_shape->type == SHAPE_SPHERE) {
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	689b      	ldr	r3, [r3, #8]
 8001280:	2b00      	cmp	r3, #0
 8001282:	d10c      	bne.n	800129e <roll_unit_distance+0x2a>
    // calculations show that one unit of push moves the sphere 5 x the diameter
    return SHAPE_SPHERE_MULTIPLIER * (float)(_shape->dimension_1);
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	681b      	ldr	r3, [r3, #0]
 8001288:	4618      	mov	r0, r3
 800128a:	f7ff fdff 	bl	8000e8c <__aeabi_ui2f>
 800128e:	4603      	mov	r3, r0
 8001290:	4a17      	ldr	r2, [pc, #92]	@ (80012f0 <roll_unit_distance+0x7c>)
 8001292:	4611      	mov	r1, r2
 8001294:	4618      	mov	r0, r3
 8001296:	f7fe fffb 	bl	8000290 <__aeabi_fmul>
 800129a:	4603      	mov	r3, r0
 800129c:	e023      	b.n	80012e6 <roll_unit_distance+0x72>
  }
  else if (_shape->type == SHAPE_CUBE) {
 800129e:	687b      	ldr	r3, [r7, #4]
 80012a0:	689b      	ldr	r3, [r3, #8]
 80012a2:	2b01      	cmp	r3, #1
 80012a4:	d10d      	bne.n	80012c2 <roll_unit_distance+0x4e>
    // calculations that one unit of push moves the cube 1.5 x the side length
    return SHAPE_CUBE_MULTIPLIER * (float)(_shape->dimension_1);
 80012a6:	687b      	ldr	r3, [r7, #4]
 80012a8:	681b      	ldr	r3, [r3, #0]
 80012aa:	4618      	mov	r0, r3
 80012ac:	f7ff fdee 	bl	8000e8c <__aeabi_ui2f>
 80012b0:	4603      	mov	r3, r0
 80012b2:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 80012b6:	4611      	mov	r1, r2
 80012b8:	4618      	mov	r0, r3
 80012ba:	f7fe ffe9 	bl	8000290 <__aeabi_fmul>
 80012be:	4603      	mov	r3, r0
 80012c0:	e011      	b.n	80012e6 <roll_unit_distance+0x72>
  }
  else if (_shape->type == SHAPE_CONE) {
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	689b      	ldr	r3, [r3, #8]
 80012c6:	2b02      	cmp	r3, #2
 80012c8:	d10d      	bne.n	80012e6 <roll_unit_distance+0x72>
    // calculations that one unit of push moves the cube 1.5 x the side length
    return SHAPE_CONE_MULTIPLIER * (float)(_shape->dimension_1);
 80012ca:	687b      	ldr	r3, [r7, #4]
 80012cc:	681b      	ldr	r3, [r3, #0]
 80012ce:	4618      	mov	r0, r3
 80012d0:	f7ff fddc 	bl	8000e8c <__aeabi_ui2f>
 80012d4:	4603      	mov	r3, r0
 80012d6:	f04f 527c 	mov.w	r2, #1056964608	@ 0x3f000000
 80012da:	4611      	mov	r1, r2
 80012dc:	4618      	mov	r0, r3
 80012de:	f7fe ffd7 	bl	8000290 <__aeabi_fmul>
 80012e2:	4603      	mov	r3, r0
 80012e4:	e7ff      	b.n	80012e6 <roll_unit_distance+0x72>
  }
}
 80012e6:	4618      	mov	r0, r3
 80012e8:	3708      	adds	r7, #8
 80012ea:	46bd      	mov	sp, r7
 80012ec:	bd80      	pop	{r7, pc}
 80012ee:	bf00      	nop
 80012f0:	40a00000 	.word	0x40a00000

080012f4 <roll_shape>:


void roll_shape(struct shape *_shape, float push_strength) {
 80012f4:	b580      	push	{r7, lr}
 80012f6:	b082      	sub	sp, #8
 80012f8:	af00      	add	r7, sp, #0
 80012fa:	6078      	str	r0, [r7, #4]
 80012fc:	6039      	str	r1, [r7, #0]
  _shape->location += push_strength * roll_unit_distance(_shape);
 80012fe:	6878      	ldr	r0, [r7, #4]
 8001300:	f7ff ffb8 	bl	8001274 <roll_unit_distance>
 8001304:	4603      	mov	r3, r0
 8001306:	6839      	ldr	r1, [r7, #0]
 8001308:	4618      	mov	r0, r3
 800130a:	f7fe ffc1 	bl	8000290 <__aeabi_fmul>
 800130e:	4603      	mov	r3, r0
 8001310:	461a      	mov	r2, r3
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	68db      	ldr	r3, [r3, #12]
 8001316:	4619      	mov	r1, r3
 8001318:	4610      	mov	r0, r2
 800131a:	f7ff fd07 	bl	8000d2c <__addsf3>
 800131e:	4603      	mov	r3, r0
 8001320:	461a      	mov	r2, r3
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	60da      	str	r2, [r3, #12]
}
 8001326:	bf00      	nop
 8001328:	3708      	adds	r7, #8
 800132a:	46bd      	mov	sp, r7
 800132c:	bd80      	pop	{r7, pc}

0800132e <slide_shape>:


void slide_shape(struct shape *_shape, float push_strength) {
 800132e:	b580      	push	{r7, lr}
 8001330:	b082      	sub	sp, #8
 8001332:	af00      	add	r7, sp, #0
 8001334:	6078      	str	r0, [r7, #4]
 8001336:	6039      	str	r1, [r7, #0]
  _shape->location += push_strength;
 8001338:	687b      	ldr	r3, [r7, #4]
 800133a:	68db      	ldr	r3, [r3, #12]
 800133c:	6839      	ldr	r1, [r7, #0]
 800133e:	4618      	mov	r0, r3
 8001340:	f7ff fcf4 	bl	8000d2c <__addsf3>
 8001344:	4603      	mov	r3, r0
 8001346:	461a      	mov	r2, r3
 8001348:	687b      	ldr	r3, [r7, #4]
 800134a:	60da      	str	r2, [r3, #12]
}
 800134c:	bf00      	nop
 800134e:	3708      	adds	r7, #8
 8001350:	46bd      	mov	sp, r7
 8001352:	bd80      	pop	{r7, pc}

08001354 <__NVIC_EnableIRQ>:
{
 8001354:	b480      	push	{r7}
 8001356:	b083      	sub	sp, #12
 8001358:	af00      	add	r7, sp, #0
 800135a:	4603      	mov	r3, r0
 800135c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800135e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001362:	2b00      	cmp	r3, #0
 8001364:	db0b      	blt.n	800137e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001366:	79fb      	ldrb	r3, [r7, #7]
 8001368:	f003 021f 	and.w	r2, r3, #31
 800136c:	4906      	ldr	r1, [pc, #24]	@ (8001388 <__NVIC_EnableIRQ+0x34>)
 800136e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001372:	095b      	lsrs	r3, r3, #5
 8001374:	2001      	movs	r0, #1
 8001376:	fa00 f202 	lsl.w	r2, r0, r2
 800137a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800137e:	bf00      	nop
 8001380:	370c      	adds	r7, #12
 8001382:	46bd      	mov	sp, r7
 8001384:	bc80      	pop	{r7}
 8001386:	4770      	bx	lr
 8001388:	e000e100 	.word	0xe000e100

0800138c <SerialInitialise>:
		};


// InitialiseSerial - Initialise the serial port
// Input: baudRate is from an enumerated set
void SerialInitialise(uint32_t baudRate, SerialPort *serial_port, void (*completion_function)(uint32_t)) {
 800138c:	b580      	push	{r7, lr}
 800138e:	b086      	sub	sp, #24
 8001390:	af00      	add	r7, sp, #0
 8001392:	60f8      	str	r0, [r7, #12]
 8001394:	60b9      	str	r1, [r7, #8]
 8001396:	607a      	str	r2, [r7, #4]

	serial_port->completion_function = completion_function;
 8001398:	68bb      	ldr	r3, [r7, #8]
 800139a:	687a      	ldr	r2, [r7, #4]
 800139c:	625a      	str	r2, [r3, #36]	@ 0x24

	// Enable clocks
	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 800139e:	4b43      	ldr	r3, [pc, #268]	@ (80014ac <SerialInitialise+0x120>)
 80013a0:	69db      	ldr	r3, [r3, #28]
 80013a2:	4a42      	ldr	r2, [pc, #264]	@ (80014ac <SerialInitialise+0x120>)
 80013a4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80013a8:	61d3      	str	r3, [r2, #28]
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 80013aa:	4b40      	ldr	r3, [pc, #256]	@ (80014ac <SerialInitialise+0x120>)
 80013ac:	699b      	ldr	r3, [r3, #24]
 80013ae:	4a3f      	ldr	r2, [pc, #252]	@ (80014ac <SerialInitialise+0x120>)
 80013b0:	f043 0301 	orr.w	r3, r3, #1
 80013b4:	6193      	str	r3, [r2, #24]
	RCC->AHBENR  |= serial_port->MaskAHBENR;      // GPIO
 80013b6:	68bb      	ldr	r3, [r7, #8]
 80013b8:	691a      	ldr	r2, [r3, #16]
 80013ba:	4b3c      	ldr	r3, [pc, #240]	@ (80014ac <SerialInitialise+0x120>)
 80013bc:	695b      	ldr	r3, [r3, #20]
 80013be:	493b      	ldr	r1, [pc, #236]	@ (80014ac <SerialInitialise+0x120>)
 80013c0:	4313      	orrs	r3, r2
 80013c2:	614b      	str	r3, [r1, #20]
	RCC->APB1ENR |= serial_port->MaskAPB1ENR;     // USART on APB1 (if any)
 80013c4:	68bb      	ldr	r3, [r7, #8]
 80013c6:	68da      	ldr	r2, [r3, #12]
 80013c8:	4b38      	ldr	r3, [pc, #224]	@ (80014ac <SerialInitialise+0x120>)
 80013ca:	69db      	ldr	r3, [r3, #28]
 80013cc:	4937      	ldr	r1, [pc, #220]	@ (80014ac <SerialInitialise+0x120>)
 80013ce:	4313      	orrs	r3, r2
 80013d0:	61cb      	str	r3, [r1, #28]
	RCC->APB2ENR |= serial_port->MaskAPB2ENR;     // USART on APB2 (if any)
 80013d2:	68bb      	ldr	r3, [r7, #8]
 80013d4:	689a      	ldr	r2, [r3, #8]
 80013d6:	4b35      	ldr	r3, [pc, #212]	@ (80014ac <SerialInitialise+0x120>)
 80013d8:	699b      	ldr	r3, [r3, #24]
 80013da:	4934      	ldr	r1, [pc, #208]	@ (80014ac <SerialInitialise+0x120>)
 80013dc:	4313      	orrs	r3, r2
 80013de:	618b      	str	r3, [r1, #24]

	// Configure GPIO for TX/RX (assume pins already chosen in SerialPort struct)
	serial_port->GPIO->MODER   |= serial_port->SerialPinModeValue;
 80013e0:	68bb      	ldr	r3, [r7, #8]
 80013e2:	6959      	ldr	r1, [r3, #20]
 80013e4:	68bb      	ldr	r3, [r7, #8]
 80013e6:	685b      	ldr	r3, [r3, #4]
 80013e8:	681a      	ldr	r2, [r3, #0]
 80013ea:	68bb      	ldr	r3, [r7, #8]
 80013ec:	685b      	ldr	r3, [r3, #4]
 80013ee:	430a      	orrs	r2, r1
 80013f0:	601a      	str	r2, [r3, #0]
	serial_port->GPIO->OSPEEDR |= serial_port->SerialPinSpeedValue;
 80013f2:	68bb      	ldr	r3, [r7, #8]
 80013f4:	6999      	ldr	r1, [r3, #24]
 80013f6:	68bb      	ldr	r3, [r7, #8]
 80013f8:	685b      	ldr	r3, [r3, #4]
 80013fa:	689a      	ldr	r2, [r3, #8]
 80013fc:	68bb      	ldr	r3, [r7, #8]
 80013fe:	685b      	ldr	r3, [r3, #4]
 8001400:	430a      	orrs	r2, r1
 8001402:	609a      	str	r2, [r3, #8]
	serial_port->GPIO->AFR[0]  |= serial_port->SerialPinAlternatePinValueLow;
 8001404:	68bb      	ldr	r3, [r7, #8]
 8001406:	69d9      	ldr	r1, [r3, #28]
 8001408:	68bb      	ldr	r3, [r7, #8]
 800140a:	685b      	ldr	r3, [r3, #4]
 800140c:	6a1a      	ldr	r2, [r3, #32]
 800140e:	68bb      	ldr	r3, [r7, #8]
 8001410:	685b      	ldr	r3, [r3, #4]
 8001412:	430a      	orrs	r2, r1
 8001414:	621a      	str	r2, [r3, #32]
	serial_port->GPIO->AFR[1]  |= serial_port->SerialPinAlternatePinValueHigh;
 8001416:	68bb      	ldr	r3, [r7, #8]
 8001418:	6a19      	ldr	r1, [r3, #32]
 800141a:	68bb      	ldr	r3, [r7, #8]
 800141c:	685b      	ldr	r3, [r3, #4]
 800141e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001420:	68bb      	ldr	r3, [r7, #8]
 8001422:	685b      	ldr	r3, [r3, #4]
 8001424:	430a      	orrs	r2, r1
 8001426:	625a      	str	r2, [r3, #36]	@ 0x24

	// Set baud rate (assume PCLK = 8 MHz)
	uint16_t *brr = (uint16_t*)&serial_port->UART->BRR;
 8001428:	68bb      	ldr	r3, [r7, #8]
 800142a:	681b      	ldr	r3, [r3, #0]
 800142c:	330c      	adds	r3, #12
 800142e:	617b      	str	r3, [r7, #20]
	switch (baudRate) {
 8001430:	68fb      	ldr	r3, [r7, #12]
 8001432:	2b04      	cmp	r3, #4
 8001434:	d822      	bhi.n	800147c <SerialInitialise+0xf0>
 8001436:	a201      	add	r2, pc, #4	@ (adr r2, 800143c <SerialInitialise+0xb0>)
 8001438:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800143c:	08001451 	.word	0x08001451
 8001440:	0800145b 	.word	0x0800145b
 8001444:	08001465 	.word	0x08001465
 8001448:	0800146d 	.word	0x0800146d
 800144c:	08001475 	.word	0x08001475
		case BAUD_9600:   *brr = 0x341; break;
 8001450:	697b      	ldr	r3, [r7, #20]
 8001452:	f240 3241 	movw	r2, #833	@ 0x341
 8001456:	801a      	strh	r2, [r3, #0]
 8001458:	e014      	b.n	8001484 <SerialInitialise+0xf8>
		case BAUD_19200:  *brr = 0x1A0; break;
 800145a:	697b      	ldr	r3, [r7, #20]
 800145c:	f44f 72d0 	mov.w	r2, #416	@ 0x1a0
 8001460:	801a      	strh	r2, [r3, #0]
 8001462:	e00f      	b.n	8001484 <SerialInitialise+0xf8>
		case BAUD_38400:  *brr = 0xD0;  break;
 8001464:	697b      	ldr	r3, [r7, #20]
 8001466:	22d0      	movs	r2, #208	@ 0xd0
 8001468:	801a      	strh	r2, [r3, #0]
 800146a:	e00b      	b.n	8001484 <SerialInitialise+0xf8>
		case BAUD_57600:  *brr = 0x8B;  break;
 800146c:	697b      	ldr	r3, [r7, #20]
 800146e:	228b      	movs	r2, #139	@ 0x8b
 8001470:	801a      	strh	r2, [r3, #0]
 8001472:	e007      	b.n	8001484 <SerialInitialise+0xf8>
		case BAUD_115200: *brr = 0x46;  break;
 8001474:	697b      	ldr	r3, [r7, #20]
 8001476:	2246      	movs	r2, #70	@ 0x46
 8001478:	801a      	strh	r2, [r3, #0]
 800147a:	e003      	b.n	8001484 <SerialInitialise+0xf8>
		default:          *brr = 0x46;  break;
 800147c:	697b      	ldr	r3, [r7, #20]
 800147e:	2246      	movs	r2, #70	@ 0x46
 8001480:	801a      	strh	r2, [r3, #0]
 8001482:	bf00      	nop
	}

	// Enable USART: TE, RE, UE, RXNEIE
	serial_port->UART->CR1 |= USART_CR1_TE | USART_CR1_RE | USART_CR1_UE | USART_CR1_RXNEIE;
 8001484:	68bb      	ldr	r3, [r7, #8]
 8001486:	681b      	ldr	r3, [r3, #0]
 8001488:	681a      	ldr	r2, [r3, #0]
 800148a:	68bb      	ldr	r3, [r7, #8]
 800148c:	681b      	ldr	r3, [r3, #0]
 800148e:	f042 022d 	orr.w	r2, r2, #45	@ 0x2d
 8001492:	601a      	str	r2, [r3, #0]

	// Enable NVIC interrupt
	if (serial_port->UART == USART1) {
 8001494:	68bb      	ldr	r3, [r7, #8]
 8001496:	681b      	ldr	r3, [r3, #0]
 8001498:	4a05      	ldr	r2, [pc, #20]	@ (80014b0 <SerialInitialise+0x124>)
 800149a:	4293      	cmp	r3, r2
 800149c:	d102      	bne.n	80014a4 <SerialInitialise+0x118>
		NVIC_EnableIRQ(USART1_IRQn);
 800149e:	2025      	movs	r0, #37	@ 0x25
 80014a0:	f7ff ff58 	bl	8001354 <__NVIC_EnableIRQ>
	}
}
 80014a4:	bf00      	nop
 80014a6:	3718      	adds	r7, #24
 80014a8:	46bd      	mov	sp, r7
 80014aa:	bd80      	pop	{r7, pc}
 80014ac:	40021000 	.word	0x40021000
 80014b0:	40013800 	.word	0x40013800

080014b4 <SerialOutputChar>:



void SerialOutputChar(uint8_t data, SerialPort *serial_port) {
 80014b4:	b480      	push	{r7}
 80014b6:	b083      	sub	sp, #12
 80014b8:	af00      	add	r7, sp, #0
 80014ba:	4603      	mov	r3, r0
 80014bc:	6039      	str	r1, [r7, #0]
 80014be:	71fb      	strb	r3, [r7, #7]

	while((serial_port->UART->ISR & USART_ISR_TXE) == 0){
 80014c0:	bf00      	nop
 80014c2:	683b      	ldr	r3, [r7, #0]
 80014c4:	681b      	ldr	r3, [r3, #0]
 80014c6:	69db      	ldr	r3, [r3, #28]
 80014c8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80014cc:	2b00      	cmp	r3, #0
 80014ce:	d0f8      	beq.n	80014c2 <SerialOutputChar+0xe>
	}

	serial_port->UART->TDR = data;
 80014d0:	683b      	ldr	r3, [r7, #0]
 80014d2:	681b      	ldr	r3, [r3, #0]
 80014d4:	79fa      	ldrb	r2, [r7, #7]
 80014d6:	b292      	uxth	r2, r2
 80014d8:	851a      	strh	r2, [r3, #40]	@ 0x28
}
 80014da:	bf00      	nop
 80014dc:	370c      	adds	r7, #12
 80014de:	46bd      	mov	sp, r7
 80014e0:	bc80      	pop	{r7}
 80014e2:	4770      	bx	lr

080014e4 <SerialOutputString>:



void SerialOutputString(uint8_t *pt, SerialPort *serial_port) {
 80014e4:	b580      	push	{r7, lr}
 80014e6:	b084      	sub	sp, #16
 80014e8:	af00      	add	r7, sp, #0
 80014ea:	6078      	str	r0, [r7, #4]
 80014ec:	6039      	str	r1, [r7, #0]

	uint32_t counter = 0;
 80014ee:	2300      	movs	r3, #0
 80014f0:	60fb      	str	r3, [r7, #12]
	while(*pt) {
 80014f2:	e017      	b.n	8001524 <SerialOutputString+0x40>
		SerialOutputChar(*pt, serial_port);
 80014f4:	687b      	ldr	r3, [r7, #4]
 80014f6:	781b      	ldrb	r3, [r3, #0]
 80014f8:	6839      	ldr	r1, [r7, #0]
 80014fa:	4618      	mov	r0, r3
 80014fc:	f7ff ffda 	bl	80014b4 <SerialOutputChar>

        for (volatile uint32_t d = 0; d < 50000; d++) {
 8001500:	2300      	movs	r3, #0
 8001502:	60bb      	str	r3, [r7, #8]
 8001504:	e003      	b.n	800150e <SerialOutputString+0x2a>
            __asm__("nop");
 8001506:	bf00      	nop
        for (volatile uint32_t d = 0; d < 50000; d++) {
 8001508:	68bb      	ldr	r3, [r7, #8]
 800150a:	3301      	adds	r3, #1
 800150c:	60bb      	str	r3, [r7, #8]
 800150e:	68bb      	ldr	r3, [r7, #8]
 8001510:	f24c 324f 	movw	r2, #49999	@ 0xc34f
 8001514:	4293      	cmp	r3, r2
 8001516:	d9f6      	bls.n	8001506 <SerialOutputString+0x22>
        }

		counter++;
 8001518:	68fb      	ldr	r3, [r7, #12]
 800151a:	3301      	adds	r3, #1
 800151c:	60fb      	str	r3, [r7, #12]
		pt++;
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	3301      	adds	r3, #1
 8001522:	607b      	str	r3, [r7, #4]
	while(*pt) {
 8001524:	687b      	ldr	r3, [r7, #4]
 8001526:	781b      	ldrb	r3, [r3, #0]
 8001528:	2b00      	cmp	r3, #0
 800152a:	d1e3      	bne.n	80014f4 <SerialOutputString+0x10>
	}

	serial_port->completion_function(counter);
 800152c:	683b      	ldr	r3, [r7, #0]
 800152e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001530:	68f8      	ldr	r0, [r7, #12]
 8001532:	4798      	blx	r3
}
 8001534:	bf00      	nop
 8001536:	3710      	adds	r7, #16
 8001538:	46bd      	mov	sp, r7
 800153a:	bd80      	pop	{r7, pc}

0800153c <generate_shape>:
#include "shape.h"

#include <stdio.h>


struct shape generate_shape(uint32_t type, uint32_t dimension_1, uint32_t dimension_2) {
 800153c:	b4b0      	push	{r4, r5, r7}
 800153e:	b08b      	sub	sp, #44	@ 0x2c
 8001540:	af00      	add	r7, sp, #0
 8001542:	60f8      	str	r0, [r7, #12]
 8001544:	60b9      	str	r1, [r7, #8]
 8001546:	607a      	str	r2, [r7, #4]
 8001548:	603b      	str	r3, [r7, #0]

  struct shape new_shape;

  new_shape.type = type;
 800154a:	68bb      	ldr	r3, [r7, #8]
 800154c:	61fb      	str	r3, [r7, #28]
  new_shape.dimension_1 = dimension_1;
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	617b      	str	r3, [r7, #20]
  new_shape.dimension_2 = dimension_2;
 8001552:	683b      	ldr	r3, [r7, #0]
 8001554:	61bb      	str	r3, [r7, #24]
  new_shape.location = 0.;
 8001556:	f04f 0300 	mov.w	r3, #0
 800155a:	623b      	str	r3, [r7, #32]
  new_shape.is_initialised = true;
 800155c:	2301      	movs	r3, #1
 800155e:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24

  return new_shape;
 8001562:	68fb      	ldr	r3, [r7, #12]
 8001564:	461d      	mov	r5, r3
 8001566:	f107 0414 	add.w	r4, r7, #20
 800156a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800156c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800156e:	6823      	ldr	r3, [r4, #0]
 8001570:	602b      	str	r3, [r5, #0]
}
 8001572:	68f8      	ldr	r0, [r7, #12]
 8001574:	372c      	adds	r7, #44	@ 0x2c
 8001576:	46bd      	mov	sp, r7
 8001578:	bcb0      	pop	{r4, r5, r7}
 800157a:	4770      	bx	lr

0800157c <initialise_shape>:


// returns true for success, false for failure
int initialise_shape(struct shape *_shape, uint32_t type, uint32_t dimension_1, uint32_t dimension_2) {
 800157c:	b480      	push	{r7}
 800157e:	b085      	sub	sp, #20
 8001580:	af00      	add	r7, sp, #0
 8001582:	60f8      	str	r0, [r7, #12]
 8001584:	60b9      	str	r1, [r7, #8]
 8001586:	607a      	str	r2, [r7, #4]
 8001588:	603b      	str	r3, [r7, #0]

  if (dimension_1 <= 0 || dimension_2 <= 0)
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	2b00      	cmp	r3, #0
 800158e:	d002      	beq.n	8001596 <initialise_shape+0x1a>
 8001590:	683b      	ldr	r3, [r7, #0]
 8001592:	2b00      	cmp	r3, #0
 8001594:	d101      	bne.n	800159a <initialise_shape+0x1e>
    return false;
 8001596:	2300      	movs	r3, #0
 8001598:	e010      	b.n	80015bc <initialise_shape+0x40>

  _shape->type = type;
 800159a:	68fb      	ldr	r3, [r7, #12]
 800159c:	68ba      	ldr	r2, [r7, #8]
 800159e:	609a      	str	r2, [r3, #8]
  _shape->dimension_1 = dimension_1;
 80015a0:	68fb      	ldr	r3, [r7, #12]
 80015a2:	687a      	ldr	r2, [r7, #4]
 80015a4:	601a      	str	r2, [r3, #0]
  _shape->dimension_2 = dimension_2;
 80015a6:	68fb      	ldr	r3, [r7, #12]
 80015a8:	683a      	ldr	r2, [r7, #0]
 80015aa:	605a      	str	r2, [r3, #4]
  _shape->location = 0.;
 80015ac:	68fb      	ldr	r3, [r7, #12]
 80015ae:	f04f 0200 	mov.w	r2, #0
 80015b2:	60da      	str	r2, [r3, #12]
  _shape->is_initialised = true;
 80015b4:	68fb      	ldr	r3, [r7, #12]
 80015b6:	2201      	movs	r2, #1
 80015b8:	741a      	strb	r2, [r3, #16]

  return true;
 80015ba:	2301      	movs	r3, #1
}
 80015bc:	4618      	mov	r0, r3
 80015be:	3714      	adds	r7, #20
 80015c0:	46bd      	mov	sp, r7
 80015c2:	bc80      	pop	{r7}
 80015c4:	4770      	bx	lr
	...

080015c8 <shape_string>:


void shape_string(struct shape *_shape, uint8_t *string) {
 80015c8:	b5b0      	push	{r4, r5, r7, lr}
 80015ca:	b084      	sub	sp, #16
 80015cc:	af02      	add	r7, sp, #8
 80015ce:	6078      	str	r0, [r7, #4]
 80015d0:	6039      	str	r1, [r7, #0]
  
  switch(_shape->type) {
 80015d2:	687b      	ldr	r3, [r7, #4]
 80015d4:	689b      	ldr	r3, [r3, #8]
 80015d6:	2b02      	cmp	r3, #2
 80015d8:	d017      	beq.n	800160a <shape_string+0x42>
 80015da:	2b02      	cmp	r3, #2
 80015dc:	d83a      	bhi.n	8001654 <shape_string+0x8c>
 80015de:	2b00      	cmp	r3, #0
 80015e0:	d002      	beq.n	80015e8 <shape_string+0x20>
 80015e2:	2b01      	cmp	r3, #1
 80015e4:	d025      	beq.n	8001632 <shape_string+0x6a>
 80015e6:	e035      	b.n	8001654 <shape_string+0x8c>
    case SHAPE_SPHERE:
      sprintf((int8_t*)string, "Shape is a SPHERE, radius is %lu, location is %.2f \r\n", _shape->dimension_1, _shape->location);
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	681c      	ldr	r4, [r3, #0]
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	68db      	ldr	r3, [r3, #12]
 80015f0:	4618      	mov	r0, r3
 80015f2:	f7ff f865 	bl	80006c0 <__aeabi_f2d>
 80015f6:	4602      	mov	r2, r0
 80015f8:	460b      	mov	r3, r1
 80015fa:	e9cd 2300 	strd	r2, r3, [sp]
 80015fe:	4622      	mov	r2, r4
 8001600:	491f      	ldr	r1, [pc, #124]	@ (8001680 <shape_string+0xb8>)
 8001602:	6838      	ldr	r0, [r7, #0]
 8001604:	f000 fe3e 	bl	8002284 <siprintf>
      break;
 8001608:	e035      	b.n	8001676 <shape_string+0xae>
    case SHAPE_CONE:
      sprintf((int8_t*)string, "Shape is a CONE, radius is %lu, height is %lu, location is %.2f \r\n", _shape->dimension_1, _shape->dimension_2, _shape->location);
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	681c      	ldr	r4, [r3, #0]
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	685d      	ldr	r5, [r3, #4]
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	68db      	ldr	r3, [r3, #12]
 8001616:	4618      	mov	r0, r3
 8001618:	f7ff f852 	bl	80006c0 <__aeabi_f2d>
 800161c:	4602      	mov	r2, r0
 800161e:	460b      	mov	r3, r1
 8001620:	e9cd 2300 	strd	r2, r3, [sp]
 8001624:	462b      	mov	r3, r5
 8001626:	4622      	mov	r2, r4
 8001628:	4916      	ldr	r1, [pc, #88]	@ (8001684 <shape_string+0xbc>)
 800162a:	6838      	ldr	r0, [r7, #0]
 800162c:	f000 fe2a 	bl	8002284 <siprintf>
      break;
 8001630:	e021      	b.n	8001676 <shape_string+0xae>
    case SHAPE_CUBE:
      sprintf((int8_t*)string, "Shape is a CUBE, side length is %lu, location is %.2f \r\n", _shape->dimension_1, _shape->location);
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	681c      	ldr	r4, [r3, #0]
 8001636:	687b      	ldr	r3, [r7, #4]
 8001638:	68db      	ldr	r3, [r3, #12]
 800163a:	4618      	mov	r0, r3
 800163c:	f7ff f840 	bl	80006c0 <__aeabi_f2d>
 8001640:	4602      	mov	r2, r0
 8001642:	460b      	mov	r3, r1
 8001644:	e9cd 2300 	strd	r2, r3, [sp]
 8001648:	4622      	mov	r2, r4
 800164a:	490f      	ldr	r1, [pc, #60]	@ (8001688 <shape_string+0xc0>)
 800164c:	6838      	ldr	r0, [r7, #0]
 800164e:	f000 fe19 	bl	8002284 <siprintf>
      break;
 8001652:	e010      	b.n	8001676 <shape_string+0xae>
    default:
      sprintf((int8_t*)string, "Shape is a UNKNOWN, type is %lu, location is %.2f \r\n", _shape->type, _shape->location);
 8001654:	687b      	ldr	r3, [r7, #4]
 8001656:	689c      	ldr	r4, [r3, #8]
 8001658:	687b      	ldr	r3, [r7, #4]
 800165a:	68db      	ldr	r3, [r3, #12]
 800165c:	4618      	mov	r0, r3
 800165e:	f7ff f82f 	bl	80006c0 <__aeabi_f2d>
 8001662:	4602      	mov	r2, r0
 8001664:	460b      	mov	r3, r1
 8001666:	e9cd 2300 	strd	r2, r3, [sp]
 800166a:	4622      	mov	r2, r4
 800166c:	4907      	ldr	r1, [pc, #28]	@ (800168c <shape_string+0xc4>)
 800166e:	6838      	ldr	r0, [r7, #0]
 8001670:	f000 fe08 	bl	8002284 <siprintf>
      break;
 8001674:	bf00      	nop
    
  }
}
 8001676:	bf00      	nop
 8001678:	3708      	adds	r7, #8
 800167a:	46bd      	mov	sp, r7
 800167c:	bdb0      	pop	{r4, r5, r7, pc}
 800167e:	bf00      	nop
 8001680:	08004580 	.word	0x08004580
 8001684:	080045b8 	.word	0x080045b8
 8001688:	080045fc 	.word	0x080045fc
 800168c:	08004638 	.word	0x08004638

08001690 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001690:	b480      	push	{r7}
 8001692:	af00      	add	r7, sp, #0
	return 1;
 8001694:	2301      	movs	r3, #1
}
 8001696:	4618      	mov	r0, r3
 8001698:	46bd      	mov	sp, r7
 800169a:	bc80      	pop	{r7}
 800169c:	4770      	bx	lr

0800169e <_kill>:

int _kill(int pid, int sig)
{
 800169e:	b580      	push	{r7, lr}
 80016a0:	b082      	sub	sp, #8
 80016a2:	af00      	add	r7, sp, #0
 80016a4:	6078      	str	r0, [r7, #4]
 80016a6:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80016a8:	f000 feea 	bl	8002480 <__errno>
 80016ac:	4603      	mov	r3, r0
 80016ae:	2216      	movs	r2, #22
 80016b0:	601a      	str	r2, [r3, #0]
	return -1;
 80016b2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80016b6:	4618      	mov	r0, r3
 80016b8:	3708      	adds	r7, #8
 80016ba:	46bd      	mov	sp, r7
 80016bc:	bd80      	pop	{r7, pc}

080016be <_exit>:

void _exit (int status)
{
 80016be:	b580      	push	{r7, lr}
 80016c0:	b082      	sub	sp, #8
 80016c2:	af00      	add	r7, sp, #0
 80016c4:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80016c6:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80016ca:	6878      	ldr	r0, [r7, #4]
 80016cc:	f7ff ffe7 	bl	800169e <_kill>
	while (1) {}		/* Make sure we hang here */
 80016d0:	bf00      	nop
 80016d2:	e7fd      	b.n	80016d0 <_exit+0x12>

080016d4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80016d4:	b580      	push	{r7, lr}
 80016d6:	b086      	sub	sp, #24
 80016d8:	af00      	add	r7, sp, #0
 80016da:	60f8      	str	r0, [r7, #12]
 80016dc:	60b9      	str	r1, [r7, #8]
 80016de:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016e0:	2300      	movs	r3, #0
 80016e2:	617b      	str	r3, [r7, #20]
 80016e4:	e00a      	b.n	80016fc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80016e6:	f3af 8000 	nop.w
 80016ea:	4601      	mov	r1, r0
 80016ec:	68bb      	ldr	r3, [r7, #8]
 80016ee:	1c5a      	adds	r2, r3, #1
 80016f0:	60ba      	str	r2, [r7, #8]
 80016f2:	b2ca      	uxtb	r2, r1
 80016f4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016f6:	697b      	ldr	r3, [r7, #20]
 80016f8:	3301      	adds	r3, #1
 80016fa:	617b      	str	r3, [r7, #20]
 80016fc:	697a      	ldr	r2, [r7, #20]
 80016fe:	687b      	ldr	r3, [r7, #4]
 8001700:	429a      	cmp	r2, r3
 8001702:	dbf0      	blt.n	80016e6 <_read+0x12>
	}

return len;
 8001704:	687b      	ldr	r3, [r7, #4]
}
 8001706:	4618      	mov	r0, r3
 8001708:	3718      	adds	r7, #24
 800170a:	46bd      	mov	sp, r7
 800170c:	bd80      	pop	{r7, pc}

0800170e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800170e:	b580      	push	{r7, lr}
 8001710:	b086      	sub	sp, #24
 8001712:	af00      	add	r7, sp, #0
 8001714:	60f8      	str	r0, [r7, #12]
 8001716:	60b9      	str	r1, [r7, #8]
 8001718:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800171a:	2300      	movs	r3, #0
 800171c:	617b      	str	r3, [r7, #20]
 800171e:	e009      	b.n	8001734 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8001720:	68bb      	ldr	r3, [r7, #8]
 8001722:	1c5a      	adds	r2, r3, #1
 8001724:	60ba      	str	r2, [r7, #8]
 8001726:	781b      	ldrb	r3, [r3, #0]
 8001728:	4618      	mov	r0, r3
 800172a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800172e:	697b      	ldr	r3, [r7, #20]
 8001730:	3301      	adds	r3, #1
 8001732:	617b      	str	r3, [r7, #20]
 8001734:	697a      	ldr	r2, [r7, #20]
 8001736:	687b      	ldr	r3, [r7, #4]
 8001738:	429a      	cmp	r2, r3
 800173a:	dbf1      	blt.n	8001720 <_write+0x12>
	}
	return len;
 800173c:	687b      	ldr	r3, [r7, #4]
}
 800173e:	4618      	mov	r0, r3
 8001740:	3718      	adds	r7, #24
 8001742:	46bd      	mov	sp, r7
 8001744:	bd80      	pop	{r7, pc}

08001746 <_close>:

int _close(int file)
{
 8001746:	b480      	push	{r7}
 8001748:	b083      	sub	sp, #12
 800174a:	af00      	add	r7, sp, #0
 800174c:	6078      	str	r0, [r7, #4]
	return -1;
 800174e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8001752:	4618      	mov	r0, r3
 8001754:	370c      	adds	r7, #12
 8001756:	46bd      	mov	sp, r7
 8001758:	bc80      	pop	{r7}
 800175a:	4770      	bx	lr

0800175c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800175c:	b480      	push	{r7}
 800175e:	b083      	sub	sp, #12
 8001760:	af00      	add	r7, sp, #0
 8001762:	6078      	str	r0, [r7, #4]
 8001764:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001766:	683b      	ldr	r3, [r7, #0]
 8001768:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800176c:	605a      	str	r2, [r3, #4]
	return 0;
 800176e:	2300      	movs	r3, #0
}
 8001770:	4618      	mov	r0, r3
 8001772:	370c      	adds	r7, #12
 8001774:	46bd      	mov	sp, r7
 8001776:	bc80      	pop	{r7}
 8001778:	4770      	bx	lr

0800177a <_isatty>:

int _isatty(int file)
{
 800177a:	b480      	push	{r7}
 800177c:	b083      	sub	sp, #12
 800177e:	af00      	add	r7, sp, #0
 8001780:	6078      	str	r0, [r7, #4]
	return 1;
 8001782:	2301      	movs	r3, #1
}
 8001784:	4618      	mov	r0, r3
 8001786:	370c      	adds	r7, #12
 8001788:	46bd      	mov	sp, r7
 800178a:	bc80      	pop	{r7}
 800178c:	4770      	bx	lr

0800178e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800178e:	b480      	push	{r7}
 8001790:	b085      	sub	sp, #20
 8001792:	af00      	add	r7, sp, #0
 8001794:	60f8      	str	r0, [r7, #12]
 8001796:	60b9      	str	r1, [r7, #8]
 8001798:	607a      	str	r2, [r7, #4]
	return 0;
 800179a:	2300      	movs	r3, #0
}
 800179c:	4618      	mov	r0, r3
 800179e:	3714      	adds	r7, #20
 80017a0:	46bd      	mov	sp, r7
 80017a2:	bc80      	pop	{r7}
 80017a4:	4770      	bx	lr
	...

080017a8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80017a8:	b580      	push	{r7, lr}
 80017aa:	b086      	sub	sp, #24
 80017ac:	af00      	add	r7, sp, #0
 80017ae:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80017b0:	4a14      	ldr	r2, [pc, #80]	@ (8001804 <_sbrk+0x5c>)
 80017b2:	4b15      	ldr	r3, [pc, #84]	@ (8001808 <_sbrk+0x60>)
 80017b4:	1ad3      	subs	r3, r2, r3
 80017b6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80017b8:	697b      	ldr	r3, [r7, #20]
 80017ba:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80017bc:	4b13      	ldr	r3, [pc, #76]	@ (800180c <_sbrk+0x64>)
 80017be:	681b      	ldr	r3, [r3, #0]
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	d102      	bne.n	80017ca <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80017c4:	4b11      	ldr	r3, [pc, #68]	@ (800180c <_sbrk+0x64>)
 80017c6:	4a12      	ldr	r2, [pc, #72]	@ (8001810 <_sbrk+0x68>)
 80017c8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80017ca:	4b10      	ldr	r3, [pc, #64]	@ (800180c <_sbrk+0x64>)
 80017cc:	681a      	ldr	r2, [r3, #0]
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	4413      	add	r3, r2
 80017d2:	693a      	ldr	r2, [r7, #16]
 80017d4:	429a      	cmp	r2, r3
 80017d6:	d207      	bcs.n	80017e8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80017d8:	f000 fe52 	bl	8002480 <__errno>
 80017dc:	4603      	mov	r3, r0
 80017de:	220c      	movs	r2, #12
 80017e0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80017e2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80017e6:	e009      	b.n	80017fc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80017e8:	4b08      	ldr	r3, [pc, #32]	@ (800180c <_sbrk+0x64>)
 80017ea:	681b      	ldr	r3, [r3, #0]
 80017ec:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80017ee:	4b07      	ldr	r3, [pc, #28]	@ (800180c <_sbrk+0x64>)
 80017f0:	681a      	ldr	r2, [r3, #0]
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	4413      	add	r3, r2
 80017f6:	4a05      	ldr	r2, [pc, #20]	@ (800180c <_sbrk+0x64>)
 80017f8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80017fa:	68fb      	ldr	r3, [r7, #12]
}
 80017fc:	4618      	mov	r0, r3
 80017fe:	3718      	adds	r7, #24
 8001800:	46bd      	mov	sp, r7
 8001802:	bd80      	pop	{r7, pc}
 8001804:	2000a000 	.word	0x2000a000
 8001808:	00000400 	.word	0x00000400
 800180c:	20000210 	.word	0x20000210
 8001810:	20000360 	.word	0x20000360

08001814 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001814:	480d      	ldr	r0, [pc, #52]	@ (800184c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001816:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001818:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800181c:	480c      	ldr	r0, [pc, #48]	@ (8001850 <LoopForever+0x6>)
  ldr r1, =_edata
 800181e:	490d      	ldr	r1, [pc, #52]	@ (8001854 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001820:	4a0d      	ldr	r2, [pc, #52]	@ (8001858 <LoopForever+0xe>)
  movs r3, #0
 8001822:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001824:	e002      	b.n	800182c <LoopCopyDataInit>

08001826 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001826:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001828:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800182a:	3304      	adds	r3, #4

0800182c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800182c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800182e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001830:	d3f9      	bcc.n	8001826 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001832:	4a0a      	ldr	r2, [pc, #40]	@ (800185c <LoopForever+0x12>)
  ldr r4, =_ebss
 8001834:	4c0a      	ldr	r4, [pc, #40]	@ (8001860 <LoopForever+0x16>)
  movs r3, #0
 8001836:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001838:	e001      	b.n	800183e <LoopFillZerobss>

0800183a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800183a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800183c:	3204      	adds	r2, #4

0800183e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800183e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001840:	d3fb      	bcc.n	800183a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001842:	f000 fe23 	bl	800248c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001846:	f7ff fbad 	bl	8000fa4 <main>

0800184a <LoopForever>:

LoopForever:
    b LoopForever
 800184a:	e7fe      	b.n	800184a <LoopForever>
  ldr   r0, =_estack
 800184c:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 8001850:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001854:	200001f0 	.word	0x200001f0
  ldr r2, =_sidata
 8001858:	080049f0 	.word	0x080049f0
  ldr r2, =_sbss
 800185c:	200001f0 	.word	0x200001f0
  ldr r4, =_ebss
 8001860:	20000360 	.word	0x20000360

08001864 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001864:	e7fe      	b.n	8001864 <ADC1_2_IRQHandler>

08001866 <__cvt>:
 8001866:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800186a:	b088      	sub	sp, #32
 800186c:	2b00      	cmp	r3, #0
 800186e:	461d      	mov	r5, r3
 8001870:	4614      	mov	r4, r2
 8001872:	bfbc      	itt	lt
 8001874:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8001878:	4614      	movlt	r4, r2
 800187a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800187c:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 800187e:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8001882:	bfb6      	itet	lt
 8001884:	461d      	movlt	r5, r3
 8001886:	2300      	movge	r3, #0
 8001888:	232d      	movlt	r3, #45	@ 0x2d
 800188a:	7013      	strb	r3, [r2, #0]
 800188c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800188e:	f023 0820 	bic.w	r8, r3, #32
 8001892:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001896:	d005      	beq.n	80018a4 <__cvt+0x3e>
 8001898:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800189c:	d100      	bne.n	80018a0 <__cvt+0x3a>
 800189e:	3601      	adds	r6, #1
 80018a0:	2302      	movs	r3, #2
 80018a2:	e000      	b.n	80018a6 <__cvt+0x40>
 80018a4:	2303      	movs	r3, #3
 80018a6:	aa07      	add	r2, sp, #28
 80018a8:	9204      	str	r2, [sp, #16]
 80018aa:	aa06      	add	r2, sp, #24
 80018ac:	e9cd a202 	strd	sl, r2, [sp, #8]
 80018b0:	e9cd 3600 	strd	r3, r6, [sp]
 80018b4:	4622      	mov	r2, r4
 80018b6:	462b      	mov	r3, r5
 80018b8:	f000 fe9a 	bl	80025f0 <_dtoa_r>
 80018bc:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80018c0:	4607      	mov	r7, r0
 80018c2:	d119      	bne.n	80018f8 <__cvt+0x92>
 80018c4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80018c6:	07db      	lsls	r3, r3, #31
 80018c8:	d50e      	bpl.n	80018e8 <__cvt+0x82>
 80018ca:	eb00 0906 	add.w	r9, r0, r6
 80018ce:	2200      	movs	r2, #0
 80018d0:	2300      	movs	r3, #0
 80018d2:	4620      	mov	r0, r4
 80018d4:	4629      	mov	r1, r5
 80018d6:	f7ff f9b3 	bl	8000c40 <__aeabi_dcmpeq>
 80018da:	b108      	cbz	r0, 80018e0 <__cvt+0x7a>
 80018dc:	f8cd 901c 	str.w	r9, [sp, #28]
 80018e0:	2230      	movs	r2, #48	@ 0x30
 80018e2:	9b07      	ldr	r3, [sp, #28]
 80018e4:	454b      	cmp	r3, r9
 80018e6:	d31e      	bcc.n	8001926 <__cvt+0xc0>
 80018e8:	9b07      	ldr	r3, [sp, #28]
 80018ea:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80018ec:	1bdb      	subs	r3, r3, r7
 80018ee:	4638      	mov	r0, r7
 80018f0:	6013      	str	r3, [r2, #0]
 80018f2:	b008      	add	sp, #32
 80018f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80018f8:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80018fc:	eb00 0906 	add.w	r9, r0, r6
 8001900:	d1e5      	bne.n	80018ce <__cvt+0x68>
 8001902:	7803      	ldrb	r3, [r0, #0]
 8001904:	2b30      	cmp	r3, #48	@ 0x30
 8001906:	d10a      	bne.n	800191e <__cvt+0xb8>
 8001908:	2200      	movs	r2, #0
 800190a:	2300      	movs	r3, #0
 800190c:	4620      	mov	r0, r4
 800190e:	4629      	mov	r1, r5
 8001910:	f7ff f996 	bl	8000c40 <__aeabi_dcmpeq>
 8001914:	b918      	cbnz	r0, 800191e <__cvt+0xb8>
 8001916:	f1c6 0601 	rsb	r6, r6, #1
 800191a:	f8ca 6000 	str.w	r6, [sl]
 800191e:	f8da 3000 	ldr.w	r3, [sl]
 8001922:	4499      	add	r9, r3
 8001924:	e7d3      	b.n	80018ce <__cvt+0x68>
 8001926:	1c59      	adds	r1, r3, #1
 8001928:	9107      	str	r1, [sp, #28]
 800192a:	701a      	strb	r2, [r3, #0]
 800192c:	e7d9      	b.n	80018e2 <__cvt+0x7c>

0800192e <__exponent>:
 800192e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001930:	2900      	cmp	r1, #0
 8001932:	bfba      	itte	lt
 8001934:	4249      	neglt	r1, r1
 8001936:	232d      	movlt	r3, #45	@ 0x2d
 8001938:	232b      	movge	r3, #43	@ 0x2b
 800193a:	2909      	cmp	r1, #9
 800193c:	7002      	strb	r2, [r0, #0]
 800193e:	7043      	strb	r3, [r0, #1]
 8001940:	dd29      	ble.n	8001996 <__exponent+0x68>
 8001942:	f10d 0307 	add.w	r3, sp, #7
 8001946:	461d      	mov	r5, r3
 8001948:	270a      	movs	r7, #10
 800194a:	461a      	mov	r2, r3
 800194c:	fbb1 f6f7 	udiv	r6, r1, r7
 8001950:	fb07 1416 	mls	r4, r7, r6, r1
 8001954:	3430      	adds	r4, #48	@ 0x30
 8001956:	f802 4c01 	strb.w	r4, [r2, #-1]
 800195a:	460c      	mov	r4, r1
 800195c:	2c63      	cmp	r4, #99	@ 0x63
 800195e:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8001962:	4631      	mov	r1, r6
 8001964:	dcf1      	bgt.n	800194a <__exponent+0x1c>
 8001966:	3130      	adds	r1, #48	@ 0x30
 8001968:	1e94      	subs	r4, r2, #2
 800196a:	f803 1c01 	strb.w	r1, [r3, #-1]
 800196e:	1c41      	adds	r1, r0, #1
 8001970:	4623      	mov	r3, r4
 8001972:	42ab      	cmp	r3, r5
 8001974:	d30a      	bcc.n	800198c <__exponent+0x5e>
 8001976:	f10d 0309 	add.w	r3, sp, #9
 800197a:	1a9b      	subs	r3, r3, r2
 800197c:	42ac      	cmp	r4, r5
 800197e:	bf88      	it	hi
 8001980:	2300      	movhi	r3, #0
 8001982:	3302      	adds	r3, #2
 8001984:	4403      	add	r3, r0
 8001986:	1a18      	subs	r0, r3, r0
 8001988:	b003      	add	sp, #12
 800198a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800198c:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001990:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001994:	e7ed      	b.n	8001972 <__exponent+0x44>
 8001996:	2330      	movs	r3, #48	@ 0x30
 8001998:	3130      	adds	r1, #48	@ 0x30
 800199a:	7083      	strb	r3, [r0, #2]
 800199c:	70c1      	strb	r1, [r0, #3]
 800199e:	1d03      	adds	r3, r0, #4
 80019a0:	e7f1      	b.n	8001986 <__exponent+0x58>
	...

080019a4 <_printf_float>:
 80019a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80019a8:	b091      	sub	sp, #68	@ 0x44
 80019aa:	460c      	mov	r4, r1
 80019ac:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 80019b0:	4616      	mov	r6, r2
 80019b2:	461f      	mov	r7, r3
 80019b4:	4605      	mov	r5, r0
 80019b6:	f000 fd4f 	bl	8002458 <_localeconv_r>
 80019ba:	6803      	ldr	r3, [r0, #0]
 80019bc:	9308      	str	r3, [sp, #32]
 80019be:	4618      	mov	r0, r3
 80019c0:	f7fe fc5e 	bl	8000280 <strlen>
 80019c4:	2300      	movs	r3, #0
 80019c6:	930e      	str	r3, [sp, #56]	@ 0x38
 80019c8:	f8d8 3000 	ldr.w	r3, [r8]
 80019cc:	9009      	str	r0, [sp, #36]	@ 0x24
 80019ce:	3307      	adds	r3, #7
 80019d0:	f023 0307 	bic.w	r3, r3, #7
 80019d4:	f103 0208 	add.w	r2, r3, #8
 80019d8:	f894 a018 	ldrb.w	sl, [r4, #24]
 80019dc:	f8d4 b000 	ldr.w	fp, [r4]
 80019e0:	f8c8 2000 	str.w	r2, [r8]
 80019e4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80019e8:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80019ec:	930b      	str	r3, [sp, #44]	@ 0x2c
 80019ee:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 80019f2:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80019f6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80019fa:	4b9d      	ldr	r3, [pc, #628]	@ (8001c70 <_printf_float+0x2cc>)
 80019fc:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001a00:	f7ff f950 	bl	8000ca4 <__aeabi_dcmpun>
 8001a04:	bb70      	cbnz	r0, 8001a64 <_printf_float+0xc0>
 8001a06:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001a0a:	4b99      	ldr	r3, [pc, #612]	@ (8001c70 <_printf_float+0x2cc>)
 8001a0c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001a10:	f7ff f92a 	bl	8000c68 <__aeabi_dcmple>
 8001a14:	bb30      	cbnz	r0, 8001a64 <_printf_float+0xc0>
 8001a16:	2200      	movs	r2, #0
 8001a18:	2300      	movs	r3, #0
 8001a1a:	4640      	mov	r0, r8
 8001a1c:	4649      	mov	r1, r9
 8001a1e:	f7ff f919 	bl	8000c54 <__aeabi_dcmplt>
 8001a22:	b110      	cbz	r0, 8001a2a <_printf_float+0x86>
 8001a24:	232d      	movs	r3, #45	@ 0x2d
 8001a26:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001a2a:	4a92      	ldr	r2, [pc, #584]	@ (8001c74 <_printf_float+0x2d0>)
 8001a2c:	4b92      	ldr	r3, [pc, #584]	@ (8001c78 <_printf_float+0x2d4>)
 8001a2e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001a32:	bf94      	ite	ls
 8001a34:	4690      	movls	r8, r2
 8001a36:	4698      	movhi	r8, r3
 8001a38:	2303      	movs	r3, #3
 8001a3a:	6123      	str	r3, [r4, #16]
 8001a3c:	f02b 0304 	bic.w	r3, fp, #4
 8001a40:	6023      	str	r3, [r4, #0]
 8001a42:	f04f 0900 	mov.w	r9, #0
 8001a46:	9700      	str	r7, [sp, #0]
 8001a48:	4633      	mov	r3, r6
 8001a4a:	aa0f      	add	r2, sp, #60	@ 0x3c
 8001a4c:	4621      	mov	r1, r4
 8001a4e:	4628      	mov	r0, r5
 8001a50:	f000 fa7e 	bl	8001f50 <_printf_common>
 8001a54:	3001      	adds	r0, #1
 8001a56:	f040 808f 	bne.w	8001b78 <_printf_float+0x1d4>
 8001a5a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001a5e:	b011      	add	sp, #68	@ 0x44
 8001a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001a64:	4642      	mov	r2, r8
 8001a66:	464b      	mov	r3, r9
 8001a68:	4640      	mov	r0, r8
 8001a6a:	4649      	mov	r1, r9
 8001a6c:	f7ff f91a 	bl	8000ca4 <__aeabi_dcmpun>
 8001a70:	b140      	cbz	r0, 8001a84 <_printf_float+0xe0>
 8001a72:	464b      	mov	r3, r9
 8001a74:	2b00      	cmp	r3, #0
 8001a76:	bfbc      	itt	lt
 8001a78:	232d      	movlt	r3, #45	@ 0x2d
 8001a7a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001a7e:	4a7f      	ldr	r2, [pc, #508]	@ (8001c7c <_printf_float+0x2d8>)
 8001a80:	4b7f      	ldr	r3, [pc, #508]	@ (8001c80 <_printf_float+0x2dc>)
 8001a82:	e7d4      	b.n	8001a2e <_printf_float+0x8a>
 8001a84:	6863      	ldr	r3, [r4, #4]
 8001a86:	1c5a      	adds	r2, r3, #1
 8001a88:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8001a8c:	d13f      	bne.n	8001b0e <_printf_float+0x16a>
 8001a8e:	2306      	movs	r3, #6
 8001a90:	6063      	str	r3, [r4, #4]
 8001a92:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8001a96:	2200      	movs	r2, #0
 8001a98:	6023      	str	r3, [r4, #0]
 8001a9a:	9206      	str	r2, [sp, #24]
 8001a9c:	aa0e      	add	r2, sp, #56	@ 0x38
 8001a9e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8001aa2:	aa0d      	add	r2, sp, #52	@ 0x34
 8001aa4:	9203      	str	r2, [sp, #12]
 8001aa6:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8001aaa:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001aae:	6863      	ldr	r3, [r4, #4]
 8001ab0:	9300      	str	r3, [sp, #0]
 8001ab2:	4642      	mov	r2, r8
 8001ab4:	464b      	mov	r3, r9
 8001ab6:	4628      	mov	r0, r5
 8001ab8:	910a      	str	r1, [sp, #40]	@ 0x28
 8001aba:	f7ff fed4 	bl	8001866 <__cvt>
 8001abe:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8001ac0:	2947      	cmp	r1, #71	@ 0x47
 8001ac2:	4680      	mov	r8, r0
 8001ac4:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8001ac6:	d128      	bne.n	8001b1a <_printf_float+0x176>
 8001ac8:	1cc8      	adds	r0, r1, #3
 8001aca:	db02      	blt.n	8001ad2 <_printf_float+0x12e>
 8001acc:	6863      	ldr	r3, [r4, #4]
 8001ace:	4299      	cmp	r1, r3
 8001ad0:	dd40      	ble.n	8001b54 <_printf_float+0x1b0>
 8001ad2:	f1aa 0a02 	sub.w	sl, sl, #2
 8001ad6:	fa5f fa8a 	uxtb.w	sl, sl
 8001ada:	3901      	subs	r1, #1
 8001adc:	4652      	mov	r2, sl
 8001ade:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001ae2:	910d      	str	r1, [sp, #52]	@ 0x34
 8001ae4:	f7ff ff23 	bl	800192e <__exponent>
 8001ae8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001aea:	1813      	adds	r3, r2, r0
 8001aec:	2a01      	cmp	r2, #1
 8001aee:	4681      	mov	r9, r0
 8001af0:	6123      	str	r3, [r4, #16]
 8001af2:	dc02      	bgt.n	8001afa <_printf_float+0x156>
 8001af4:	6822      	ldr	r2, [r4, #0]
 8001af6:	07d2      	lsls	r2, r2, #31
 8001af8:	d501      	bpl.n	8001afe <_printf_float+0x15a>
 8001afa:	3301      	adds	r3, #1
 8001afc:	6123      	str	r3, [r4, #16]
 8001afe:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8001b02:	2b00      	cmp	r3, #0
 8001b04:	d09f      	beq.n	8001a46 <_printf_float+0xa2>
 8001b06:	232d      	movs	r3, #45	@ 0x2d
 8001b08:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001b0c:	e79b      	b.n	8001a46 <_printf_float+0xa2>
 8001b0e:	2947      	cmp	r1, #71	@ 0x47
 8001b10:	d1bf      	bne.n	8001a92 <_printf_float+0xee>
 8001b12:	2b00      	cmp	r3, #0
 8001b14:	d1bd      	bne.n	8001a92 <_printf_float+0xee>
 8001b16:	2301      	movs	r3, #1
 8001b18:	e7ba      	b.n	8001a90 <_printf_float+0xec>
 8001b1a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001b1e:	d9dc      	bls.n	8001ada <_printf_float+0x136>
 8001b20:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001b24:	d118      	bne.n	8001b58 <_printf_float+0x1b4>
 8001b26:	2900      	cmp	r1, #0
 8001b28:	6863      	ldr	r3, [r4, #4]
 8001b2a:	dd0b      	ble.n	8001b44 <_printf_float+0x1a0>
 8001b2c:	6121      	str	r1, [r4, #16]
 8001b2e:	b913      	cbnz	r3, 8001b36 <_printf_float+0x192>
 8001b30:	6822      	ldr	r2, [r4, #0]
 8001b32:	07d0      	lsls	r0, r2, #31
 8001b34:	d502      	bpl.n	8001b3c <_printf_float+0x198>
 8001b36:	3301      	adds	r3, #1
 8001b38:	440b      	add	r3, r1
 8001b3a:	6123      	str	r3, [r4, #16]
 8001b3c:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001b3e:	f04f 0900 	mov.w	r9, #0
 8001b42:	e7dc      	b.n	8001afe <_printf_float+0x15a>
 8001b44:	b913      	cbnz	r3, 8001b4c <_printf_float+0x1a8>
 8001b46:	6822      	ldr	r2, [r4, #0]
 8001b48:	07d2      	lsls	r2, r2, #31
 8001b4a:	d501      	bpl.n	8001b50 <_printf_float+0x1ac>
 8001b4c:	3302      	adds	r3, #2
 8001b4e:	e7f4      	b.n	8001b3a <_printf_float+0x196>
 8001b50:	2301      	movs	r3, #1
 8001b52:	e7f2      	b.n	8001b3a <_printf_float+0x196>
 8001b54:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001b58:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8001b5a:	4299      	cmp	r1, r3
 8001b5c:	db05      	blt.n	8001b6a <_printf_float+0x1c6>
 8001b5e:	6823      	ldr	r3, [r4, #0]
 8001b60:	6121      	str	r1, [r4, #16]
 8001b62:	07d8      	lsls	r0, r3, #31
 8001b64:	d5ea      	bpl.n	8001b3c <_printf_float+0x198>
 8001b66:	1c4b      	adds	r3, r1, #1
 8001b68:	e7e7      	b.n	8001b3a <_printf_float+0x196>
 8001b6a:	2900      	cmp	r1, #0
 8001b6c:	bfd4      	ite	le
 8001b6e:	f1c1 0202 	rsble	r2, r1, #2
 8001b72:	2201      	movgt	r2, #1
 8001b74:	4413      	add	r3, r2
 8001b76:	e7e0      	b.n	8001b3a <_printf_float+0x196>
 8001b78:	6823      	ldr	r3, [r4, #0]
 8001b7a:	055a      	lsls	r2, r3, #21
 8001b7c:	d407      	bmi.n	8001b8e <_printf_float+0x1ea>
 8001b7e:	6923      	ldr	r3, [r4, #16]
 8001b80:	4642      	mov	r2, r8
 8001b82:	4631      	mov	r1, r6
 8001b84:	4628      	mov	r0, r5
 8001b86:	47b8      	blx	r7
 8001b88:	3001      	adds	r0, #1
 8001b8a:	d12b      	bne.n	8001be4 <_printf_float+0x240>
 8001b8c:	e765      	b.n	8001a5a <_printf_float+0xb6>
 8001b8e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001b92:	f240 80dd 	bls.w	8001d50 <_printf_float+0x3ac>
 8001b96:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001b9a:	2200      	movs	r2, #0
 8001b9c:	2300      	movs	r3, #0
 8001b9e:	f7ff f84f 	bl	8000c40 <__aeabi_dcmpeq>
 8001ba2:	2800      	cmp	r0, #0
 8001ba4:	d033      	beq.n	8001c0e <_printf_float+0x26a>
 8001ba6:	4a37      	ldr	r2, [pc, #220]	@ (8001c84 <_printf_float+0x2e0>)
 8001ba8:	2301      	movs	r3, #1
 8001baa:	4631      	mov	r1, r6
 8001bac:	4628      	mov	r0, r5
 8001bae:	47b8      	blx	r7
 8001bb0:	3001      	adds	r0, #1
 8001bb2:	f43f af52 	beq.w	8001a5a <_printf_float+0xb6>
 8001bb6:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8001bba:	4543      	cmp	r3, r8
 8001bbc:	db02      	blt.n	8001bc4 <_printf_float+0x220>
 8001bbe:	6823      	ldr	r3, [r4, #0]
 8001bc0:	07d8      	lsls	r0, r3, #31
 8001bc2:	d50f      	bpl.n	8001be4 <_printf_float+0x240>
 8001bc4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001bc8:	4631      	mov	r1, r6
 8001bca:	4628      	mov	r0, r5
 8001bcc:	47b8      	blx	r7
 8001bce:	3001      	adds	r0, #1
 8001bd0:	f43f af43 	beq.w	8001a5a <_printf_float+0xb6>
 8001bd4:	f04f 0900 	mov.w	r9, #0
 8001bd8:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8001bdc:	f104 0a1a 	add.w	sl, r4, #26
 8001be0:	45c8      	cmp	r8, r9
 8001be2:	dc09      	bgt.n	8001bf8 <_printf_float+0x254>
 8001be4:	6823      	ldr	r3, [r4, #0]
 8001be6:	079b      	lsls	r3, r3, #30
 8001be8:	f100 8103 	bmi.w	8001df2 <_printf_float+0x44e>
 8001bec:	68e0      	ldr	r0, [r4, #12]
 8001bee:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8001bf0:	4298      	cmp	r0, r3
 8001bf2:	bfb8      	it	lt
 8001bf4:	4618      	movlt	r0, r3
 8001bf6:	e732      	b.n	8001a5e <_printf_float+0xba>
 8001bf8:	2301      	movs	r3, #1
 8001bfa:	4652      	mov	r2, sl
 8001bfc:	4631      	mov	r1, r6
 8001bfe:	4628      	mov	r0, r5
 8001c00:	47b8      	blx	r7
 8001c02:	3001      	adds	r0, #1
 8001c04:	f43f af29 	beq.w	8001a5a <_printf_float+0xb6>
 8001c08:	f109 0901 	add.w	r9, r9, #1
 8001c0c:	e7e8      	b.n	8001be0 <_printf_float+0x23c>
 8001c0e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001c10:	2b00      	cmp	r3, #0
 8001c12:	dc39      	bgt.n	8001c88 <_printf_float+0x2e4>
 8001c14:	4a1b      	ldr	r2, [pc, #108]	@ (8001c84 <_printf_float+0x2e0>)
 8001c16:	2301      	movs	r3, #1
 8001c18:	4631      	mov	r1, r6
 8001c1a:	4628      	mov	r0, r5
 8001c1c:	47b8      	blx	r7
 8001c1e:	3001      	adds	r0, #1
 8001c20:	f43f af1b 	beq.w	8001a5a <_printf_float+0xb6>
 8001c24:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8001c28:	ea59 0303 	orrs.w	r3, r9, r3
 8001c2c:	d102      	bne.n	8001c34 <_printf_float+0x290>
 8001c2e:	6823      	ldr	r3, [r4, #0]
 8001c30:	07d9      	lsls	r1, r3, #31
 8001c32:	d5d7      	bpl.n	8001be4 <_printf_float+0x240>
 8001c34:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001c38:	4631      	mov	r1, r6
 8001c3a:	4628      	mov	r0, r5
 8001c3c:	47b8      	blx	r7
 8001c3e:	3001      	adds	r0, #1
 8001c40:	f43f af0b 	beq.w	8001a5a <_printf_float+0xb6>
 8001c44:	f04f 0a00 	mov.w	sl, #0
 8001c48:	f104 0b1a 	add.w	fp, r4, #26
 8001c4c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001c4e:	425b      	negs	r3, r3
 8001c50:	4553      	cmp	r3, sl
 8001c52:	dc01      	bgt.n	8001c58 <_printf_float+0x2b4>
 8001c54:	464b      	mov	r3, r9
 8001c56:	e793      	b.n	8001b80 <_printf_float+0x1dc>
 8001c58:	2301      	movs	r3, #1
 8001c5a:	465a      	mov	r2, fp
 8001c5c:	4631      	mov	r1, r6
 8001c5e:	4628      	mov	r0, r5
 8001c60:	47b8      	blx	r7
 8001c62:	3001      	adds	r0, #1
 8001c64:	f43f aef9 	beq.w	8001a5a <_printf_float+0xb6>
 8001c68:	f10a 0a01 	add.w	sl, sl, #1
 8001c6c:	e7ee      	b.n	8001c4c <_printf_float+0x2a8>
 8001c6e:	bf00      	nop
 8001c70:	7fefffff 	.word	0x7fefffff
 8001c74:	0800466d 	.word	0x0800466d
 8001c78:	08004671 	.word	0x08004671
 8001c7c:	08004675 	.word	0x08004675
 8001c80:	08004679 	.word	0x08004679
 8001c84:	0800467d 	.word	0x0800467d
 8001c88:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001c8a:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8001c8e:	4553      	cmp	r3, sl
 8001c90:	bfa8      	it	ge
 8001c92:	4653      	movge	r3, sl
 8001c94:	2b00      	cmp	r3, #0
 8001c96:	4699      	mov	r9, r3
 8001c98:	dc36      	bgt.n	8001d08 <_printf_float+0x364>
 8001c9a:	f04f 0b00 	mov.w	fp, #0
 8001c9e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001ca2:	f104 021a 	add.w	r2, r4, #26
 8001ca6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001ca8:	930a      	str	r3, [sp, #40]	@ 0x28
 8001caa:	eba3 0309 	sub.w	r3, r3, r9
 8001cae:	455b      	cmp	r3, fp
 8001cb0:	dc31      	bgt.n	8001d16 <_printf_float+0x372>
 8001cb2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001cb4:	459a      	cmp	sl, r3
 8001cb6:	dc3a      	bgt.n	8001d2e <_printf_float+0x38a>
 8001cb8:	6823      	ldr	r3, [r4, #0]
 8001cba:	07da      	lsls	r2, r3, #31
 8001cbc:	d437      	bmi.n	8001d2e <_printf_float+0x38a>
 8001cbe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001cc0:	ebaa 0903 	sub.w	r9, sl, r3
 8001cc4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001cc6:	ebaa 0303 	sub.w	r3, sl, r3
 8001cca:	4599      	cmp	r9, r3
 8001ccc:	bfa8      	it	ge
 8001cce:	4699      	movge	r9, r3
 8001cd0:	f1b9 0f00 	cmp.w	r9, #0
 8001cd4:	dc33      	bgt.n	8001d3e <_printf_float+0x39a>
 8001cd6:	f04f 0800 	mov.w	r8, #0
 8001cda:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001cde:	f104 0b1a 	add.w	fp, r4, #26
 8001ce2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001ce4:	ebaa 0303 	sub.w	r3, sl, r3
 8001ce8:	eba3 0309 	sub.w	r3, r3, r9
 8001cec:	4543      	cmp	r3, r8
 8001cee:	f77f af79 	ble.w	8001be4 <_printf_float+0x240>
 8001cf2:	2301      	movs	r3, #1
 8001cf4:	465a      	mov	r2, fp
 8001cf6:	4631      	mov	r1, r6
 8001cf8:	4628      	mov	r0, r5
 8001cfa:	47b8      	blx	r7
 8001cfc:	3001      	adds	r0, #1
 8001cfe:	f43f aeac 	beq.w	8001a5a <_printf_float+0xb6>
 8001d02:	f108 0801 	add.w	r8, r8, #1
 8001d06:	e7ec      	b.n	8001ce2 <_printf_float+0x33e>
 8001d08:	4642      	mov	r2, r8
 8001d0a:	4631      	mov	r1, r6
 8001d0c:	4628      	mov	r0, r5
 8001d0e:	47b8      	blx	r7
 8001d10:	3001      	adds	r0, #1
 8001d12:	d1c2      	bne.n	8001c9a <_printf_float+0x2f6>
 8001d14:	e6a1      	b.n	8001a5a <_printf_float+0xb6>
 8001d16:	2301      	movs	r3, #1
 8001d18:	4631      	mov	r1, r6
 8001d1a:	4628      	mov	r0, r5
 8001d1c:	920a      	str	r2, [sp, #40]	@ 0x28
 8001d1e:	47b8      	blx	r7
 8001d20:	3001      	adds	r0, #1
 8001d22:	f43f ae9a 	beq.w	8001a5a <_printf_float+0xb6>
 8001d26:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001d28:	f10b 0b01 	add.w	fp, fp, #1
 8001d2c:	e7bb      	b.n	8001ca6 <_printf_float+0x302>
 8001d2e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001d32:	4631      	mov	r1, r6
 8001d34:	4628      	mov	r0, r5
 8001d36:	47b8      	blx	r7
 8001d38:	3001      	adds	r0, #1
 8001d3a:	d1c0      	bne.n	8001cbe <_printf_float+0x31a>
 8001d3c:	e68d      	b.n	8001a5a <_printf_float+0xb6>
 8001d3e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001d40:	464b      	mov	r3, r9
 8001d42:	4442      	add	r2, r8
 8001d44:	4631      	mov	r1, r6
 8001d46:	4628      	mov	r0, r5
 8001d48:	47b8      	blx	r7
 8001d4a:	3001      	adds	r0, #1
 8001d4c:	d1c3      	bne.n	8001cd6 <_printf_float+0x332>
 8001d4e:	e684      	b.n	8001a5a <_printf_float+0xb6>
 8001d50:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8001d54:	f1ba 0f01 	cmp.w	sl, #1
 8001d58:	dc01      	bgt.n	8001d5e <_printf_float+0x3ba>
 8001d5a:	07db      	lsls	r3, r3, #31
 8001d5c:	d536      	bpl.n	8001dcc <_printf_float+0x428>
 8001d5e:	2301      	movs	r3, #1
 8001d60:	4642      	mov	r2, r8
 8001d62:	4631      	mov	r1, r6
 8001d64:	4628      	mov	r0, r5
 8001d66:	47b8      	blx	r7
 8001d68:	3001      	adds	r0, #1
 8001d6a:	f43f ae76 	beq.w	8001a5a <_printf_float+0xb6>
 8001d6e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001d72:	4631      	mov	r1, r6
 8001d74:	4628      	mov	r0, r5
 8001d76:	47b8      	blx	r7
 8001d78:	3001      	adds	r0, #1
 8001d7a:	f43f ae6e 	beq.w	8001a5a <_printf_float+0xb6>
 8001d7e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001d82:	2200      	movs	r2, #0
 8001d84:	2300      	movs	r3, #0
 8001d86:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8001d8a:	f7fe ff59 	bl	8000c40 <__aeabi_dcmpeq>
 8001d8e:	b9c0      	cbnz	r0, 8001dc2 <_printf_float+0x41e>
 8001d90:	4653      	mov	r3, sl
 8001d92:	f108 0201 	add.w	r2, r8, #1
 8001d96:	4631      	mov	r1, r6
 8001d98:	4628      	mov	r0, r5
 8001d9a:	47b8      	blx	r7
 8001d9c:	3001      	adds	r0, #1
 8001d9e:	d10c      	bne.n	8001dba <_printf_float+0x416>
 8001da0:	e65b      	b.n	8001a5a <_printf_float+0xb6>
 8001da2:	2301      	movs	r3, #1
 8001da4:	465a      	mov	r2, fp
 8001da6:	4631      	mov	r1, r6
 8001da8:	4628      	mov	r0, r5
 8001daa:	47b8      	blx	r7
 8001dac:	3001      	adds	r0, #1
 8001dae:	f43f ae54 	beq.w	8001a5a <_printf_float+0xb6>
 8001db2:	f108 0801 	add.w	r8, r8, #1
 8001db6:	45d0      	cmp	r8, sl
 8001db8:	dbf3      	blt.n	8001da2 <_printf_float+0x3fe>
 8001dba:	464b      	mov	r3, r9
 8001dbc:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001dc0:	e6df      	b.n	8001b82 <_printf_float+0x1de>
 8001dc2:	f04f 0800 	mov.w	r8, #0
 8001dc6:	f104 0b1a 	add.w	fp, r4, #26
 8001dca:	e7f4      	b.n	8001db6 <_printf_float+0x412>
 8001dcc:	2301      	movs	r3, #1
 8001dce:	4642      	mov	r2, r8
 8001dd0:	e7e1      	b.n	8001d96 <_printf_float+0x3f2>
 8001dd2:	2301      	movs	r3, #1
 8001dd4:	464a      	mov	r2, r9
 8001dd6:	4631      	mov	r1, r6
 8001dd8:	4628      	mov	r0, r5
 8001dda:	47b8      	blx	r7
 8001ddc:	3001      	adds	r0, #1
 8001dde:	f43f ae3c 	beq.w	8001a5a <_printf_float+0xb6>
 8001de2:	f108 0801 	add.w	r8, r8, #1
 8001de6:	68e3      	ldr	r3, [r4, #12]
 8001de8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8001dea:	1a5b      	subs	r3, r3, r1
 8001dec:	4543      	cmp	r3, r8
 8001dee:	dcf0      	bgt.n	8001dd2 <_printf_float+0x42e>
 8001df0:	e6fc      	b.n	8001bec <_printf_float+0x248>
 8001df2:	f04f 0800 	mov.w	r8, #0
 8001df6:	f104 0919 	add.w	r9, r4, #25
 8001dfa:	e7f4      	b.n	8001de6 <_printf_float+0x442>

08001dfc <malloc>:
 8001dfc:	4b02      	ldr	r3, [pc, #8]	@ (8001e08 <malloc+0xc>)
 8001dfe:	4601      	mov	r1, r0
 8001e00:	6818      	ldr	r0, [r3, #0]
 8001e02:	f000 b825 	b.w	8001e50 <_malloc_r>
 8001e06:	bf00      	nop
 8001e08:	20000034 	.word	0x20000034

08001e0c <sbrk_aligned>:
 8001e0c:	b570      	push	{r4, r5, r6, lr}
 8001e0e:	4e0f      	ldr	r6, [pc, #60]	@ (8001e4c <sbrk_aligned+0x40>)
 8001e10:	460c      	mov	r4, r1
 8001e12:	6831      	ldr	r1, [r6, #0]
 8001e14:	4605      	mov	r5, r0
 8001e16:	b911      	cbnz	r1, 8001e1e <sbrk_aligned+0x12>
 8001e18:	f000 fb22 	bl	8002460 <_sbrk_r>
 8001e1c:	6030      	str	r0, [r6, #0]
 8001e1e:	4621      	mov	r1, r4
 8001e20:	4628      	mov	r0, r5
 8001e22:	f000 fb1d 	bl	8002460 <_sbrk_r>
 8001e26:	1c43      	adds	r3, r0, #1
 8001e28:	d103      	bne.n	8001e32 <sbrk_aligned+0x26>
 8001e2a:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8001e2e:	4620      	mov	r0, r4
 8001e30:	bd70      	pop	{r4, r5, r6, pc}
 8001e32:	1cc4      	adds	r4, r0, #3
 8001e34:	f024 0403 	bic.w	r4, r4, #3
 8001e38:	42a0      	cmp	r0, r4
 8001e3a:	d0f8      	beq.n	8001e2e <sbrk_aligned+0x22>
 8001e3c:	1a21      	subs	r1, r4, r0
 8001e3e:	4628      	mov	r0, r5
 8001e40:	f000 fb0e 	bl	8002460 <_sbrk_r>
 8001e44:	3001      	adds	r0, #1
 8001e46:	d1f2      	bne.n	8001e2e <sbrk_aligned+0x22>
 8001e48:	e7ef      	b.n	8001e2a <sbrk_aligned+0x1e>
 8001e4a:	bf00      	nop
 8001e4c:	20000214 	.word	0x20000214

08001e50 <_malloc_r>:
 8001e50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001e54:	1ccd      	adds	r5, r1, #3
 8001e56:	f025 0503 	bic.w	r5, r5, #3
 8001e5a:	3508      	adds	r5, #8
 8001e5c:	2d0c      	cmp	r5, #12
 8001e5e:	bf38      	it	cc
 8001e60:	250c      	movcc	r5, #12
 8001e62:	2d00      	cmp	r5, #0
 8001e64:	4606      	mov	r6, r0
 8001e66:	db01      	blt.n	8001e6c <_malloc_r+0x1c>
 8001e68:	42a9      	cmp	r1, r5
 8001e6a:	d904      	bls.n	8001e76 <_malloc_r+0x26>
 8001e6c:	230c      	movs	r3, #12
 8001e6e:	6033      	str	r3, [r6, #0]
 8001e70:	2000      	movs	r0, #0
 8001e72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001e76:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8001f4c <_malloc_r+0xfc>
 8001e7a:	f000 f9f7 	bl	800226c <__malloc_lock>
 8001e7e:	f8d8 3000 	ldr.w	r3, [r8]
 8001e82:	461c      	mov	r4, r3
 8001e84:	bb44      	cbnz	r4, 8001ed8 <_malloc_r+0x88>
 8001e86:	4629      	mov	r1, r5
 8001e88:	4630      	mov	r0, r6
 8001e8a:	f7ff ffbf 	bl	8001e0c <sbrk_aligned>
 8001e8e:	1c43      	adds	r3, r0, #1
 8001e90:	4604      	mov	r4, r0
 8001e92:	d158      	bne.n	8001f46 <_malloc_r+0xf6>
 8001e94:	f8d8 4000 	ldr.w	r4, [r8]
 8001e98:	4627      	mov	r7, r4
 8001e9a:	2f00      	cmp	r7, #0
 8001e9c:	d143      	bne.n	8001f26 <_malloc_r+0xd6>
 8001e9e:	2c00      	cmp	r4, #0
 8001ea0:	d04b      	beq.n	8001f3a <_malloc_r+0xea>
 8001ea2:	6823      	ldr	r3, [r4, #0]
 8001ea4:	4639      	mov	r1, r7
 8001ea6:	4630      	mov	r0, r6
 8001ea8:	eb04 0903 	add.w	r9, r4, r3
 8001eac:	f000 fad8 	bl	8002460 <_sbrk_r>
 8001eb0:	4581      	cmp	r9, r0
 8001eb2:	d142      	bne.n	8001f3a <_malloc_r+0xea>
 8001eb4:	6821      	ldr	r1, [r4, #0]
 8001eb6:	1a6d      	subs	r5, r5, r1
 8001eb8:	4629      	mov	r1, r5
 8001eba:	4630      	mov	r0, r6
 8001ebc:	f7ff ffa6 	bl	8001e0c <sbrk_aligned>
 8001ec0:	3001      	adds	r0, #1
 8001ec2:	d03a      	beq.n	8001f3a <_malloc_r+0xea>
 8001ec4:	6823      	ldr	r3, [r4, #0]
 8001ec6:	442b      	add	r3, r5
 8001ec8:	6023      	str	r3, [r4, #0]
 8001eca:	f8d8 3000 	ldr.w	r3, [r8]
 8001ece:	685a      	ldr	r2, [r3, #4]
 8001ed0:	bb62      	cbnz	r2, 8001f2c <_malloc_r+0xdc>
 8001ed2:	f8c8 7000 	str.w	r7, [r8]
 8001ed6:	e00f      	b.n	8001ef8 <_malloc_r+0xa8>
 8001ed8:	6822      	ldr	r2, [r4, #0]
 8001eda:	1b52      	subs	r2, r2, r5
 8001edc:	d420      	bmi.n	8001f20 <_malloc_r+0xd0>
 8001ede:	2a0b      	cmp	r2, #11
 8001ee0:	d917      	bls.n	8001f12 <_malloc_r+0xc2>
 8001ee2:	1961      	adds	r1, r4, r5
 8001ee4:	42a3      	cmp	r3, r4
 8001ee6:	6025      	str	r5, [r4, #0]
 8001ee8:	bf18      	it	ne
 8001eea:	6059      	strne	r1, [r3, #4]
 8001eec:	6863      	ldr	r3, [r4, #4]
 8001eee:	bf08      	it	eq
 8001ef0:	f8c8 1000 	streq.w	r1, [r8]
 8001ef4:	5162      	str	r2, [r4, r5]
 8001ef6:	604b      	str	r3, [r1, #4]
 8001ef8:	4630      	mov	r0, r6
 8001efa:	f000 f9bd 	bl	8002278 <__malloc_unlock>
 8001efe:	f104 000b 	add.w	r0, r4, #11
 8001f02:	1d23      	adds	r3, r4, #4
 8001f04:	f020 0007 	bic.w	r0, r0, #7
 8001f08:	1ac2      	subs	r2, r0, r3
 8001f0a:	bf1c      	itt	ne
 8001f0c:	1a1b      	subne	r3, r3, r0
 8001f0e:	50a3      	strne	r3, [r4, r2]
 8001f10:	e7af      	b.n	8001e72 <_malloc_r+0x22>
 8001f12:	6862      	ldr	r2, [r4, #4]
 8001f14:	42a3      	cmp	r3, r4
 8001f16:	bf0c      	ite	eq
 8001f18:	f8c8 2000 	streq.w	r2, [r8]
 8001f1c:	605a      	strne	r2, [r3, #4]
 8001f1e:	e7eb      	b.n	8001ef8 <_malloc_r+0xa8>
 8001f20:	4623      	mov	r3, r4
 8001f22:	6864      	ldr	r4, [r4, #4]
 8001f24:	e7ae      	b.n	8001e84 <_malloc_r+0x34>
 8001f26:	463c      	mov	r4, r7
 8001f28:	687f      	ldr	r7, [r7, #4]
 8001f2a:	e7b6      	b.n	8001e9a <_malloc_r+0x4a>
 8001f2c:	461a      	mov	r2, r3
 8001f2e:	685b      	ldr	r3, [r3, #4]
 8001f30:	42a3      	cmp	r3, r4
 8001f32:	d1fb      	bne.n	8001f2c <_malloc_r+0xdc>
 8001f34:	2300      	movs	r3, #0
 8001f36:	6053      	str	r3, [r2, #4]
 8001f38:	e7de      	b.n	8001ef8 <_malloc_r+0xa8>
 8001f3a:	230c      	movs	r3, #12
 8001f3c:	6033      	str	r3, [r6, #0]
 8001f3e:	4630      	mov	r0, r6
 8001f40:	f000 f99a 	bl	8002278 <__malloc_unlock>
 8001f44:	e794      	b.n	8001e70 <_malloc_r+0x20>
 8001f46:	6005      	str	r5, [r0, #0]
 8001f48:	e7d6      	b.n	8001ef8 <_malloc_r+0xa8>
 8001f4a:	bf00      	nop
 8001f4c:	20000218 	.word	0x20000218

08001f50 <_printf_common>:
 8001f50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001f54:	4616      	mov	r6, r2
 8001f56:	4698      	mov	r8, r3
 8001f58:	688a      	ldr	r2, [r1, #8]
 8001f5a:	690b      	ldr	r3, [r1, #16]
 8001f5c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001f60:	4293      	cmp	r3, r2
 8001f62:	bfb8      	it	lt
 8001f64:	4613      	movlt	r3, r2
 8001f66:	6033      	str	r3, [r6, #0]
 8001f68:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001f6c:	4607      	mov	r7, r0
 8001f6e:	460c      	mov	r4, r1
 8001f70:	b10a      	cbz	r2, 8001f76 <_printf_common+0x26>
 8001f72:	3301      	adds	r3, #1
 8001f74:	6033      	str	r3, [r6, #0]
 8001f76:	6823      	ldr	r3, [r4, #0]
 8001f78:	0699      	lsls	r1, r3, #26
 8001f7a:	bf42      	ittt	mi
 8001f7c:	6833      	ldrmi	r3, [r6, #0]
 8001f7e:	3302      	addmi	r3, #2
 8001f80:	6033      	strmi	r3, [r6, #0]
 8001f82:	6825      	ldr	r5, [r4, #0]
 8001f84:	f015 0506 	ands.w	r5, r5, #6
 8001f88:	d106      	bne.n	8001f98 <_printf_common+0x48>
 8001f8a:	f104 0a19 	add.w	sl, r4, #25
 8001f8e:	68e3      	ldr	r3, [r4, #12]
 8001f90:	6832      	ldr	r2, [r6, #0]
 8001f92:	1a9b      	subs	r3, r3, r2
 8001f94:	42ab      	cmp	r3, r5
 8001f96:	dc26      	bgt.n	8001fe6 <_printf_common+0x96>
 8001f98:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001f9c:	6822      	ldr	r2, [r4, #0]
 8001f9e:	3b00      	subs	r3, #0
 8001fa0:	bf18      	it	ne
 8001fa2:	2301      	movne	r3, #1
 8001fa4:	0692      	lsls	r2, r2, #26
 8001fa6:	d42b      	bmi.n	8002000 <_printf_common+0xb0>
 8001fa8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001fac:	4641      	mov	r1, r8
 8001fae:	4638      	mov	r0, r7
 8001fb0:	47c8      	blx	r9
 8001fb2:	3001      	adds	r0, #1
 8001fb4:	d01e      	beq.n	8001ff4 <_printf_common+0xa4>
 8001fb6:	6823      	ldr	r3, [r4, #0]
 8001fb8:	6922      	ldr	r2, [r4, #16]
 8001fba:	f003 0306 	and.w	r3, r3, #6
 8001fbe:	2b04      	cmp	r3, #4
 8001fc0:	bf02      	ittt	eq
 8001fc2:	68e5      	ldreq	r5, [r4, #12]
 8001fc4:	6833      	ldreq	r3, [r6, #0]
 8001fc6:	1aed      	subeq	r5, r5, r3
 8001fc8:	68a3      	ldr	r3, [r4, #8]
 8001fca:	bf0c      	ite	eq
 8001fcc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001fd0:	2500      	movne	r5, #0
 8001fd2:	4293      	cmp	r3, r2
 8001fd4:	bfc4      	itt	gt
 8001fd6:	1a9b      	subgt	r3, r3, r2
 8001fd8:	18ed      	addgt	r5, r5, r3
 8001fda:	2600      	movs	r6, #0
 8001fdc:	341a      	adds	r4, #26
 8001fde:	42b5      	cmp	r5, r6
 8001fe0:	d11a      	bne.n	8002018 <_printf_common+0xc8>
 8001fe2:	2000      	movs	r0, #0
 8001fe4:	e008      	b.n	8001ff8 <_printf_common+0xa8>
 8001fe6:	2301      	movs	r3, #1
 8001fe8:	4652      	mov	r2, sl
 8001fea:	4641      	mov	r1, r8
 8001fec:	4638      	mov	r0, r7
 8001fee:	47c8      	blx	r9
 8001ff0:	3001      	adds	r0, #1
 8001ff2:	d103      	bne.n	8001ffc <_printf_common+0xac>
 8001ff4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001ff8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001ffc:	3501      	adds	r5, #1
 8001ffe:	e7c6      	b.n	8001f8e <_printf_common+0x3e>
 8002000:	18e1      	adds	r1, r4, r3
 8002002:	1c5a      	adds	r2, r3, #1
 8002004:	2030      	movs	r0, #48	@ 0x30
 8002006:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800200a:	4422      	add	r2, r4
 800200c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002010:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002014:	3302      	adds	r3, #2
 8002016:	e7c7      	b.n	8001fa8 <_printf_common+0x58>
 8002018:	2301      	movs	r3, #1
 800201a:	4622      	mov	r2, r4
 800201c:	4641      	mov	r1, r8
 800201e:	4638      	mov	r0, r7
 8002020:	47c8      	blx	r9
 8002022:	3001      	adds	r0, #1
 8002024:	d0e6      	beq.n	8001ff4 <_printf_common+0xa4>
 8002026:	3601      	adds	r6, #1
 8002028:	e7d9      	b.n	8001fde <_printf_common+0x8e>
	...

0800202c <_printf_i>:
 800202c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002030:	7e0f      	ldrb	r7, [r1, #24]
 8002032:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002034:	2f78      	cmp	r7, #120	@ 0x78
 8002036:	4691      	mov	r9, r2
 8002038:	4680      	mov	r8, r0
 800203a:	460c      	mov	r4, r1
 800203c:	469a      	mov	sl, r3
 800203e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002042:	d807      	bhi.n	8002054 <_printf_i+0x28>
 8002044:	2f62      	cmp	r7, #98	@ 0x62
 8002046:	d80a      	bhi.n	800205e <_printf_i+0x32>
 8002048:	2f00      	cmp	r7, #0
 800204a:	f000 80d2 	beq.w	80021f2 <_printf_i+0x1c6>
 800204e:	2f58      	cmp	r7, #88	@ 0x58
 8002050:	f000 80b9 	beq.w	80021c6 <_printf_i+0x19a>
 8002054:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002058:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800205c:	e03a      	b.n	80020d4 <_printf_i+0xa8>
 800205e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002062:	2b15      	cmp	r3, #21
 8002064:	d8f6      	bhi.n	8002054 <_printf_i+0x28>
 8002066:	a101      	add	r1, pc, #4	@ (adr r1, 800206c <_printf_i+0x40>)
 8002068:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800206c:	080020c5 	.word	0x080020c5
 8002070:	080020d9 	.word	0x080020d9
 8002074:	08002055 	.word	0x08002055
 8002078:	08002055 	.word	0x08002055
 800207c:	08002055 	.word	0x08002055
 8002080:	08002055 	.word	0x08002055
 8002084:	080020d9 	.word	0x080020d9
 8002088:	08002055 	.word	0x08002055
 800208c:	08002055 	.word	0x08002055
 8002090:	08002055 	.word	0x08002055
 8002094:	08002055 	.word	0x08002055
 8002098:	080021d9 	.word	0x080021d9
 800209c:	08002103 	.word	0x08002103
 80020a0:	08002193 	.word	0x08002193
 80020a4:	08002055 	.word	0x08002055
 80020a8:	08002055 	.word	0x08002055
 80020ac:	080021fb 	.word	0x080021fb
 80020b0:	08002055 	.word	0x08002055
 80020b4:	08002103 	.word	0x08002103
 80020b8:	08002055 	.word	0x08002055
 80020bc:	08002055 	.word	0x08002055
 80020c0:	0800219b 	.word	0x0800219b
 80020c4:	6833      	ldr	r3, [r6, #0]
 80020c6:	1d1a      	adds	r2, r3, #4
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	6032      	str	r2, [r6, #0]
 80020cc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80020d0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80020d4:	2301      	movs	r3, #1
 80020d6:	e09d      	b.n	8002214 <_printf_i+0x1e8>
 80020d8:	6833      	ldr	r3, [r6, #0]
 80020da:	6820      	ldr	r0, [r4, #0]
 80020dc:	1d19      	adds	r1, r3, #4
 80020de:	6031      	str	r1, [r6, #0]
 80020e0:	0606      	lsls	r6, r0, #24
 80020e2:	d501      	bpl.n	80020e8 <_printf_i+0xbc>
 80020e4:	681d      	ldr	r5, [r3, #0]
 80020e6:	e003      	b.n	80020f0 <_printf_i+0xc4>
 80020e8:	0645      	lsls	r5, r0, #25
 80020ea:	d5fb      	bpl.n	80020e4 <_printf_i+0xb8>
 80020ec:	f9b3 5000 	ldrsh.w	r5, [r3]
 80020f0:	2d00      	cmp	r5, #0
 80020f2:	da03      	bge.n	80020fc <_printf_i+0xd0>
 80020f4:	232d      	movs	r3, #45	@ 0x2d
 80020f6:	426d      	negs	r5, r5
 80020f8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80020fc:	4859      	ldr	r0, [pc, #356]	@ (8002264 <_printf_i+0x238>)
 80020fe:	230a      	movs	r3, #10
 8002100:	e011      	b.n	8002126 <_printf_i+0xfa>
 8002102:	6821      	ldr	r1, [r4, #0]
 8002104:	6833      	ldr	r3, [r6, #0]
 8002106:	0608      	lsls	r0, r1, #24
 8002108:	f853 5b04 	ldr.w	r5, [r3], #4
 800210c:	d402      	bmi.n	8002114 <_printf_i+0xe8>
 800210e:	0649      	lsls	r1, r1, #25
 8002110:	bf48      	it	mi
 8002112:	b2ad      	uxthmi	r5, r5
 8002114:	2f6f      	cmp	r7, #111	@ 0x6f
 8002116:	4853      	ldr	r0, [pc, #332]	@ (8002264 <_printf_i+0x238>)
 8002118:	6033      	str	r3, [r6, #0]
 800211a:	bf14      	ite	ne
 800211c:	230a      	movne	r3, #10
 800211e:	2308      	moveq	r3, #8
 8002120:	2100      	movs	r1, #0
 8002122:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002126:	6866      	ldr	r6, [r4, #4]
 8002128:	60a6      	str	r6, [r4, #8]
 800212a:	2e00      	cmp	r6, #0
 800212c:	bfa2      	ittt	ge
 800212e:	6821      	ldrge	r1, [r4, #0]
 8002130:	f021 0104 	bicge.w	r1, r1, #4
 8002134:	6021      	strge	r1, [r4, #0]
 8002136:	b90d      	cbnz	r5, 800213c <_printf_i+0x110>
 8002138:	2e00      	cmp	r6, #0
 800213a:	d04b      	beq.n	80021d4 <_printf_i+0x1a8>
 800213c:	4616      	mov	r6, r2
 800213e:	fbb5 f1f3 	udiv	r1, r5, r3
 8002142:	fb03 5711 	mls	r7, r3, r1, r5
 8002146:	5dc7      	ldrb	r7, [r0, r7]
 8002148:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800214c:	462f      	mov	r7, r5
 800214e:	42bb      	cmp	r3, r7
 8002150:	460d      	mov	r5, r1
 8002152:	d9f4      	bls.n	800213e <_printf_i+0x112>
 8002154:	2b08      	cmp	r3, #8
 8002156:	d10b      	bne.n	8002170 <_printf_i+0x144>
 8002158:	6823      	ldr	r3, [r4, #0]
 800215a:	07df      	lsls	r7, r3, #31
 800215c:	d508      	bpl.n	8002170 <_printf_i+0x144>
 800215e:	6923      	ldr	r3, [r4, #16]
 8002160:	6861      	ldr	r1, [r4, #4]
 8002162:	4299      	cmp	r1, r3
 8002164:	bfde      	ittt	le
 8002166:	2330      	movle	r3, #48	@ 0x30
 8002168:	f806 3c01 	strble.w	r3, [r6, #-1]
 800216c:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8002170:	1b92      	subs	r2, r2, r6
 8002172:	6122      	str	r2, [r4, #16]
 8002174:	f8cd a000 	str.w	sl, [sp]
 8002178:	464b      	mov	r3, r9
 800217a:	aa03      	add	r2, sp, #12
 800217c:	4621      	mov	r1, r4
 800217e:	4640      	mov	r0, r8
 8002180:	f7ff fee6 	bl	8001f50 <_printf_common>
 8002184:	3001      	adds	r0, #1
 8002186:	d14a      	bne.n	800221e <_printf_i+0x1f2>
 8002188:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800218c:	b004      	add	sp, #16
 800218e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002192:	6823      	ldr	r3, [r4, #0]
 8002194:	f043 0320 	orr.w	r3, r3, #32
 8002198:	6023      	str	r3, [r4, #0]
 800219a:	4833      	ldr	r0, [pc, #204]	@ (8002268 <_printf_i+0x23c>)
 800219c:	2778      	movs	r7, #120	@ 0x78
 800219e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80021a2:	6823      	ldr	r3, [r4, #0]
 80021a4:	6831      	ldr	r1, [r6, #0]
 80021a6:	061f      	lsls	r7, r3, #24
 80021a8:	f851 5b04 	ldr.w	r5, [r1], #4
 80021ac:	d402      	bmi.n	80021b4 <_printf_i+0x188>
 80021ae:	065f      	lsls	r7, r3, #25
 80021b0:	bf48      	it	mi
 80021b2:	b2ad      	uxthmi	r5, r5
 80021b4:	6031      	str	r1, [r6, #0]
 80021b6:	07d9      	lsls	r1, r3, #31
 80021b8:	bf44      	itt	mi
 80021ba:	f043 0320 	orrmi.w	r3, r3, #32
 80021be:	6023      	strmi	r3, [r4, #0]
 80021c0:	b11d      	cbz	r5, 80021ca <_printf_i+0x19e>
 80021c2:	2310      	movs	r3, #16
 80021c4:	e7ac      	b.n	8002120 <_printf_i+0xf4>
 80021c6:	4827      	ldr	r0, [pc, #156]	@ (8002264 <_printf_i+0x238>)
 80021c8:	e7e9      	b.n	800219e <_printf_i+0x172>
 80021ca:	6823      	ldr	r3, [r4, #0]
 80021cc:	f023 0320 	bic.w	r3, r3, #32
 80021d0:	6023      	str	r3, [r4, #0]
 80021d2:	e7f6      	b.n	80021c2 <_printf_i+0x196>
 80021d4:	4616      	mov	r6, r2
 80021d6:	e7bd      	b.n	8002154 <_printf_i+0x128>
 80021d8:	6833      	ldr	r3, [r6, #0]
 80021da:	6825      	ldr	r5, [r4, #0]
 80021dc:	6961      	ldr	r1, [r4, #20]
 80021de:	1d18      	adds	r0, r3, #4
 80021e0:	6030      	str	r0, [r6, #0]
 80021e2:	062e      	lsls	r6, r5, #24
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	d501      	bpl.n	80021ec <_printf_i+0x1c0>
 80021e8:	6019      	str	r1, [r3, #0]
 80021ea:	e002      	b.n	80021f2 <_printf_i+0x1c6>
 80021ec:	0668      	lsls	r0, r5, #25
 80021ee:	d5fb      	bpl.n	80021e8 <_printf_i+0x1bc>
 80021f0:	8019      	strh	r1, [r3, #0]
 80021f2:	2300      	movs	r3, #0
 80021f4:	6123      	str	r3, [r4, #16]
 80021f6:	4616      	mov	r6, r2
 80021f8:	e7bc      	b.n	8002174 <_printf_i+0x148>
 80021fa:	6833      	ldr	r3, [r6, #0]
 80021fc:	1d1a      	adds	r2, r3, #4
 80021fe:	6032      	str	r2, [r6, #0]
 8002200:	681e      	ldr	r6, [r3, #0]
 8002202:	6862      	ldr	r2, [r4, #4]
 8002204:	2100      	movs	r1, #0
 8002206:	4630      	mov	r0, r6
 8002208:	f7fd ffea 	bl	80001e0 <memchr>
 800220c:	b108      	cbz	r0, 8002212 <_printf_i+0x1e6>
 800220e:	1b80      	subs	r0, r0, r6
 8002210:	6060      	str	r0, [r4, #4]
 8002212:	6863      	ldr	r3, [r4, #4]
 8002214:	6123      	str	r3, [r4, #16]
 8002216:	2300      	movs	r3, #0
 8002218:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800221c:	e7aa      	b.n	8002174 <_printf_i+0x148>
 800221e:	6923      	ldr	r3, [r4, #16]
 8002220:	4632      	mov	r2, r6
 8002222:	4649      	mov	r1, r9
 8002224:	4640      	mov	r0, r8
 8002226:	47d0      	blx	sl
 8002228:	3001      	adds	r0, #1
 800222a:	d0ad      	beq.n	8002188 <_printf_i+0x15c>
 800222c:	6823      	ldr	r3, [r4, #0]
 800222e:	079b      	lsls	r3, r3, #30
 8002230:	d413      	bmi.n	800225a <_printf_i+0x22e>
 8002232:	68e0      	ldr	r0, [r4, #12]
 8002234:	9b03      	ldr	r3, [sp, #12]
 8002236:	4298      	cmp	r0, r3
 8002238:	bfb8      	it	lt
 800223a:	4618      	movlt	r0, r3
 800223c:	e7a6      	b.n	800218c <_printf_i+0x160>
 800223e:	2301      	movs	r3, #1
 8002240:	4632      	mov	r2, r6
 8002242:	4649      	mov	r1, r9
 8002244:	4640      	mov	r0, r8
 8002246:	47d0      	blx	sl
 8002248:	3001      	adds	r0, #1
 800224a:	d09d      	beq.n	8002188 <_printf_i+0x15c>
 800224c:	3501      	adds	r5, #1
 800224e:	68e3      	ldr	r3, [r4, #12]
 8002250:	9903      	ldr	r1, [sp, #12]
 8002252:	1a5b      	subs	r3, r3, r1
 8002254:	42ab      	cmp	r3, r5
 8002256:	dcf2      	bgt.n	800223e <_printf_i+0x212>
 8002258:	e7eb      	b.n	8002232 <_printf_i+0x206>
 800225a:	2500      	movs	r5, #0
 800225c:	f104 0619 	add.w	r6, r4, #25
 8002260:	e7f5      	b.n	800224e <_printf_i+0x222>
 8002262:	bf00      	nop
 8002264:	0800467f 	.word	0x0800467f
 8002268:	08004690 	.word	0x08004690

0800226c <__malloc_lock>:
 800226c:	4801      	ldr	r0, [pc, #4]	@ (8002274 <__malloc_lock+0x8>)
 800226e:	f000 b932 	b.w	80024d6 <__retarget_lock_acquire_recursive>
 8002272:	bf00      	nop
 8002274:	20000358 	.word	0x20000358

08002278 <__malloc_unlock>:
 8002278:	4801      	ldr	r0, [pc, #4]	@ (8002280 <__malloc_unlock+0x8>)
 800227a:	f000 b92d 	b.w	80024d8 <__retarget_lock_release_recursive>
 800227e:	bf00      	nop
 8002280:	20000358 	.word	0x20000358

08002284 <siprintf>:
 8002284:	b40e      	push	{r1, r2, r3}
 8002286:	b500      	push	{lr}
 8002288:	b09c      	sub	sp, #112	@ 0x70
 800228a:	ab1d      	add	r3, sp, #116	@ 0x74
 800228c:	9002      	str	r0, [sp, #8]
 800228e:	9006      	str	r0, [sp, #24]
 8002290:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8002294:	4809      	ldr	r0, [pc, #36]	@ (80022bc <siprintf+0x38>)
 8002296:	9107      	str	r1, [sp, #28]
 8002298:	9104      	str	r1, [sp, #16]
 800229a:	4909      	ldr	r1, [pc, #36]	@ (80022c0 <siprintf+0x3c>)
 800229c:	f853 2b04 	ldr.w	r2, [r3], #4
 80022a0:	9105      	str	r1, [sp, #20]
 80022a2:	6800      	ldr	r0, [r0, #0]
 80022a4:	9301      	str	r3, [sp, #4]
 80022a6:	a902      	add	r1, sp, #8
 80022a8:	f001 f810 	bl	80032cc <_svfiprintf_r>
 80022ac:	9b02      	ldr	r3, [sp, #8]
 80022ae:	2200      	movs	r2, #0
 80022b0:	701a      	strb	r2, [r3, #0]
 80022b2:	b01c      	add	sp, #112	@ 0x70
 80022b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80022b8:	b003      	add	sp, #12
 80022ba:	4770      	bx	lr
 80022bc:	20000034 	.word	0x20000034
 80022c0:	ffff0208 	.word	0xffff0208

080022c4 <std>:
 80022c4:	2300      	movs	r3, #0
 80022c6:	b510      	push	{r4, lr}
 80022c8:	4604      	mov	r4, r0
 80022ca:	e9c0 3300 	strd	r3, r3, [r0]
 80022ce:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80022d2:	6083      	str	r3, [r0, #8]
 80022d4:	8181      	strh	r1, [r0, #12]
 80022d6:	6643      	str	r3, [r0, #100]	@ 0x64
 80022d8:	81c2      	strh	r2, [r0, #14]
 80022da:	6183      	str	r3, [r0, #24]
 80022dc:	4619      	mov	r1, r3
 80022de:	2208      	movs	r2, #8
 80022e0:	305c      	adds	r0, #92	@ 0x5c
 80022e2:	f000 f8b1 	bl	8002448 <memset>
 80022e6:	4b0d      	ldr	r3, [pc, #52]	@ (800231c <std+0x58>)
 80022e8:	6263      	str	r3, [r4, #36]	@ 0x24
 80022ea:	4b0d      	ldr	r3, [pc, #52]	@ (8002320 <std+0x5c>)
 80022ec:	62a3      	str	r3, [r4, #40]	@ 0x28
 80022ee:	4b0d      	ldr	r3, [pc, #52]	@ (8002324 <std+0x60>)
 80022f0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80022f2:	4b0d      	ldr	r3, [pc, #52]	@ (8002328 <std+0x64>)
 80022f4:	6323      	str	r3, [r4, #48]	@ 0x30
 80022f6:	4b0d      	ldr	r3, [pc, #52]	@ (800232c <std+0x68>)
 80022f8:	6224      	str	r4, [r4, #32]
 80022fa:	429c      	cmp	r4, r3
 80022fc:	d006      	beq.n	800230c <std+0x48>
 80022fe:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002302:	4294      	cmp	r4, r2
 8002304:	d002      	beq.n	800230c <std+0x48>
 8002306:	33d0      	adds	r3, #208	@ 0xd0
 8002308:	429c      	cmp	r4, r3
 800230a:	d105      	bne.n	8002318 <std+0x54>
 800230c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002310:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002314:	f000 b8de 	b.w	80024d4 <__retarget_lock_init_recursive>
 8002318:	bd10      	pop	{r4, pc}
 800231a:	bf00      	nop
 800231c:	08003d15 	.word	0x08003d15
 8002320:	08003d37 	.word	0x08003d37
 8002324:	08003d6f 	.word	0x08003d6f
 8002328:	08003d93 	.word	0x08003d93
 800232c:	2000021c 	.word	0x2000021c

08002330 <stdio_exit_handler>:
 8002330:	4a02      	ldr	r2, [pc, #8]	@ (800233c <stdio_exit_handler+0xc>)
 8002332:	4903      	ldr	r1, [pc, #12]	@ (8002340 <stdio_exit_handler+0x10>)
 8002334:	4803      	ldr	r0, [pc, #12]	@ (8002344 <stdio_exit_handler+0x14>)
 8002336:	f000 b869 	b.w	800240c <_fwalk_sglue>
 800233a:	bf00      	nop
 800233c:	20000028 	.word	0x20000028
 8002340:	080035c5 	.word	0x080035c5
 8002344:	20000038 	.word	0x20000038

08002348 <cleanup_stdio>:
 8002348:	6841      	ldr	r1, [r0, #4]
 800234a:	4b0c      	ldr	r3, [pc, #48]	@ (800237c <cleanup_stdio+0x34>)
 800234c:	4299      	cmp	r1, r3
 800234e:	b510      	push	{r4, lr}
 8002350:	4604      	mov	r4, r0
 8002352:	d001      	beq.n	8002358 <cleanup_stdio+0x10>
 8002354:	f001 f936 	bl	80035c4 <_fflush_r>
 8002358:	68a1      	ldr	r1, [r4, #8]
 800235a:	4b09      	ldr	r3, [pc, #36]	@ (8002380 <cleanup_stdio+0x38>)
 800235c:	4299      	cmp	r1, r3
 800235e:	d002      	beq.n	8002366 <cleanup_stdio+0x1e>
 8002360:	4620      	mov	r0, r4
 8002362:	f001 f92f 	bl	80035c4 <_fflush_r>
 8002366:	68e1      	ldr	r1, [r4, #12]
 8002368:	4b06      	ldr	r3, [pc, #24]	@ (8002384 <cleanup_stdio+0x3c>)
 800236a:	4299      	cmp	r1, r3
 800236c:	d004      	beq.n	8002378 <cleanup_stdio+0x30>
 800236e:	4620      	mov	r0, r4
 8002370:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002374:	f001 b926 	b.w	80035c4 <_fflush_r>
 8002378:	bd10      	pop	{r4, pc}
 800237a:	bf00      	nop
 800237c:	2000021c 	.word	0x2000021c
 8002380:	20000284 	.word	0x20000284
 8002384:	200002ec 	.word	0x200002ec

08002388 <global_stdio_init.part.0>:
 8002388:	b510      	push	{r4, lr}
 800238a:	4b0b      	ldr	r3, [pc, #44]	@ (80023b8 <global_stdio_init.part.0+0x30>)
 800238c:	4c0b      	ldr	r4, [pc, #44]	@ (80023bc <global_stdio_init.part.0+0x34>)
 800238e:	4a0c      	ldr	r2, [pc, #48]	@ (80023c0 <global_stdio_init.part.0+0x38>)
 8002390:	601a      	str	r2, [r3, #0]
 8002392:	4620      	mov	r0, r4
 8002394:	2200      	movs	r2, #0
 8002396:	2104      	movs	r1, #4
 8002398:	f7ff ff94 	bl	80022c4 <std>
 800239c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80023a0:	2201      	movs	r2, #1
 80023a2:	2109      	movs	r1, #9
 80023a4:	f7ff ff8e 	bl	80022c4 <std>
 80023a8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80023ac:	2202      	movs	r2, #2
 80023ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80023b2:	2112      	movs	r1, #18
 80023b4:	f7ff bf86 	b.w	80022c4 <std>
 80023b8:	20000354 	.word	0x20000354
 80023bc:	2000021c 	.word	0x2000021c
 80023c0:	08002331 	.word	0x08002331

080023c4 <__sfp_lock_acquire>:
 80023c4:	4801      	ldr	r0, [pc, #4]	@ (80023cc <__sfp_lock_acquire+0x8>)
 80023c6:	f000 b886 	b.w	80024d6 <__retarget_lock_acquire_recursive>
 80023ca:	bf00      	nop
 80023cc:	20000359 	.word	0x20000359

080023d0 <__sfp_lock_release>:
 80023d0:	4801      	ldr	r0, [pc, #4]	@ (80023d8 <__sfp_lock_release+0x8>)
 80023d2:	f000 b881 	b.w	80024d8 <__retarget_lock_release_recursive>
 80023d6:	bf00      	nop
 80023d8:	20000359 	.word	0x20000359

080023dc <__sinit>:
 80023dc:	b510      	push	{r4, lr}
 80023de:	4604      	mov	r4, r0
 80023e0:	f7ff fff0 	bl	80023c4 <__sfp_lock_acquire>
 80023e4:	6a23      	ldr	r3, [r4, #32]
 80023e6:	b11b      	cbz	r3, 80023f0 <__sinit+0x14>
 80023e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80023ec:	f7ff bff0 	b.w	80023d0 <__sfp_lock_release>
 80023f0:	4b04      	ldr	r3, [pc, #16]	@ (8002404 <__sinit+0x28>)
 80023f2:	6223      	str	r3, [r4, #32]
 80023f4:	4b04      	ldr	r3, [pc, #16]	@ (8002408 <__sinit+0x2c>)
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	2b00      	cmp	r3, #0
 80023fa:	d1f5      	bne.n	80023e8 <__sinit+0xc>
 80023fc:	f7ff ffc4 	bl	8002388 <global_stdio_init.part.0>
 8002400:	e7f2      	b.n	80023e8 <__sinit+0xc>
 8002402:	bf00      	nop
 8002404:	08002349 	.word	0x08002349
 8002408:	20000354 	.word	0x20000354

0800240c <_fwalk_sglue>:
 800240c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002410:	4607      	mov	r7, r0
 8002412:	4688      	mov	r8, r1
 8002414:	4614      	mov	r4, r2
 8002416:	2600      	movs	r6, #0
 8002418:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800241c:	f1b9 0901 	subs.w	r9, r9, #1
 8002420:	d505      	bpl.n	800242e <_fwalk_sglue+0x22>
 8002422:	6824      	ldr	r4, [r4, #0]
 8002424:	2c00      	cmp	r4, #0
 8002426:	d1f7      	bne.n	8002418 <_fwalk_sglue+0xc>
 8002428:	4630      	mov	r0, r6
 800242a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800242e:	89ab      	ldrh	r3, [r5, #12]
 8002430:	2b01      	cmp	r3, #1
 8002432:	d907      	bls.n	8002444 <_fwalk_sglue+0x38>
 8002434:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002438:	3301      	adds	r3, #1
 800243a:	d003      	beq.n	8002444 <_fwalk_sglue+0x38>
 800243c:	4629      	mov	r1, r5
 800243e:	4638      	mov	r0, r7
 8002440:	47c0      	blx	r8
 8002442:	4306      	orrs	r6, r0
 8002444:	3568      	adds	r5, #104	@ 0x68
 8002446:	e7e9      	b.n	800241c <_fwalk_sglue+0x10>

08002448 <memset>:
 8002448:	4402      	add	r2, r0
 800244a:	4603      	mov	r3, r0
 800244c:	4293      	cmp	r3, r2
 800244e:	d100      	bne.n	8002452 <memset+0xa>
 8002450:	4770      	bx	lr
 8002452:	f803 1b01 	strb.w	r1, [r3], #1
 8002456:	e7f9      	b.n	800244c <memset+0x4>

08002458 <_localeconv_r>:
 8002458:	4800      	ldr	r0, [pc, #0]	@ (800245c <_localeconv_r+0x4>)
 800245a:	4770      	bx	lr
 800245c:	20000174 	.word	0x20000174

08002460 <_sbrk_r>:
 8002460:	b538      	push	{r3, r4, r5, lr}
 8002462:	4d06      	ldr	r5, [pc, #24]	@ (800247c <_sbrk_r+0x1c>)
 8002464:	2300      	movs	r3, #0
 8002466:	4604      	mov	r4, r0
 8002468:	4608      	mov	r0, r1
 800246a:	602b      	str	r3, [r5, #0]
 800246c:	f7ff f99c 	bl	80017a8 <_sbrk>
 8002470:	1c43      	adds	r3, r0, #1
 8002472:	d102      	bne.n	800247a <_sbrk_r+0x1a>
 8002474:	682b      	ldr	r3, [r5, #0]
 8002476:	b103      	cbz	r3, 800247a <_sbrk_r+0x1a>
 8002478:	6023      	str	r3, [r4, #0]
 800247a:	bd38      	pop	{r3, r4, r5, pc}
 800247c:	2000035c 	.word	0x2000035c

08002480 <__errno>:
 8002480:	4b01      	ldr	r3, [pc, #4]	@ (8002488 <__errno+0x8>)
 8002482:	6818      	ldr	r0, [r3, #0]
 8002484:	4770      	bx	lr
 8002486:	bf00      	nop
 8002488:	20000034 	.word	0x20000034

0800248c <__libc_init_array>:
 800248c:	b570      	push	{r4, r5, r6, lr}
 800248e:	4d0d      	ldr	r5, [pc, #52]	@ (80024c4 <__libc_init_array+0x38>)
 8002490:	4c0d      	ldr	r4, [pc, #52]	@ (80024c8 <__libc_init_array+0x3c>)
 8002492:	1b64      	subs	r4, r4, r5
 8002494:	10a4      	asrs	r4, r4, #2
 8002496:	2600      	movs	r6, #0
 8002498:	42a6      	cmp	r6, r4
 800249a:	d109      	bne.n	80024b0 <__libc_init_array+0x24>
 800249c:	4d0b      	ldr	r5, [pc, #44]	@ (80024cc <__libc_init_array+0x40>)
 800249e:	4c0c      	ldr	r4, [pc, #48]	@ (80024d0 <__libc_init_array+0x44>)
 80024a0:	f002 f826 	bl	80044f0 <_init>
 80024a4:	1b64      	subs	r4, r4, r5
 80024a6:	10a4      	asrs	r4, r4, #2
 80024a8:	2600      	movs	r6, #0
 80024aa:	42a6      	cmp	r6, r4
 80024ac:	d105      	bne.n	80024ba <__libc_init_array+0x2e>
 80024ae:	bd70      	pop	{r4, r5, r6, pc}
 80024b0:	f855 3b04 	ldr.w	r3, [r5], #4
 80024b4:	4798      	blx	r3
 80024b6:	3601      	adds	r6, #1
 80024b8:	e7ee      	b.n	8002498 <__libc_init_array+0xc>
 80024ba:	f855 3b04 	ldr.w	r3, [r5], #4
 80024be:	4798      	blx	r3
 80024c0:	3601      	adds	r6, #1
 80024c2:	e7f2      	b.n	80024aa <__libc_init_array+0x1e>
 80024c4:	080049e8 	.word	0x080049e8
 80024c8:	080049e8 	.word	0x080049e8
 80024cc:	080049e8 	.word	0x080049e8
 80024d0:	080049ec 	.word	0x080049ec

080024d4 <__retarget_lock_init_recursive>:
 80024d4:	4770      	bx	lr

080024d6 <__retarget_lock_acquire_recursive>:
 80024d6:	4770      	bx	lr

080024d8 <__retarget_lock_release_recursive>:
 80024d8:	4770      	bx	lr

080024da <quorem>:
 80024da:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024de:	6903      	ldr	r3, [r0, #16]
 80024e0:	690c      	ldr	r4, [r1, #16]
 80024e2:	42a3      	cmp	r3, r4
 80024e4:	4607      	mov	r7, r0
 80024e6:	db7e      	blt.n	80025e6 <quorem+0x10c>
 80024e8:	3c01      	subs	r4, #1
 80024ea:	f101 0814 	add.w	r8, r1, #20
 80024ee:	00a3      	lsls	r3, r4, #2
 80024f0:	f100 0514 	add.w	r5, r0, #20
 80024f4:	9300      	str	r3, [sp, #0]
 80024f6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80024fa:	9301      	str	r3, [sp, #4]
 80024fc:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002500:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002504:	3301      	adds	r3, #1
 8002506:	429a      	cmp	r2, r3
 8002508:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800250c:	fbb2 f6f3 	udiv	r6, r2, r3
 8002510:	d32e      	bcc.n	8002570 <quorem+0x96>
 8002512:	f04f 0a00 	mov.w	sl, #0
 8002516:	46c4      	mov	ip, r8
 8002518:	46ae      	mov	lr, r5
 800251a:	46d3      	mov	fp, sl
 800251c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002520:	b298      	uxth	r0, r3
 8002522:	fb06 a000 	mla	r0, r6, r0, sl
 8002526:	0c02      	lsrs	r2, r0, #16
 8002528:	0c1b      	lsrs	r3, r3, #16
 800252a:	fb06 2303 	mla	r3, r6, r3, r2
 800252e:	f8de 2000 	ldr.w	r2, [lr]
 8002532:	b280      	uxth	r0, r0
 8002534:	b292      	uxth	r2, r2
 8002536:	1a12      	subs	r2, r2, r0
 8002538:	445a      	add	r2, fp
 800253a:	f8de 0000 	ldr.w	r0, [lr]
 800253e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002542:	b29b      	uxth	r3, r3
 8002544:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002548:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800254c:	b292      	uxth	r2, r2
 800254e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002552:	45e1      	cmp	r9, ip
 8002554:	f84e 2b04 	str.w	r2, [lr], #4
 8002558:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800255c:	d2de      	bcs.n	800251c <quorem+0x42>
 800255e:	9b00      	ldr	r3, [sp, #0]
 8002560:	58eb      	ldr	r3, [r5, r3]
 8002562:	b92b      	cbnz	r3, 8002570 <quorem+0x96>
 8002564:	9b01      	ldr	r3, [sp, #4]
 8002566:	3b04      	subs	r3, #4
 8002568:	429d      	cmp	r5, r3
 800256a:	461a      	mov	r2, r3
 800256c:	d32f      	bcc.n	80025ce <quorem+0xf4>
 800256e:	613c      	str	r4, [r7, #16]
 8002570:	4638      	mov	r0, r7
 8002572:	f001 fac9 	bl	8003b08 <__mcmp>
 8002576:	2800      	cmp	r0, #0
 8002578:	db25      	blt.n	80025c6 <quorem+0xec>
 800257a:	4629      	mov	r1, r5
 800257c:	2000      	movs	r0, #0
 800257e:	f858 2b04 	ldr.w	r2, [r8], #4
 8002582:	f8d1 c000 	ldr.w	ip, [r1]
 8002586:	fa1f fe82 	uxth.w	lr, r2
 800258a:	fa1f f38c 	uxth.w	r3, ip
 800258e:	eba3 030e 	sub.w	r3, r3, lr
 8002592:	4403      	add	r3, r0
 8002594:	0c12      	lsrs	r2, r2, #16
 8002596:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800259a:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800259e:	b29b      	uxth	r3, r3
 80025a0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80025a4:	45c1      	cmp	r9, r8
 80025a6:	f841 3b04 	str.w	r3, [r1], #4
 80025aa:	ea4f 4022 	mov.w	r0, r2, asr #16
 80025ae:	d2e6      	bcs.n	800257e <quorem+0xa4>
 80025b0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80025b4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80025b8:	b922      	cbnz	r2, 80025c4 <quorem+0xea>
 80025ba:	3b04      	subs	r3, #4
 80025bc:	429d      	cmp	r5, r3
 80025be:	461a      	mov	r2, r3
 80025c0:	d30b      	bcc.n	80025da <quorem+0x100>
 80025c2:	613c      	str	r4, [r7, #16]
 80025c4:	3601      	adds	r6, #1
 80025c6:	4630      	mov	r0, r6
 80025c8:	b003      	add	sp, #12
 80025ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80025ce:	6812      	ldr	r2, [r2, #0]
 80025d0:	3b04      	subs	r3, #4
 80025d2:	2a00      	cmp	r2, #0
 80025d4:	d1cb      	bne.n	800256e <quorem+0x94>
 80025d6:	3c01      	subs	r4, #1
 80025d8:	e7c6      	b.n	8002568 <quorem+0x8e>
 80025da:	6812      	ldr	r2, [r2, #0]
 80025dc:	3b04      	subs	r3, #4
 80025de:	2a00      	cmp	r2, #0
 80025e0:	d1ef      	bne.n	80025c2 <quorem+0xe8>
 80025e2:	3c01      	subs	r4, #1
 80025e4:	e7ea      	b.n	80025bc <quorem+0xe2>
 80025e6:	2000      	movs	r0, #0
 80025e8:	e7ee      	b.n	80025c8 <quorem+0xee>
 80025ea:	0000      	movs	r0, r0
 80025ec:	0000      	movs	r0, r0
	...

080025f0 <_dtoa_r>:
 80025f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025f4:	69c7      	ldr	r7, [r0, #28]
 80025f6:	b097      	sub	sp, #92	@ 0x5c
 80025f8:	4614      	mov	r4, r2
 80025fa:	461d      	mov	r5, r3
 80025fc:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8002600:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8002602:	4683      	mov	fp, r0
 8002604:	b97f      	cbnz	r7, 8002626 <_dtoa_r+0x36>
 8002606:	2010      	movs	r0, #16
 8002608:	f7ff fbf8 	bl	8001dfc <malloc>
 800260c:	4602      	mov	r2, r0
 800260e:	f8cb 001c 	str.w	r0, [fp, #28]
 8002612:	b920      	cbnz	r0, 800261e <_dtoa_r+0x2e>
 8002614:	4ba8      	ldr	r3, [pc, #672]	@ (80028b8 <_dtoa_r+0x2c8>)
 8002616:	21ef      	movs	r1, #239	@ 0xef
 8002618:	48a8      	ldr	r0, [pc, #672]	@ (80028bc <_dtoa_r+0x2cc>)
 800261a:	f001 fc5b 	bl	8003ed4 <__assert_func>
 800261e:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002622:	6007      	str	r7, [r0, #0]
 8002624:	60c7      	str	r7, [r0, #12]
 8002626:	f8db 301c 	ldr.w	r3, [fp, #28]
 800262a:	6819      	ldr	r1, [r3, #0]
 800262c:	b159      	cbz	r1, 8002646 <_dtoa_r+0x56>
 800262e:	685a      	ldr	r2, [r3, #4]
 8002630:	604a      	str	r2, [r1, #4]
 8002632:	2301      	movs	r3, #1
 8002634:	4093      	lsls	r3, r2
 8002636:	608b      	str	r3, [r1, #8]
 8002638:	4658      	mov	r0, fp
 800263a:	f001 f82b 	bl	8003694 <_Bfree>
 800263e:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002642:	2200      	movs	r2, #0
 8002644:	601a      	str	r2, [r3, #0]
 8002646:	1e2b      	subs	r3, r5, #0
 8002648:	bfb9      	ittee	lt
 800264a:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800264e:	9303      	strlt	r3, [sp, #12]
 8002650:	2300      	movge	r3, #0
 8002652:	6033      	strge	r3, [r6, #0]
 8002654:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8002658:	4b99      	ldr	r3, [pc, #612]	@ (80028c0 <_dtoa_r+0x2d0>)
 800265a:	bfbc      	itt	lt
 800265c:	2201      	movlt	r2, #1
 800265e:	6032      	strlt	r2, [r6, #0]
 8002660:	ea33 0308 	bics.w	r3, r3, r8
 8002664:	d112      	bne.n	800268c <_dtoa_r+0x9c>
 8002666:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002668:	f242 730f 	movw	r3, #9999	@ 0x270f
 800266c:	6013      	str	r3, [r2, #0]
 800266e:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8002672:	4323      	orrs	r3, r4
 8002674:	f000 8551 	beq.w	800311a <_dtoa_r+0xb2a>
 8002678:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800267a:	f8df a248 	ldr.w	sl, [pc, #584]	@ 80028c4 <_dtoa_r+0x2d4>
 800267e:	2b00      	cmp	r3, #0
 8002680:	f000 8553 	beq.w	800312a <_dtoa_r+0xb3a>
 8002684:	f10a 0303 	add.w	r3, sl, #3
 8002688:	f000 bd4d 	b.w	8003126 <_dtoa_r+0xb36>
 800268c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002690:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8002694:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002698:	2200      	movs	r2, #0
 800269a:	2300      	movs	r3, #0
 800269c:	f7fe fad0 	bl	8000c40 <__aeabi_dcmpeq>
 80026a0:	4607      	mov	r7, r0
 80026a2:	b158      	cbz	r0, 80026bc <_dtoa_r+0xcc>
 80026a4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80026a6:	2301      	movs	r3, #1
 80026a8:	6013      	str	r3, [r2, #0]
 80026aa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80026ac:	b113      	cbz	r3, 80026b4 <_dtoa_r+0xc4>
 80026ae:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80026b0:	4b85      	ldr	r3, [pc, #532]	@ (80028c8 <_dtoa_r+0x2d8>)
 80026b2:	6013      	str	r3, [r2, #0]
 80026b4:	f8df a214 	ldr.w	sl, [pc, #532]	@ 80028cc <_dtoa_r+0x2dc>
 80026b8:	f000 bd37 	b.w	800312a <_dtoa_r+0xb3a>
 80026bc:	ab14      	add	r3, sp, #80	@ 0x50
 80026be:	9301      	str	r3, [sp, #4]
 80026c0:	ab15      	add	r3, sp, #84	@ 0x54
 80026c2:	9300      	str	r3, [sp, #0]
 80026c4:	4658      	mov	r0, fp
 80026c6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80026ca:	f001 facb 	bl	8003c64 <__d2b>
 80026ce:	f3c8 560a 	ubfx	r6, r8, #20, #11
 80026d2:	4681      	mov	r9, r0
 80026d4:	2e00      	cmp	r6, #0
 80026d6:	d076      	beq.n	80027c6 <_dtoa_r+0x1d6>
 80026d8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80026da:	9712      	str	r7, [sp, #72]	@ 0x48
 80026dc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80026e0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80026e4:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80026e8:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80026ec:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80026f0:	4619      	mov	r1, r3
 80026f2:	2200      	movs	r2, #0
 80026f4:	4b76      	ldr	r3, [pc, #472]	@ (80028d0 <_dtoa_r+0x2e0>)
 80026f6:	f7fd fe83 	bl	8000400 <__aeabi_dsub>
 80026fa:	a369      	add	r3, pc, #420	@ (adr r3, 80028a0 <_dtoa_r+0x2b0>)
 80026fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002700:	f7fe f836 	bl	8000770 <__aeabi_dmul>
 8002704:	a368      	add	r3, pc, #416	@ (adr r3, 80028a8 <_dtoa_r+0x2b8>)
 8002706:	e9d3 2300 	ldrd	r2, r3, [r3]
 800270a:	f7fd fe7b 	bl	8000404 <__adddf3>
 800270e:	4604      	mov	r4, r0
 8002710:	4630      	mov	r0, r6
 8002712:	460d      	mov	r5, r1
 8002714:	f7fd ffc2 	bl	800069c <__aeabi_i2d>
 8002718:	a365      	add	r3, pc, #404	@ (adr r3, 80028b0 <_dtoa_r+0x2c0>)
 800271a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800271e:	f7fe f827 	bl	8000770 <__aeabi_dmul>
 8002722:	4602      	mov	r2, r0
 8002724:	460b      	mov	r3, r1
 8002726:	4620      	mov	r0, r4
 8002728:	4629      	mov	r1, r5
 800272a:	f7fd fe6b 	bl	8000404 <__adddf3>
 800272e:	4604      	mov	r4, r0
 8002730:	460d      	mov	r5, r1
 8002732:	f7fe facd 	bl	8000cd0 <__aeabi_d2iz>
 8002736:	2200      	movs	r2, #0
 8002738:	4607      	mov	r7, r0
 800273a:	2300      	movs	r3, #0
 800273c:	4620      	mov	r0, r4
 800273e:	4629      	mov	r1, r5
 8002740:	f7fe fa88 	bl	8000c54 <__aeabi_dcmplt>
 8002744:	b140      	cbz	r0, 8002758 <_dtoa_r+0x168>
 8002746:	4638      	mov	r0, r7
 8002748:	f7fd ffa8 	bl	800069c <__aeabi_i2d>
 800274c:	4622      	mov	r2, r4
 800274e:	462b      	mov	r3, r5
 8002750:	f7fe fa76 	bl	8000c40 <__aeabi_dcmpeq>
 8002754:	b900      	cbnz	r0, 8002758 <_dtoa_r+0x168>
 8002756:	3f01      	subs	r7, #1
 8002758:	2f16      	cmp	r7, #22
 800275a:	d852      	bhi.n	8002802 <_dtoa_r+0x212>
 800275c:	4b5d      	ldr	r3, [pc, #372]	@ (80028d4 <_dtoa_r+0x2e4>)
 800275e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002762:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002766:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800276a:	f7fe fa73 	bl	8000c54 <__aeabi_dcmplt>
 800276e:	2800      	cmp	r0, #0
 8002770:	d049      	beq.n	8002806 <_dtoa_r+0x216>
 8002772:	3f01      	subs	r7, #1
 8002774:	2300      	movs	r3, #0
 8002776:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002778:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800277a:	1b9b      	subs	r3, r3, r6
 800277c:	1e5a      	subs	r2, r3, #1
 800277e:	bf44      	itt	mi
 8002780:	f1c3 0801 	rsbmi	r8, r3, #1
 8002784:	2300      	movmi	r3, #0
 8002786:	9209      	str	r2, [sp, #36]	@ 0x24
 8002788:	bf54      	ite	pl
 800278a:	f04f 0800 	movpl.w	r8, #0
 800278e:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8002790:	2f00      	cmp	r7, #0
 8002792:	db3a      	blt.n	800280a <_dtoa_r+0x21a>
 8002794:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002796:	970e      	str	r7, [sp, #56]	@ 0x38
 8002798:	443b      	add	r3, r7
 800279a:	9309      	str	r3, [sp, #36]	@ 0x24
 800279c:	2300      	movs	r3, #0
 800279e:	930a      	str	r3, [sp, #40]	@ 0x28
 80027a0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80027a2:	2b09      	cmp	r3, #9
 80027a4:	d865      	bhi.n	8002872 <_dtoa_r+0x282>
 80027a6:	2b05      	cmp	r3, #5
 80027a8:	bfc4      	itt	gt
 80027aa:	3b04      	subgt	r3, #4
 80027ac:	9320      	strgt	r3, [sp, #128]	@ 0x80
 80027ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80027b0:	f1a3 0302 	sub.w	r3, r3, #2
 80027b4:	bfcc      	ite	gt
 80027b6:	2400      	movgt	r4, #0
 80027b8:	2401      	movle	r4, #1
 80027ba:	2b03      	cmp	r3, #3
 80027bc:	d864      	bhi.n	8002888 <_dtoa_r+0x298>
 80027be:	e8df f003 	tbb	[pc, r3]
 80027c2:	382b      	.short	0x382b
 80027c4:	5636      	.short	0x5636
 80027c6:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 80027ca:	441e      	add	r6, r3
 80027cc:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80027d0:	2b20      	cmp	r3, #32
 80027d2:	bfc1      	itttt	gt
 80027d4:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80027d8:	fa08 f803 	lslgt.w	r8, r8, r3
 80027dc:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80027e0:	fa24 f303 	lsrgt.w	r3, r4, r3
 80027e4:	bfd6      	itet	le
 80027e6:	f1c3 0320 	rsble	r3, r3, #32
 80027ea:	ea48 0003 	orrgt.w	r0, r8, r3
 80027ee:	fa04 f003 	lslle.w	r0, r4, r3
 80027f2:	f7fd ff43 	bl	800067c <__aeabi_ui2d>
 80027f6:	2201      	movs	r2, #1
 80027f8:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80027fc:	3e01      	subs	r6, #1
 80027fe:	9212      	str	r2, [sp, #72]	@ 0x48
 8002800:	e776      	b.n	80026f0 <_dtoa_r+0x100>
 8002802:	2301      	movs	r3, #1
 8002804:	e7b7      	b.n	8002776 <_dtoa_r+0x186>
 8002806:	900f      	str	r0, [sp, #60]	@ 0x3c
 8002808:	e7b6      	b.n	8002778 <_dtoa_r+0x188>
 800280a:	427b      	negs	r3, r7
 800280c:	930a      	str	r3, [sp, #40]	@ 0x28
 800280e:	2300      	movs	r3, #0
 8002810:	eba8 0807 	sub.w	r8, r8, r7
 8002814:	930e      	str	r3, [sp, #56]	@ 0x38
 8002816:	e7c3      	b.n	80027a0 <_dtoa_r+0x1b0>
 8002818:	2300      	movs	r3, #0
 800281a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800281c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800281e:	2b00      	cmp	r3, #0
 8002820:	dc35      	bgt.n	800288e <_dtoa_r+0x29e>
 8002822:	2301      	movs	r3, #1
 8002824:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002828:	461a      	mov	r2, r3
 800282a:	9221      	str	r2, [sp, #132]	@ 0x84
 800282c:	e00b      	b.n	8002846 <_dtoa_r+0x256>
 800282e:	2301      	movs	r3, #1
 8002830:	e7f3      	b.n	800281a <_dtoa_r+0x22a>
 8002832:	2300      	movs	r3, #0
 8002834:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002836:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002838:	18fb      	adds	r3, r7, r3
 800283a:	9308      	str	r3, [sp, #32]
 800283c:	3301      	adds	r3, #1
 800283e:	2b01      	cmp	r3, #1
 8002840:	9307      	str	r3, [sp, #28]
 8002842:	bfb8      	it	lt
 8002844:	2301      	movlt	r3, #1
 8002846:	f8db 001c 	ldr.w	r0, [fp, #28]
 800284a:	2100      	movs	r1, #0
 800284c:	2204      	movs	r2, #4
 800284e:	f102 0514 	add.w	r5, r2, #20
 8002852:	429d      	cmp	r5, r3
 8002854:	d91f      	bls.n	8002896 <_dtoa_r+0x2a6>
 8002856:	6041      	str	r1, [r0, #4]
 8002858:	4658      	mov	r0, fp
 800285a:	f000 fedb 	bl	8003614 <_Balloc>
 800285e:	4682      	mov	sl, r0
 8002860:	2800      	cmp	r0, #0
 8002862:	d13b      	bne.n	80028dc <_dtoa_r+0x2ec>
 8002864:	4b1c      	ldr	r3, [pc, #112]	@ (80028d8 <_dtoa_r+0x2e8>)
 8002866:	4602      	mov	r2, r0
 8002868:	f240 11af 	movw	r1, #431	@ 0x1af
 800286c:	e6d4      	b.n	8002618 <_dtoa_r+0x28>
 800286e:	2301      	movs	r3, #1
 8002870:	e7e0      	b.n	8002834 <_dtoa_r+0x244>
 8002872:	2401      	movs	r4, #1
 8002874:	2300      	movs	r3, #0
 8002876:	9320      	str	r3, [sp, #128]	@ 0x80
 8002878:	940b      	str	r4, [sp, #44]	@ 0x2c
 800287a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800287e:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002882:	2200      	movs	r2, #0
 8002884:	2312      	movs	r3, #18
 8002886:	e7d0      	b.n	800282a <_dtoa_r+0x23a>
 8002888:	2301      	movs	r3, #1
 800288a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800288c:	e7f5      	b.n	800287a <_dtoa_r+0x28a>
 800288e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002890:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002894:	e7d7      	b.n	8002846 <_dtoa_r+0x256>
 8002896:	3101      	adds	r1, #1
 8002898:	0052      	lsls	r2, r2, #1
 800289a:	e7d8      	b.n	800284e <_dtoa_r+0x25e>
 800289c:	f3af 8000 	nop.w
 80028a0:	636f4361 	.word	0x636f4361
 80028a4:	3fd287a7 	.word	0x3fd287a7
 80028a8:	8b60c8b3 	.word	0x8b60c8b3
 80028ac:	3fc68a28 	.word	0x3fc68a28
 80028b0:	509f79fb 	.word	0x509f79fb
 80028b4:	3fd34413 	.word	0x3fd34413
 80028b8:	080046ae 	.word	0x080046ae
 80028bc:	080046c5 	.word	0x080046c5
 80028c0:	7ff00000 	.word	0x7ff00000
 80028c4:	080046aa 	.word	0x080046aa
 80028c8:	0800467e 	.word	0x0800467e
 80028cc:	0800467d 	.word	0x0800467d
 80028d0:	3ff80000 	.word	0x3ff80000
 80028d4:	080047d0 	.word	0x080047d0
 80028d8:	0800471d 	.word	0x0800471d
 80028dc:	f8db 301c 	ldr.w	r3, [fp, #28]
 80028e0:	6018      	str	r0, [r3, #0]
 80028e2:	9b07      	ldr	r3, [sp, #28]
 80028e4:	2b0e      	cmp	r3, #14
 80028e6:	f200 80a4 	bhi.w	8002a32 <_dtoa_r+0x442>
 80028ea:	2c00      	cmp	r4, #0
 80028ec:	f000 80a1 	beq.w	8002a32 <_dtoa_r+0x442>
 80028f0:	2f00      	cmp	r7, #0
 80028f2:	dd33      	ble.n	800295c <_dtoa_r+0x36c>
 80028f4:	4b86      	ldr	r3, [pc, #536]	@ (8002b10 <_dtoa_r+0x520>)
 80028f6:	f007 020f 	and.w	r2, r7, #15
 80028fa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80028fe:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002902:	05f8      	lsls	r0, r7, #23
 8002904:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002908:	ea4f 1427 	mov.w	r4, r7, asr #4
 800290c:	d516      	bpl.n	800293c <_dtoa_r+0x34c>
 800290e:	4b81      	ldr	r3, [pc, #516]	@ (8002b14 <_dtoa_r+0x524>)
 8002910:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002914:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002918:	f7fe f854 	bl	80009c4 <__aeabi_ddiv>
 800291c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002920:	f004 040f 	and.w	r4, r4, #15
 8002924:	2603      	movs	r6, #3
 8002926:	4d7b      	ldr	r5, [pc, #492]	@ (8002b14 <_dtoa_r+0x524>)
 8002928:	b954      	cbnz	r4, 8002940 <_dtoa_r+0x350>
 800292a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800292e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002932:	f7fe f847 	bl	80009c4 <__aeabi_ddiv>
 8002936:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800293a:	e028      	b.n	800298e <_dtoa_r+0x39e>
 800293c:	2602      	movs	r6, #2
 800293e:	e7f2      	b.n	8002926 <_dtoa_r+0x336>
 8002940:	07e1      	lsls	r1, r4, #31
 8002942:	d508      	bpl.n	8002956 <_dtoa_r+0x366>
 8002944:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002948:	e9d5 2300 	ldrd	r2, r3, [r5]
 800294c:	f7fd ff10 	bl	8000770 <__aeabi_dmul>
 8002950:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002954:	3601      	adds	r6, #1
 8002956:	1064      	asrs	r4, r4, #1
 8002958:	3508      	adds	r5, #8
 800295a:	e7e5      	b.n	8002928 <_dtoa_r+0x338>
 800295c:	f000 80d2 	beq.w	8002b04 <_dtoa_r+0x514>
 8002960:	427c      	negs	r4, r7
 8002962:	4b6b      	ldr	r3, [pc, #428]	@ (8002b10 <_dtoa_r+0x520>)
 8002964:	4d6b      	ldr	r5, [pc, #428]	@ (8002b14 <_dtoa_r+0x524>)
 8002966:	f004 020f 	and.w	r2, r4, #15
 800296a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800296e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002972:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002976:	f7fd fefb 	bl	8000770 <__aeabi_dmul>
 800297a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800297e:	1124      	asrs	r4, r4, #4
 8002980:	2300      	movs	r3, #0
 8002982:	2602      	movs	r6, #2
 8002984:	2c00      	cmp	r4, #0
 8002986:	f040 80b2 	bne.w	8002aee <_dtoa_r+0x4fe>
 800298a:	2b00      	cmp	r3, #0
 800298c:	d1d3      	bne.n	8002936 <_dtoa_r+0x346>
 800298e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002990:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002994:	2b00      	cmp	r3, #0
 8002996:	f000 80b7 	beq.w	8002b08 <_dtoa_r+0x518>
 800299a:	4b5f      	ldr	r3, [pc, #380]	@ (8002b18 <_dtoa_r+0x528>)
 800299c:	2200      	movs	r2, #0
 800299e:	4620      	mov	r0, r4
 80029a0:	4629      	mov	r1, r5
 80029a2:	f7fe f957 	bl	8000c54 <__aeabi_dcmplt>
 80029a6:	2800      	cmp	r0, #0
 80029a8:	f000 80ae 	beq.w	8002b08 <_dtoa_r+0x518>
 80029ac:	9b07      	ldr	r3, [sp, #28]
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	f000 80aa 	beq.w	8002b08 <_dtoa_r+0x518>
 80029b4:	9b08      	ldr	r3, [sp, #32]
 80029b6:	2b00      	cmp	r3, #0
 80029b8:	dd37      	ble.n	8002a2a <_dtoa_r+0x43a>
 80029ba:	1e7b      	subs	r3, r7, #1
 80029bc:	9304      	str	r3, [sp, #16]
 80029be:	4620      	mov	r0, r4
 80029c0:	4b56      	ldr	r3, [pc, #344]	@ (8002b1c <_dtoa_r+0x52c>)
 80029c2:	2200      	movs	r2, #0
 80029c4:	4629      	mov	r1, r5
 80029c6:	f7fd fed3 	bl	8000770 <__aeabi_dmul>
 80029ca:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80029ce:	9c08      	ldr	r4, [sp, #32]
 80029d0:	3601      	adds	r6, #1
 80029d2:	4630      	mov	r0, r6
 80029d4:	f7fd fe62 	bl	800069c <__aeabi_i2d>
 80029d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80029dc:	f7fd fec8 	bl	8000770 <__aeabi_dmul>
 80029e0:	4b4f      	ldr	r3, [pc, #316]	@ (8002b20 <_dtoa_r+0x530>)
 80029e2:	2200      	movs	r2, #0
 80029e4:	f7fd fd0e 	bl	8000404 <__adddf3>
 80029e8:	4605      	mov	r5, r0
 80029ea:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 80029ee:	2c00      	cmp	r4, #0
 80029f0:	f040 809a 	bne.w	8002b28 <_dtoa_r+0x538>
 80029f4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029f8:	4b4a      	ldr	r3, [pc, #296]	@ (8002b24 <_dtoa_r+0x534>)
 80029fa:	2200      	movs	r2, #0
 80029fc:	f7fd fd00 	bl	8000400 <__aeabi_dsub>
 8002a00:	4602      	mov	r2, r0
 8002a02:	460b      	mov	r3, r1
 8002a04:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002a08:	462a      	mov	r2, r5
 8002a0a:	4633      	mov	r3, r6
 8002a0c:	f7fe f940 	bl	8000c90 <__aeabi_dcmpgt>
 8002a10:	2800      	cmp	r0, #0
 8002a12:	f040 828e 	bne.w	8002f32 <_dtoa_r+0x942>
 8002a16:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a1a:	462a      	mov	r2, r5
 8002a1c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002a20:	f7fe f918 	bl	8000c54 <__aeabi_dcmplt>
 8002a24:	2800      	cmp	r0, #0
 8002a26:	f040 8127 	bne.w	8002c78 <_dtoa_r+0x688>
 8002a2a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002a2e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002a32:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002a34:	2b00      	cmp	r3, #0
 8002a36:	f2c0 8163 	blt.w	8002d00 <_dtoa_r+0x710>
 8002a3a:	2f0e      	cmp	r7, #14
 8002a3c:	f300 8160 	bgt.w	8002d00 <_dtoa_r+0x710>
 8002a40:	4b33      	ldr	r3, [pc, #204]	@ (8002b10 <_dtoa_r+0x520>)
 8002a42:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002a46:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002a4a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002a4e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002a50:	2b00      	cmp	r3, #0
 8002a52:	da03      	bge.n	8002a5c <_dtoa_r+0x46c>
 8002a54:	9b07      	ldr	r3, [sp, #28]
 8002a56:	2b00      	cmp	r3, #0
 8002a58:	f340 8100 	ble.w	8002c5c <_dtoa_r+0x66c>
 8002a5c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002a60:	4656      	mov	r6, sl
 8002a62:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a66:	4620      	mov	r0, r4
 8002a68:	4629      	mov	r1, r5
 8002a6a:	f7fd ffab 	bl	80009c4 <__aeabi_ddiv>
 8002a6e:	f7fe f92f 	bl	8000cd0 <__aeabi_d2iz>
 8002a72:	4680      	mov	r8, r0
 8002a74:	f7fd fe12 	bl	800069c <__aeabi_i2d>
 8002a78:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a7c:	f7fd fe78 	bl	8000770 <__aeabi_dmul>
 8002a80:	4602      	mov	r2, r0
 8002a82:	460b      	mov	r3, r1
 8002a84:	4620      	mov	r0, r4
 8002a86:	4629      	mov	r1, r5
 8002a88:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002a8c:	f7fd fcb8 	bl	8000400 <__aeabi_dsub>
 8002a90:	f806 4b01 	strb.w	r4, [r6], #1
 8002a94:	9d07      	ldr	r5, [sp, #28]
 8002a96:	eba6 040a 	sub.w	r4, r6, sl
 8002a9a:	42a5      	cmp	r5, r4
 8002a9c:	4602      	mov	r2, r0
 8002a9e:	460b      	mov	r3, r1
 8002aa0:	f040 8116 	bne.w	8002cd0 <_dtoa_r+0x6e0>
 8002aa4:	f7fd fcae 	bl	8000404 <__adddf3>
 8002aa8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002aac:	4604      	mov	r4, r0
 8002aae:	460d      	mov	r5, r1
 8002ab0:	f7fe f8ee 	bl	8000c90 <__aeabi_dcmpgt>
 8002ab4:	2800      	cmp	r0, #0
 8002ab6:	f040 80f8 	bne.w	8002caa <_dtoa_r+0x6ba>
 8002aba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002abe:	4620      	mov	r0, r4
 8002ac0:	4629      	mov	r1, r5
 8002ac2:	f7fe f8bd 	bl	8000c40 <__aeabi_dcmpeq>
 8002ac6:	b118      	cbz	r0, 8002ad0 <_dtoa_r+0x4e0>
 8002ac8:	f018 0f01 	tst.w	r8, #1
 8002acc:	f040 80ed 	bne.w	8002caa <_dtoa_r+0x6ba>
 8002ad0:	4649      	mov	r1, r9
 8002ad2:	4658      	mov	r0, fp
 8002ad4:	f000 fdde 	bl	8003694 <_Bfree>
 8002ad8:	2300      	movs	r3, #0
 8002ada:	7033      	strb	r3, [r6, #0]
 8002adc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8002ade:	3701      	adds	r7, #1
 8002ae0:	601f      	str	r7, [r3, #0]
 8002ae2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002ae4:	2b00      	cmp	r3, #0
 8002ae6:	f000 8320 	beq.w	800312a <_dtoa_r+0xb3a>
 8002aea:	601e      	str	r6, [r3, #0]
 8002aec:	e31d      	b.n	800312a <_dtoa_r+0xb3a>
 8002aee:	07e2      	lsls	r2, r4, #31
 8002af0:	d505      	bpl.n	8002afe <_dtoa_r+0x50e>
 8002af2:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002af6:	f7fd fe3b 	bl	8000770 <__aeabi_dmul>
 8002afa:	3601      	adds	r6, #1
 8002afc:	2301      	movs	r3, #1
 8002afe:	1064      	asrs	r4, r4, #1
 8002b00:	3508      	adds	r5, #8
 8002b02:	e73f      	b.n	8002984 <_dtoa_r+0x394>
 8002b04:	2602      	movs	r6, #2
 8002b06:	e742      	b.n	800298e <_dtoa_r+0x39e>
 8002b08:	9c07      	ldr	r4, [sp, #28]
 8002b0a:	9704      	str	r7, [sp, #16]
 8002b0c:	e761      	b.n	80029d2 <_dtoa_r+0x3e2>
 8002b0e:	bf00      	nop
 8002b10:	080047d0 	.word	0x080047d0
 8002b14:	080047a8 	.word	0x080047a8
 8002b18:	3ff00000 	.word	0x3ff00000
 8002b1c:	40240000 	.word	0x40240000
 8002b20:	401c0000 	.word	0x401c0000
 8002b24:	40140000 	.word	0x40140000
 8002b28:	4b70      	ldr	r3, [pc, #448]	@ (8002cec <_dtoa_r+0x6fc>)
 8002b2a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002b2c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002b30:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002b34:	4454      	add	r4, sl
 8002b36:	2900      	cmp	r1, #0
 8002b38:	d045      	beq.n	8002bc6 <_dtoa_r+0x5d6>
 8002b3a:	496d      	ldr	r1, [pc, #436]	@ (8002cf0 <_dtoa_r+0x700>)
 8002b3c:	2000      	movs	r0, #0
 8002b3e:	f7fd ff41 	bl	80009c4 <__aeabi_ddiv>
 8002b42:	4633      	mov	r3, r6
 8002b44:	462a      	mov	r2, r5
 8002b46:	f7fd fc5b 	bl	8000400 <__aeabi_dsub>
 8002b4a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002b4e:	4656      	mov	r6, sl
 8002b50:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b54:	f7fe f8bc 	bl	8000cd0 <__aeabi_d2iz>
 8002b58:	4605      	mov	r5, r0
 8002b5a:	f7fd fd9f 	bl	800069c <__aeabi_i2d>
 8002b5e:	4602      	mov	r2, r0
 8002b60:	460b      	mov	r3, r1
 8002b62:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b66:	f7fd fc4b 	bl	8000400 <__aeabi_dsub>
 8002b6a:	3530      	adds	r5, #48	@ 0x30
 8002b6c:	4602      	mov	r2, r0
 8002b6e:	460b      	mov	r3, r1
 8002b70:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002b74:	f806 5b01 	strb.w	r5, [r6], #1
 8002b78:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002b7c:	f7fe f86a 	bl	8000c54 <__aeabi_dcmplt>
 8002b80:	2800      	cmp	r0, #0
 8002b82:	d163      	bne.n	8002c4c <_dtoa_r+0x65c>
 8002b84:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b88:	495a      	ldr	r1, [pc, #360]	@ (8002cf4 <_dtoa_r+0x704>)
 8002b8a:	2000      	movs	r0, #0
 8002b8c:	f7fd fc38 	bl	8000400 <__aeabi_dsub>
 8002b90:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002b94:	f7fe f85e 	bl	8000c54 <__aeabi_dcmplt>
 8002b98:	2800      	cmp	r0, #0
 8002b9a:	f040 8087 	bne.w	8002cac <_dtoa_r+0x6bc>
 8002b9e:	42a6      	cmp	r6, r4
 8002ba0:	f43f af43 	beq.w	8002a2a <_dtoa_r+0x43a>
 8002ba4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002ba8:	4b53      	ldr	r3, [pc, #332]	@ (8002cf8 <_dtoa_r+0x708>)
 8002baa:	2200      	movs	r2, #0
 8002bac:	f7fd fde0 	bl	8000770 <__aeabi_dmul>
 8002bb0:	4b51      	ldr	r3, [pc, #324]	@ (8002cf8 <_dtoa_r+0x708>)
 8002bb2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002bb6:	2200      	movs	r2, #0
 8002bb8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bbc:	f7fd fdd8 	bl	8000770 <__aeabi_dmul>
 8002bc0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002bc4:	e7c4      	b.n	8002b50 <_dtoa_r+0x560>
 8002bc6:	4631      	mov	r1, r6
 8002bc8:	4628      	mov	r0, r5
 8002bca:	f7fd fdd1 	bl	8000770 <__aeabi_dmul>
 8002bce:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002bd2:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002bd4:	4656      	mov	r6, sl
 8002bd6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bda:	f7fe f879 	bl	8000cd0 <__aeabi_d2iz>
 8002bde:	4605      	mov	r5, r0
 8002be0:	f7fd fd5c 	bl	800069c <__aeabi_i2d>
 8002be4:	4602      	mov	r2, r0
 8002be6:	460b      	mov	r3, r1
 8002be8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bec:	f7fd fc08 	bl	8000400 <__aeabi_dsub>
 8002bf0:	3530      	adds	r5, #48	@ 0x30
 8002bf2:	f806 5b01 	strb.w	r5, [r6], #1
 8002bf6:	4602      	mov	r2, r0
 8002bf8:	460b      	mov	r3, r1
 8002bfa:	42a6      	cmp	r6, r4
 8002bfc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002c00:	f04f 0200 	mov.w	r2, #0
 8002c04:	d124      	bne.n	8002c50 <_dtoa_r+0x660>
 8002c06:	4b3a      	ldr	r3, [pc, #232]	@ (8002cf0 <_dtoa_r+0x700>)
 8002c08:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002c0c:	f7fd fbfa 	bl	8000404 <__adddf3>
 8002c10:	4602      	mov	r2, r0
 8002c12:	460b      	mov	r3, r1
 8002c14:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c18:	f7fe f83a 	bl	8000c90 <__aeabi_dcmpgt>
 8002c1c:	2800      	cmp	r0, #0
 8002c1e:	d145      	bne.n	8002cac <_dtoa_r+0x6bc>
 8002c20:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002c24:	4932      	ldr	r1, [pc, #200]	@ (8002cf0 <_dtoa_r+0x700>)
 8002c26:	2000      	movs	r0, #0
 8002c28:	f7fd fbea 	bl	8000400 <__aeabi_dsub>
 8002c2c:	4602      	mov	r2, r0
 8002c2e:	460b      	mov	r3, r1
 8002c30:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c34:	f7fe f80e 	bl	8000c54 <__aeabi_dcmplt>
 8002c38:	2800      	cmp	r0, #0
 8002c3a:	f43f aef6 	beq.w	8002a2a <_dtoa_r+0x43a>
 8002c3e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8002c40:	1e73      	subs	r3, r6, #1
 8002c42:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002c44:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002c48:	2b30      	cmp	r3, #48	@ 0x30
 8002c4a:	d0f8      	beq.n	8002c3e <_dtoa_r+0x64e>
 8002c4c:	9f04      	ldr	r7, [sp, #16]
 8002c4e:	e73f      	b.n	8002ad0 <_dtoa_r+0x4e0>
 8002c50:	4b29      	ldr	r3, [pc, #164]	@ (8002cf8 <_dtoa_r+0x708>)
 8002c52:	f7fd fd8d 	bl	8000770 <__aeabi_dmul>
 8002c56:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002c5a:	e7bc      	b.n	8002bd6 <_dtoa_r+0x5e6>
 8002c5c:	d10c      	bne.n	8002c78 <_dtoa_r+0x688>
 8002c5e:	4b27      	ldr	r3, [pc, #156]	@ (8002cfc <_dtoa_r+0x70c>)
 8002c60:	2200      	movs	r2, #0
 8002c62:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002c66:	f7fd fd83 	bl	8000770 <__aeabi_dmul>
 8002c6a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002c6e:	f7fe f805 	bl	8000c7c <__aeabi_dcmpge>
 8002c72:	2800      	cmp	r0, #0
 8002c74:	f000 815b 	beq.w	8002f2e <_dtoa_r+0x93e>
 8002c78:	2400      	movs	r4, #0
 8002c7a:	4625      	mov	r5, r4
 8002c7c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002c7e:	43db      	mvns	r3, r3
 8002c80:	9304      	str	r3, [sp, #16]
 8002c82:	4656      	mov	r6, sl
 8002c84:	2700      	movs	r7, #0
 8002c86:	4621      	mov	r1, r4
 8002c88:	4658      	mov	r0, fp
 8002c8a:	f000 fd03 	bl	8003694 <_Bfree>
 8002c8e:	2d00      	cmp	r5, #0
 8002c90:	d0dc      	beq.n	8002c4c <_dtoa_r+0x65c>
 8002c92:	b12f      	cbz	r7, 8002ca0 <_dtoa_r+0x6b0>
 8002c94:	42af      	cmp	r7, r5
 8002c96:	d003      	beq.n	8002ca0 <_dtoa_r+0x6b0>
 8002c98:	4639      	mov	r1, r7
 8002c9a:	4658      	mov	r0, fp
 8002c9c:	f000 fcfa 	bl	8003694 <_Bfree>
 8002ca0:	4629      	mov	r1, r5
 8002ca2:	4658      	mov	r0, fp
 8002ca4:	f000 fcf6 	bl	8003694 <_Bfree>
 8002ca8:	e7d0      	b.n	8002c4c <_dtoa_r+0x65c>
 8002caa:	9704      	str	r7, [sp, #16]
 8002cac:	4633      	mov	r3, r6
 8002cae:	461e      	mov	r6, r3
 8002cb0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002cb4:	2a39      	cmp	r2, #57	@ 0x39
 8002cb6:	d107      	bne.n	8002cc8 <_dtoa_r+0x6d8>
 8002cb8:	459a      	cmp	sl, r3
 8002cba:	d1f8      	bne.n	8002cae <_dtoa_r+0x6be>
 8002cbc:	9a04      	ldr	r2, [sp, #16]
 8002cbe:	3201      	adds	r2, #1
 8002cc0:	9204      	str	r2, [sp, #16]
 8002cc2:	2230      	movs	r2, #48	@ 0x30
 8002cc4:	f88a 2000 	strb.w	r2, [sl]
 8002cc8:	781a      	ldrb	r2, [r3, #0]
 8002cca:	3201      	adds	r2, #1
 8002ccc:	701a      	strb	r2, [r3, #0]
 8002cce:	e7bd      	b.n	8002c4c <_dtoa_r+0x65c>
 8002cd0:	4b09      	ldr	r3, [pc, #36]	@ (8002cf8 <_dtoa_r+0x708>)
 8002cd2:	2200      	movs	r2, #0
 8002cd4:	f7fd fd4c 	bl	8000770 <__aeabi_dmul>
 8002cd8:	2200      	movs	r2, #0
 8002cda:	2300      	movs	r3, #0
 8002cdc:	4604      	mov	r4, r0
 8002cde:	460d      	mov	r5, r1
 8002ce0:	f7fd ffae 	bl	8000c40 <__aeabi_dcmpeq>
 8002ce4:	2800      	cmp	r0, #0
 8002ce6:	f43f aebc 	beq.w	8002a62 <_dtoa_r+0x472>
 8002cea:	e6f1      	b.n	8002ad0 <_dtoa_r+0x4e0>
 8002cec:	080047d0 	.word	0x080047d0
 8002cf0:	3fe00000 	.word	0x3fe00000
 8002cf4:	3ff00000 	.word	0x3ff00000
 8002cf8:	40240000 	.word	0x40240000
 8002cfc:	40140000 	.word	0x40140000
 8002d00:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002d02:	2a00      	cmp	r2, #0
 8002d04:	f000 80db 	beq.w	8002ebe <_dtoa_r+0x8ce>
 8002d08:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8002d0a:	2a01      	cmp	r2, #1
 8002d0c:	f300 80bf 	bgt.w	8002e8e <_dtoa_r+0x89e>
 8002d10:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002d12:	2a00      	cmp	r2, #0
 8002d14:	f000 80b7 	beq.w	8002e86 <_dtoa_r+0x896>
 8002d18:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002d1c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002d1e:	4646      	mov	r6, r8
 8002d20:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002d22:	2101      	movs	r1, #1
 8002d24:	441a      	add	r2, r3
 8002d26:	4658      	mov	r0, fp
 8002d28:	4498      	add	r8, r3
 8002d2a:	9209      	str	r2, [sp, #36]	@ 0x24
 8002d2c:	f000 fd66 	bl	80037fc <__i2b>
 8002d30:	4605      	mov	r5, r0
 8002d32:	b15e      	cbz	r6, 8002d4c <_dtoa_r+0x75c>
 8002d34:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002d36:	2b00      	cmp	r3, #0
 8002d38:	dd08      	ble.n	8002d4c <_dtoa_r+0x75c>
 8002d3a:	42b3      	cmp	r3, r6
 8002d3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002d3e:	bfa8      	it	ge
 8002d40:	4633      	movge	r3, r6
 8002d42:	eba8 0803 	sub.w	r8, r8, r3
 8002d46:	1af6      	subs	r6, r6, r3
 8002d48:	1ad3      	subs	r3, r2, r3
 8002d4a:	9309      	str	r3, [sp, #36]	@ 0x24
 8002d4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002d4e:	b1f3      	cbz	r3, 8002d8e <_dtoa_r+0x79e>
 8002d50:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002d52:	2b00      	cmp	r3, #0
 8002d54:	f000 80b7 	beq.w	8002ec6 <_dtoa_r+0x8d6>
 8002d58:	b18c      	cbz	r4, 8002d7e <_dtoa_r+0x78e>
 8002d5a:	4629      	mov	r1, r5
 8002d5c:	4622      	mov	r2, r4
 8002d5e:	4658      	mov	r0, fp
 8002d60:	f000 fe0c 	bl	800397c <__pow5mult>
 8002d64:	464a      	mov	r2, r9
 8002d66:	4601      	mov	r1, r0
 8002d68:	4605      	mov	r5, r0
 8002d6a:	4658      	mov	r0, fp
 8002d6c:	f000 fd5c 	bl	8003828 <__multiply>
 8002d70:	4649      	mov	r1, r9
 8002d72:	9004      	str	r0, [sp, #16]
 8002d74:	4658      	mov	r0, fp
 8002d76:	f000 fc8d 	bl	8003694 <_Bfree>
 8002d7a:	9b04      	ldr	r3, [sp, #16]
 8002d7c:	4699      	mov	r9, r3
 8002d7e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002d80:	1b1a      	subs	r2, r3, r4
 8002d82:	d004      	beq.n	8002d8e <_dtoa_r+0x79e>
 8002d84:	4649      	mov	r1, r9
 8002d86:	4658      	mov	r0, fp
 8002d88:	f000 fdf8 	bl	800397c <__pow5mult>
 8002d8c:	4681      	mov	r9, r0
 8002d8e:	2101      	movs	r1, #1
 8002d90:	4658      	mov	r0, fp
 8002d92:	f000 fd33 	bl	80037fc <__i2b>
 8002d96:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002d98:	4604      	mov	r4, r0
 8002d9a:	2b00      	cmp	r3, #0
 8002d9c:	f000 81c9 	beq.w	8003132 <_dtoa_r+0xb42>
 8002da0:	461a      	mov	r2, r3
 8002da2:	4601      	mov	r1, r0
 8002da4:	4658      	mov	r0, fp
 8002da6:	f000 fde9 	bl	800397c <__pow5mult>
 8002daa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002dac:	2b01      	cmp	r3, #1
 8002dae:	4604      	mov	r4, r0
 8002db0:	f300 808f 	bgt.w	8002ed2 <_dtoa_r+0x8e2>
 8002db4:	9b02      	ldr	r3, [sp, #8]
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	f040 8087 	bne.w	8002eca <_dtoa_r+0x8da>
 8002dbc:	9b03      	ldr	r3, [sp, #12]
 8002dbe:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	f040 8083 	bne.w	8002ece <_dtoa_r+0x8de>
 8002dc8:	9b03      	ldr	r3, [sp, #12]
 8002dca:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002dce:	0d1b      	lsrs	r3, r3, #20
 8002dd0:	051b      	lsls	r3, r3, #20
 8002dd2:	b12b      	cbz	r3, 8002de0 <_dtoa_r+0x7f0>
 8002dd4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002dd6:	3301      	adds	r3, #1
 8002dd8:	9309      	str	r3, [sp, #36]	@ 0x24
 8002dda:	f108 0801 	add.w	r8, r8, #1
 8002dde:	2301      	movs	r3, #1
 8002de0:	930a      	str	r3, [sp, #40]	@ 0x28
 8002de2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	f000 81aa 	beq.w	800313e <_dtoa_r+0xb4e>
 8002dea:	6923      	ldr	r3, [r4, #16]
 8002dec:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002df0:	6918      	ldr	r0, [r3, #16]
 8002df2:	f000 fcb7 	bl	8003764 <__hi0bits>
 8002df6:	f1c0 0020 	rsb	r0, r0, #32
 8002dfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002dfc:	4418      	add	r0, r3
 8002dfe:	f010 001f 	ands.w	r0, r0, #31
 8002e02:	d071      	beq.n	8002ee8 <_dtoa_r+0x8f8>
 8002e04:	f1c0 0320 	rsb	r3, r0, #32
 8002e08:	2b04      	cmp	r3, #4
 8002e0a:	dd65      	ble.n	8002ed8 <_dtoa_r+0x8e8>
 8002e0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002e0e:	f1c0 001c 	rsb	r0, r0, #28
 8002e12:	4403      	add	r3, r0
 8002e14:	4480      	add	r8, r0
 8002e16:	4406      	add	r6, r0
 8002e18:	9309      	str	r3, [sp, #36]	@ 0x24
 8002e1a:	f1b8 0f00 	cmp.w	r8, #0
 8002e1e:	dd05      	ble.n	8002e2c <_dtoa_r+0x83c>
 8002e20:	4649      	mov	r1, r9
 8002e22:	4642      	mov	r2, r8
 8002e24:	4658      	mov	r0, fp
 8002e26:	f000 fe03 	bl	8003a30 <__lshift>
 8002e2a:	4681      	mov	r9, r0
 8002e2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002e2e:	2b00      	cmp	r3, #0
 8002e30:	dd05      	ble.n	8002e3e <_dtoa_r+0x84e>
 8002e32:	4621      	mov	r1, r4
 8002e34:	461a      	mov	r2, r3
 8002e36:	4658      	mov	r0, fp
 8002e38:	f000 fdfa 	bl	8003a30 <__lshift>
 8002e3c:	4604      	mov	r4, r0
 8002e3e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002e40:	2b00      	cmp	r3, #0
 8002e42:	d053      	beq.n	8002eec <_dtoa_r+0x8fc>
 8002e44:	4621      	mov	r1, r4
 8002e46:	4648      	mov	r0, r9
 8002e48:	f000 fe5e 	bl	8003b08 <__mcmp>
 8002e4c:	2800      	cmp	r0, #0
 8002e4e:	da4d      	bge.n	8002eec <_dtoa_r+0x8fc>
 8002e50:	1e7b      	subs	r3, r7, #1
 8002e52:	9304      	str	r3, [sp, #16]
 8002e54:	4649      	mov	r1, r9
 8002e56:	2300      	movs	r3, #0
 8002e58:	220a      	movs	r2, #10
 8002e5a:	4658      	mov	r0, fp
 8002e5c:	f000 fc3c 	bl	80036d8 <__multadd>
 8002e60:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002e62:	4681      	mov	r9, r0
 8002e64:	2b00      	cmp	r3, #0
 8002e66:	f000 816c 	beq.w	8003142 <_dtoa_r+0xb52>
 8002e6a:	2300      	movs	r3, #0
 8002e6c:	4629      	mov	r1, r5
 8002e6e:	220a      	movs	r2, #10
 8002e70:	4658      	mov	r0, fp
 8002e72:	f000 fc31 	bl	80036d8 <__multadd>
 8002e76:	9b08      	ldr	r3, [sp, #32]
 8002e78:	2b00      	cmp	r3, #0
 8002e7a:	4605      	mov	r5, r0
 8002e7c:	dc61      	bgt.n	8002f42 <_dtoa_r+0x952>
 8002e7e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002e80:	2b02      	cmp	r3, #2
 8002e82:	dc3b      	bgt.n	8002efc <_dtoa_r+0x90c>
 8002e84:	e05d      	b.n	8002f42 <_dtoa_r+0x952>
 8002e86:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002e88:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002e8c:	e746      	b.n	8002d1c <_dtoa_r+0x72c>
 8002e8e:	9b07      	ldr	r3, [sp, #28]
 8002e90:	1e5c      	subs	r4, r3, #1
 8002e92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002e94:	42a3      	cmp	r3, r4
 8002e96:	bfbf      	itttt	lt
 8002e98:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8002e9a:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8002e9c:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8002e9e:	1ae3      	sublt	r3, r4, r3
 8002ea0:	bfb4      	ite	lt
 8002ea2:	18d2      	addlt	r2, r2, r3
 8002ea4:	1b1c      	subge	r4, r3, r4
 8002ea6:	9b07      	ldr	r3, [sp, #28]
 8002ea8:	bfbc      	itt	lt
 8002eaa:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8002eac:	2400      	movlt	r4, #0
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	bfb5      	itete	lt
 8002eb2:	eba8 0603 	sublt.w	r6, r8, r3
 8002eb6:	9b07      	ldrge	r3, [sp, #28]
 8002eb8:	2300      	movlt	r3, #0
 8002eba:	4646      	movge	r6, r8
 8002ebc:	e730      	b.n	8002d20 <_dtoa_r+0x730>
 8002ebe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002ec0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8002ec2:	4646      	mov	r6, r8
 8002ec4:	e735      	b.n	8002d32 <_dtoa_r+0x742>
 8002ec6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002ec8:	e75c      	b.n	8002d84 <_dtoa_r+0x794>
 8002eca:	2300      	movs	r3, #0
 8002ecc:	e788      	b.n	8002de0 <_dtoa_r+0x7f0>
 8002ece:	9b02      	ldr	r3, [sp, #8]
 8002ed0:	e786      	b.n	8002de0 <_dtoa_r+0x7f0>
 8002ed2:	2300      	movs	r3, #0
 8002ed4:	930a      	str	r3, [sp, #40]	@ 0x28
 8002ed6:	e788      	b.n	8002dea <_dtoa_r+0x7fa>
 8002ed8:	d09f      	beq.n	8002e1a <_dtoa_r+0x82a>
 8002eda:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002edc:	331c      	adds	r3, #28
 8002ede:	441a      	add	r2, r3
 8002ee0:	4498      	add	r8, r3
 8002ee2:	441e      	add	r6, r3
 8002ee4:	9209      	str	r2, [sp, #36]	@ 0x24
 8002ee6:	e798      	b.n	8002e1a <_dtoa_r+0x82a>
 8002ee8:	4603      	mov	r3, r0
 8002eea:	e7f6      	b.n	8002eda <_dtoa_r+0x8ea>
 8002eec:	9b07      	ldr	r3, [sp, #28]
 8002eee:	9704      	str	r7, [sp, #16]
 8002ef0:	2b00      	cmp	r3, #0
 8002ef2:	dc20      	bgt.n	8002f36 <_dtoa_r+0x946>
 8002ef4:	9308      	str	r3, [sp, #32]
 8002ef6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002ef8:	2b02      	cmp	r3, #2
 8002efa:	dd1e      	ble.n	8002f3a <_dtoa_r+0x94a>
 8002efc:	9b08      	ldr	r3, [sp, #32]
 8002efe:	2b00      	cmp	r3, #0
 8002f00:	f47f aebc 	bne.w	8002c7c <_dtoa_r+0x68c>
 8002f04:	4621      	mov	r1, r4
 8002f06:	2205      	movs	r2, #5
 8002f08:	4658      	mov	r0, fp
 8002f0a:	f000 fbe5 	bl	80036d8 <__multadd>
 8002f0e:	4601      	mov	r1, r0
 8002f10:	4604      	mov	r4, r0
 8002f12:	4648      	mov	r0, r9
 8002f14:	f000 fdf8 	bl	8003b08 <__mcmp>
 8002f18:	2800      	cmp	r0, #0
 8002f1a:	f77f aeaf 	ble.w	8002c7c <_dtoa_r+0x68c>
 8002f1e:	4656      	mov	r6, sl
 8002f20:	2331      	movs	r3, #49	@ 0x31
 8002f22:	f806 3b01 	strb.w	r3, [r6], #1
 8002f26:	9b04      	ldr	r3, [sp, #16]
 8002f28:	3301      	adds	r3, #1
 8002f2a:	9304      	str	r3, [sp, #16]
 8002f2c:	e6aa      	b.n	8002c84 <_dtoa_r+0x694>
 8002f2e:	9c07      	ldr	r4, [sp, #28]
 8002f30:	9704      	str	r7, [sp, #16]
 8002f32:	4625      	mov	r5, r4
 8002f34:	e7f3      	b.n	8002f1e <_dtoa_r+0x92e>
 8002f36:	9b07      	ldr	r3, [sp, #28]
 8002f38:	9308      	str	r3, [sp, #32]
 8002f3a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002f3c:	2b00      	cmp	r3, #0
 8002f3e:	f000 8104 	beq.w	800314a <_dtoa_r+0xb5a>
 8002f42:	2e00      	cmp	r6, #0
 8002f44:	dd05      	ble.n	8002f52 <_dtoa_r+0x962>
 8002f46:	4629      	mov	r1, r5
 8002f48:	4632      	mov	r2, r6
 8002f4a:	4658      	mov	r0, fp
 8002f4c:	f000 fd70 	bl	8003a30 <__lshift>
 8002f50:	4605      	mov	r5, r0
 8002f52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002f54:	2b00      	cmp	r3, #0
 8002f56:	d05a      	beq.n	800300e <_dtoa_r+0xa1e>
 8002f58:	6869      	ldr	r1, [r5, #4]
 8002f5a:	4658      	mov	r0, fp
 8002f5c:	f000 fb5a 	bl	8003614 <_Balloc>
 8002f60:	4606      	mov	r6, r0
 8002f62:	b928      	cbnz	r0, 8002f70 <_dtoa_r+0x980>
 8002f64:	4b84      	ldr	r3, [pc, #528]	@ (8003178 <_dtoa_r+0xb88>)
 8002f66:	4602      	mov	r2, r0
 8002f68:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002f6c:	f7ff bb54 	b.w	8002618 <_dtoa_r+0x28>
 8002f70:	692a      	ldr	r2, [r5, #16]
 8002f72:	3202      	adds	r2, #2
 8002f74:	0092      	lsls	r2, r2, #2
 8002f76:	f105 010c 	add.w	r1, r5, #12
 8002f7a:	300c      	adds	r0, #12
 8002f7c:	f000 ff9c 	bl	8003eb8 <memcpy>
 8002f80:	2201      	movs	r2, #1
 8002f82:	4631      	mov	r1, r6
 8002f84:	4658      	mov	r0, fp
 8002f86:	f000 fd53 	bl	8003a30 <__lshift>
 8002f8a:	f10a 0301 	add.w	r3, sl, #1
 8002f8e:	9307      	str	r3, [sp, #28]
 8002f90:	9b08      	ldr	r3, [sp, #32]
 8002f92:	4453      	add	r3, sl
 8002f94:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002f96:	9b02      	ldr	r3, [sp, #8]
 8002f98:	f003 0301 	and.w	r3, r3, #1
 8002f9c:	462f      	mov	r7, r5
 8002f9e:	930a      	str	r3, [sp, #40]	@ 0x28
 8002fa0:	4605      	mov	r5, r0
 8002fa2:	9b07      	ldr	r3, [sp, #28]
 8002fa4:	4621      	mov	r1, r4
 8002fa6:	3b01      	subs	r3, #1
 8002fa8:	4648      	mov	r0, r9
 8002faa:	9302      	str	r3, [sp, #8]
 8002fac:	f7ff fa95 	bl	80024da <quorem>
 8002fb0:	4639      	mov	r1, r7
 8002fb2:	9008      	str	r0, [sp, #32]
 8002fb4:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8002fb8:	4648      	mov	r0, r9
 8002fba:	f000 fda5 	bl	8003b08 <__mcmp>
 8002fbe:	462a      	mov	r2, r5
 8002fc0:	9009      	str	r0, [sp, #36]	@ 0x24
 8002fc2:	4621      	mov	r1, r4
 8002fc4:	4658      	mov	r0, fp
 8002fc6:	f000 fdbb 	bl	8003b40 <__mdiff>
 8002fca:	68c2      	ldr	r2, [r0, #12]
 8002fcc:	4606      	mov	r6, r0
 8002fce:	bb02      	cbnz	r2, 8003012 <_dtoa_r+0xa22>
 8002fd0:	4601      	mov	r1, r0
 8002fd2:	4648      	mov	r0, r9
 8002fd4:	f000 fd98 	bl	8003b08 <__mcmp>
 8002fd8:	4602      	mov	r2, r0
 8002fda:	4631      	mov	r1, r6
 8002fdc:	4658      	mov	r0, fp
 8002fde:	920c      	str	r2, [sp, #48]	@ 0x30
 8002fe0:	f000 fb58 	bl	8003694 <_Bfree>
 8002fe4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002fe6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8002fe8:	9e07      	ldr	r6, [sp, #28]
 8002fea:	ea43 0102 	orr.w	r1, r3, r2
 8002fee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002ff0:	4319      	orrs	r1, r3
 8002ff2:	d110      	bne.n	8003016 <_dtoa_r+0xa26>
 8002ff4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002ff8:	d029      	beq.n	800304e <_dtoa_r+0xa5e>
 8002ffa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ffc:	2b00      	cmp	r3, #0
 8002ffe:	dd02      	ble.n	8003006 <_dtoa_r+0xa16>
 8003000:	9b08      	ldr	r3, [sp, #32]
 8003002:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8003006:	9b02      	ldr	r3, [sp, #8]
 8003008:	f883 8000 	strb.w	r8, [r3]
 800300c:	e63b      	b.n	8002c86 <_dtoa_r+0x696>
 800300e:	4628      	mov	r0, r5
 8003010:	e7bb      	b.n	8002f8a <_dtoa_r+0x99a>
 8003012:	2201      	movs	r2, #1
 8003014:	e7e1      	b.n	8002fda <_dtoa_r+0x9ea>
 8003016:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003018:	2b00      	cmp	r3, #0
 800301a:	db04      	blt.n	8003026 <_dtoa_r+0xa36>
 800301c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 800301e:	430b      	orrs	r3, r1
 8003020:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003022:	430b      	orrs	r3, r1
 8003024:	d120      	bne.n	8003068 <_dtoa_r+0xa78>
 8003026:	2a00      	cmp	r2, #0
 8003028:	dded      	ble.n	8003006 <_dtoa_r+0xa16>
 800302a:	4649      	mov	r1, r9
 800302c:	2201      	movs	r2, #1
 800302e:	4658      	mov	r0, fp
 8003030:	f000 fcfe 	bl	8003a30 <__lshift>
 8003034:	4621      	mov	r1, r4
 8003036:	4681      	mov	r9, r0
 8003038:	f000 fd66 	bl	8003b08 <__mcmp>
 800303c:	2800      	cmp	r0, #0
 800303e:	dc03      	bgt.n	8003048 <_dtoa_r+0xa58>
 8003040:	d1e1      	bne.n	8003006 <_dtoa_r+0xa16>
 8003042:	f018 0f01 	tst.w	r8, #1
 8003046:	d0de      	beq.n	8003006 <_dtoa_r+0xa16>
 8003048:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800304c:	d1d8      	bne.n	8003000 <_dtoa_r+0xa10>
 800304e:	9a02      	ldr	r2, [sp, #8]
 8003050:	2339      	movs	r3, #57	@ 0x39
 8003052:	7013      	strb	r3, [r2, #0]
 8003054:	4633      	mov	r3, r6
 8003056:	461e      	mov	r6, r3
 8003058:	3b01      	subs	r3, #1
 800305a:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800305e:	2a39      	cmp	r2, #57	@ 0x39
 8003060:	d052      	beq.n	8003108 <_dtoa_r+0xb18>
 8003062:	3201      	adds	r2, #1
 8003064:	701a      	strb	r2, [r3, #0]
 8003066:	e60e      	b.n	8002c86 <_dtoa_r+0x696>
 8003068:	2a00      	cmp	r2, #0
 800306a:	dd07      	ble.n	800307c <_dtoa_r+0xa8c>
 800306c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003070:	d0ed      	beq.n	800304e <_dtoa_r+0xa5e>
 8003072:	9a02      	ldr	r2, [sp, #8]
 8003074:	f108 0301 	add.w	r3, r8, #1
 8003078:	7013      	strb	r3, [r2, #0]
 800307a:	e604      	b.n	8002c86 <_dtoa_r+0x696>
 800307c:	9b07      	ldr	r3, [sp, #28]
 800307e:	9a07      	ldr	r2, [sp, #28]
 8003080:	f803 8c01 	strb.w	r8, [r3, #-1]
 8003084:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003086:	4293      	cmp	r3, r2
 8003088:	d028      	beq.n	80030dc <_dtoa_r+0xaec>
 800308a:	4649      	mov	r1, r9
 800308c:	2300      	movs	r3, #0
 800308e:	220a      	movs	r2, #10
 8003090:	4658      	mov	r0, fp
 8003092:	f000 fb21 	bl	80036d8 <__multadd>
 8003096:	42af      	cmp	r7, r5
 8003098:	4681      	mov	r9, r0
 800309a:	f04f 0300 	mov.w	r3, #0
 800309e:	f04f 020a 	mov.w	r2, #10
 80030a2:	4639      	mov	r1, r7
 80030a4:	4658      	mov	r0, fp
 80030a6:	d107      	bne.n	80030b8 <_dtoa_r+0xac8>
 80030a8:	f000 fb16 	bl	80036d8 <__multadd>
 80030ac:	4607      	mov	r7, r0
 80030ae:	4605      	mov	r5, r0
 80030b0:	9b07      	ldr	r3, [sp, #28]
 80030b2:	3301      	adds	r3, #1
 80030b4:	9307      	str	r3, [sp, #28]
 80030b6:	e774      	b.n	8002fa2 <_dtoa_r+0x9b2>
 80030b8:	f000 fb0e 	bl	80036d8 <__multadd>
 80030bc:	4629      	mov	r1, r5
 80030be:	4607      	mov	r7, r0
 80030c0:	2300      	movs	r3, #0
 80030c2:	220a      	movs	r2, #10
 80030c4:	4658      	mov	r0, fp
 80030c6:	f000 fb07 	bl	80036d8 <__multadd>
 80030ca:	4605      	mov	r5, r0
 80030cc:	e7f0      	b.n	80030b0 <_dtoa_r+0xac0>
 80030ce:	9b08      	ldr	r3, [sp, #32]
 80030d0:	2b00      	cmp	r3, #0
 80030d2:	bfcc      	ite	gt
 80030d4:	461e      	movgt	r6, r3
 80030d6:	2601      	movle	r6, #1
 80030d8:	4456      	add	r6, sl
 80030da:	2700      	movs	r7, #0
 80030dc:	4649      	mov	r1, r9
 80030de:	2201      	movs	r2, #1
 80030e0:	4658      	mov	r0, fp
 80030e2:	f000 fca5 	bl	8003a30 <__lshift>
 80030e6:	4621      	mov	r1, r4
 80030e8:	4681      	mov	r9, r0
 80030ea:	f000 fd0d 	bl	8003b08 <__mcmp>
 80030ee:	2800      	cmp	r0, #0
 80030f0:	dcb0      	bgt.n	8003054 <_dtoa_r+0xa64>
 80030f2:	d102      	bne.n	80030fa <_dtoa_r+0xb0a>
 80030f4:	f018 0f01 	tst.w	r8, #1
 80030f8:	d1ac      	bne.n	8003054 <_dtoa_r+0xa64>
 80030fa:	4633      	mov	r3, r6
 80030fc:	461e      	mov	r6, r3
 80030fe:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003102:	2a30      	cmp	r2, #48	@ 0x30
 8003104:	d0fa      	beq.n	80030fc <_dtoa_r+0xb0c>
 8003106:	e5be      	b.n	8002c86 <_dtoa_r+0x696>
 8003108:	459a      	cmp	sl, r3
 800310a:	d1a4      	bne.n	8003056 <_dtoa_r+0xa66>
 800310c:	9b04      	ldr	r3, [sp, #16]
 800310e:	3301      	adds	r3, #1
 8003110:	9304      	str	r3, [sp, #16]
 8003112:	2331      	movs	r3, #49	@ 0x31
 8003114:	f88a 3000 	strb.w	r3, [sl]
 8003118:	e5b5      	b.n	8002c86 <_dtoa_r+0x696>
 800311a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800311c:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800317c <_dtoa_r+0xb8c>
 8003120:	b11b      	cbz	r3, 800312a <_dtoa_r+0xb3a>
 8003122:	f10a 0308 	add.w	r3, sl, #8
 8003126:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003128:	6013      	str	r3, [r2, #0]
 800312a:	4650      	mov	r0, sl
 800312c:	b017      	add	sp, #92	@ 0x5c
 800312e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003132:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003134:	2b01      	cmp	r3, #1
 8003136:	f77f ae3d 	ble.w	8002db4 <_dtoa_r+0x7c4>
 800313a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800313c:	930a      	str	r3, [sp, #40]	@ 0x28
 800313e:	2001      	movs	r0, #1
 8003140:	e65b      	b.n	8002dfa <_dtoa_r+0x80a>
 8003142:	9b08      	ldr	r3, [sp, #32]
 8003144:	2b00      	cmp	r3, #0
 8003146:	f77f aed6 	ble.w	8002ef6 <_dtoa_r+0x906>
 800314a:	4656      	mov	r6, sl
 800314c:	4621      	mov	r1, r4
 800314e:	4648      	mov	r0, r9
 8003150:	f7ff f9c3 	bl	80024da <quorem>
 8003154:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003158:	f806 8b01 	strb.w	r8, [r6], #1
 800315c:	9b08      	ldr	r3, [sp, #32]
 800315e:	eba6 020a 	sub.w	r2, r6, sl
 8003162:	4293      	cmp	r3, r2
 8003164:	ddb3      	ble.n	80030ce <_dtoa_r+0xade>
 8003166:	4649      	mov	r1, r9
 8003168:	2300      	movs	r3, #0
 800316a:	220a      	movs	r2, #10
 800316c:	4658      	mov	r0, fp
 800316e:	f000 fab3 	bl	80036d8 <__multadd>
 8003172:	4681      	mov	r9, r0
 8003174:	e7ea      	b.n	800314c <_dtoa_r+0xb5c>
 8003176:	bf00      	nop
 8003178:	0800471d 	.word	0x0800471d
 800317c:	080046a1 	.word	0x080046a1

08003180 <_free_r>:
 8003180:	b538      	push	{r3, r4, r5, lr}
 8003182:	4605      	mov	r5, r0
 8003184:	2900      	cmp	r1, #0
 8003186:	d041      	beq.n	800320c <_free_r+0x8c>
 8003188:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800318c:	1f0c      	subs	r4, r1, #4
 800318e:	2b00      	cmp	r3, #0
 8003190:	bfb8      	it	lt
 8003192:	18e4      	addlt	r4, r4, r3
 8003194:	f7ff f86a 	bl	800226c <__malloc_lock>
 8003198:	4a1d      	ldr	r2, [pc, #116]	@ (8003210 <_free_r+0x90>)
 800319a:	6813      	ldr	r3, [r2, #0]
 800319c:	b933      	cbnz	r3, 80031ac <_free_r+0x2c>
 800319e:	6063      	str	r3, [r4, #4]
 80031a0:	6014      	str	r4, [r2, #0]
 80031a2:	4628      	mov	r0, r5
 80031a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80031a8:	f7ff b866 	b.w	8002278 <__malloc_unlock>
 80031ac:	42a3      	cmp	r3, r4
 80031ae:	d908      	bls.n	80031c2 <_free_r+0x42>
 80031b0:	6820      	ldr	r0, [r4, #0]
 80031b2:	1821      	adds	r1, r4, r0
 80031b4:	428b      	cmp	r3, r1
 80031b6:	bf01      	itttt	eq
 80031b8:	6819      	ldreq	r1, [r3, #0]
 80031ba:	685b      	ldreq	r3, [r3, #4]
 80031bc:	1809      	addeq	r1, r1, r0
 80031be:	6021      	streq	r1, [r4, #0]
 80031c0:	e7ed      	b.n	800319e <_free_r+0x1e>
 80031c2:	461a      	mov	r2, r3
 80031c4:	685b      	ldr	r3, [r3, #4]
 80031c6:	b10b      	cbz	r3, 80031cc <_free_r+0x4c>
 80031c8:	42a3      	cmp	r3, r4
 80031ca:	d9fa      	bls.n	80031c2 <_free_r+0x42>
 80031cc:	6811      	ldr	r1, [r2, #0]
 80031ce:	1850      	adds	r0, r2, r1
 80031d0:	42a0      	cmp	r0, r4
 80031d2:	d10b      	bne.n	80031ec <_free_r+0x6c>
 80031d4:	6820      	ldr	r0, [r4, #0]
 80031d6:	4401      	add	r1, r0
 80031d8:	1850      	adds	r0, r2, r1
 80031da:	4283      	cmp	r3, r0
 80031dc:	6011      	str	r1, [r2, #0]
 80031de:	d1e0      	bne.n	80031a2 <_free_r+0x22>
 80031e0:	6818      	ldr	r0, [r3, #0]
 80031e2:	685b      	ldr	r3, [r3, #4]
 80031e4:	6053      	str	r3, [r2, #4]
 80031e6:	4408      	add	r0, r1
 80031e8:	6010      	str	r0, [r2, #0]
 80031ea:	e7da      	b.n	80031a2 <_free_r+0x22>
 80031ec:	d902      	bls.n	80031f4 <_free_r+0x74>
 80031ee:	230c      	movs	r3, #12
 80031f0:	602b      	str	r3, [r5, #0]
 80031f2:	e7d6      	b.n	80031a2 <_free_r+0x22>
 80031f4:	6820      	ldr	r0, [r4, #0]
 80031f6:	1821      	adds	r1, r4, r0
 80031f8:	428b      	cmp	r3, r1
 80031fa:	bf04      	itt	eq
 80031fc:	6819      	ldreq	r1, [r3, #0]
 80031fe:	685b      	ldreq	r3, [r3, #4]
 8003200:	6063      	str	r3, [r4, #4]
 8003202:	bf04      	itt	eq
 8003204:	1809      	addeq	r1, r1, r0
 8003206:	6021      	streq	r1, [r4, #0]
 8003208:	6054      	str	r4, [r2, #4]
 800320a:	e7ca      	b.n	80031a2 <_free_r+0x22>
 800320c:	bd38      	pop	{r3, r4, r5, pc}
 800320e:	bf00      	nop
 8003210:	20000218 	.word	0x20000218

08003214 <__ssputs_r>:
 8003214:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003218:	688e      	ldr	r6, [r1, #8]
 800321a:	461f      	mov	r7, r3
 800321c:	42be      	cmp	r6, r7
 800321e:	680b      	ldr	r3, [r1, #0]
 8003220:	4682      	mov	sl, r0
 8003222:	460c      	mov	r4, r1
 8003224:	4690      	mov	r8, r2
 8003226:	d82d      	bhi.n	8003284 <__ssputs_r+0x70>
 8003228:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800322c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003230:	d026      	beq.n	8003280 <__ssputs_r+0x6c>
 8003232:	6965      	ldr	r5, [r4, #20]
 8003234:	6909      	ldr	r1, [r1, #16]
 8003236:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800323a:	eba3 0901 	sub.w	r9, r3, r1
 800323e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003242:	1c7b      	adds	r3, r7, #1
 8003244:	444b      	add	r3, r9
 8003246:	106d      	asrs	r5, r5, #1
 8003248:	429d      	cmp	r5, r3
 800324a:	bf38      	it	cc
 800324c:	461d      	movcc	r5, r3
 800324e:	0553      	lsls	r3, r2, #21
 8003250:	d527      	bpl.n	80032a2 <__ssputs_r+0x8e>
 8003252:	4629      	mov	r1, r5
 8003254:	f7fe fdfc 	bl	8001e50 <_malloc_r>
 8003258:	4606      	mov	r6, r0
 800325a:	b360      	cbz	r0, 80032b6 <__ssputs_r+0xa2>
 800325c:	6921      	ldr	r1, [r4, #16]
 800325e:	464a      	mov	r2, r9
 8003260:	f000 fe2a 	bl	8003eb8 <memcpy>
 8003264:	89a3      	ldrh	r3, [r4, #12]
 8003266:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800326a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800326e:	81a3      	strh	r3, [r4, #12]
 8003270:	6126      	str	r6, [r4, #16]
 8003272:	6165      	str	r5, [r4, #20]
 8003274:	444e      	add	r6, r9
 8003276:	eba5 0509 	sub.w	r5, r5, r9
 800327a:	6026      	str	r6, [r4, #0]
 800327c:	60a5      	str	r5, [r4, #8]
 800327e:	463e      	mov	r6, r7
 8003280:	42be      	cmp	r6, r7
 8003282:	d900      	bls.n	8003286 <__ssputs_r+0x72>
 8003284:	463e      	mov	r6, r7
 8003286:	6820      	ldr	r0, [r4, #0]
 8003288:	4632      	mov	r2, r6
 800328a:	4641      	mov	r1, r8
 800328c:	f000 fdb3 	bl	8003df6 <memmove>
 8003290:	68a3      	ldr	r3, [r4, #8]
 8003292:	1b9b      	subs	r3, r3, r6
 8003294:	60a3      	str	r3, [r4, #8]
 8003296:	6823      	ldr	r3, [r4, #0]
 8003298:	4433      	add	r3, r6
 800329a:	6023      	str	r3, [r4, #0]
 800329c:	2000      	movs	r0, #0
 800329e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80032a2:	462a      	mov	r2, r5
 80032a4:	f000 fd79 	bl	8003d9a <_realloc_r>
 80032a8:	4606      	mov	r6, r0
 80032aa:	2800      	cmp	r0, #0
 80032ac:	d1e0      	bne.n	8003270 <__ssputs_r+0x5c>
 80032ae:	6921      	ldr	r1, [r4, #16]
 80032b0:	4650      	mov	r0, sl
 80032b2:	f7ff ff65 	bl	8003180 <_free_r>
 80032b6:	230c      	movs	r3, #12
 80032b8:	f8ca 3000 	str.w	r3, [sl]
 80032bc:	89a3      	ldrh	r3, [r4, #12]
 80032be:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80032c2:	81a3      	strh	r3, [r4, #12]
 80032c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80032c8:	e7e9      	b.n	800329e <__ssputs_r+0x8a>
	...

080032cc <_svfiprintf_r>:
 80032cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032d0:	4698      	mov	r8, r3
 80032d2:	898b      	ldrh	r3, [r1, #12]
 80032d4:	061b      	lsls	r3, r3, #24
 80032d6:	b09d      	sub	sp, #116	@ 0x74
 80032d8:	4607      	mov	r7, r0
 80032da:	460d      	mov	r5, r1
 80032dc:	4614      	mov	r4, r2
 80032de:	d510      	bpl.n	8003302 <_svfiprintf_r+0x36>
 80032e0:	690b      	ldr	r3, [r1, #16]
 80032e2:	b973      	cbnz	r3, 8003302 <_svfiprintf_r+0x36>
 80032e4:	2140      	movs	r1, #64	@ 0x40
 80032e6:	f7fe fdb3 	bl	8001e50 <_malloc_r>
 80032ea:	6028      	str	r0, [r5, #0]
 80032ec:	6128      	str	r0, [r5, #16]
 80032ee:	b930      	cbnz	r0, 80032fe <_svfiprintf_r+0x32>
 80032f0:	230c      	movs	r3, #12
 80032f2:	603b      	str	r3, [r7, #0]
 80032f4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80032f8:	b01d      	add	sp, #116	@ 0x74
 80032fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032fe:	2340      	movs	r3, #64	@ 0x40
 8003300:	616b      	str	r3, [r5, #20]
 8003302:	2300      	movs	r3, #0
 8003304:	9309      	str	r3, [sp, #36]	@ 0x24
 8003306:	2320      	movs	r3, #32
 8003308:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800330c:	f8cd 800c 	str.w	r8, [sp, #12]
 8003310:	2330      	movs	r3, #48	@ 0x30
 8003312:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80034b0 <_svfiprintf_r+0x1e4>
 8003316:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800331a:	f04f 0901 	mov.w	r9, #1
 800331e:	4623      	mov	r3, r4
 8003320:	469a      	mov	sl, r3
 8003322:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003326:	b10a      	cbz	r2, 800332c <_svfiprintf_r+0x60>
 8003328:	2a25      	cmp	r2, #37	@ 0x25
 800332a:	d1f9      	bne.n	8003320 <_svfiprintf_r+0x54>
 800332c:	ebba 0b04 	subs.w	fp, sl, r4
 8003330:	d00b      	beq.n	800334a <_svfiprintf_r+0x7e>
 8003332:	465b      	mov	r3, fp
 8003334:	4622      	mov	r2, r4
 8003336:	4629      	mov	r1, r5
 8003338:	4638      	mov	r0, r7
 800333a:	f7ff ff6b 	bl	8003214 <__ssputs_r>
 800333e:	3001      	adds	r0, #1
 8003340:	f000 80a7 	beq.w	8003492 <_svfiprintf_r+0x1c6>
 8003344:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003346:	445a      	add	r2, fp
 8003348:	9209      	str	r2, [sp, #36]	@ 0x24
 800334a:	f89a 3000 	ldrb.w	r3, [sl]
 800334e:	2b00      	cmp	r3, #0
 8003350:	f000 809f 	beq.w	8003492 <_svfiprintf_r+0x1c6>
 8003354:	2300      	movs	r3, #0
 8003356:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800335a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800335e:	f10a 0a01 	add.w	sl, sl, #1
 8003362:	9304      	str	r3, [sp, #16]
 8003364:	9307      	str	r3, [sp, #28]
 8003366:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800336a:	931a      	str	r3, [sp, #104]	@ 0x68
 800336c:	4654      	mov	r4, sl
 800336e:	2205      	movs	r2, #5
 8003370:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003374:	484e      	ldr	r0, [pc, #312]	@ (80034b0 <_svfiprintf_r+0x1e4>)
 8003376:	f7fc ff33 	bl	80001e0 <memchr>
 800337a:	9a04      	ldr	r2, [sp, #16]
 800337c:	b9d8      	cbnz	r0, 80033b6 <_svfiprintf_r+0xea>
 800337e:	06d0      	lsls	r0, r2, #27
 8003380:	bf44      	itt	mi
 8003382:	2320      	movmi	r3, #32
 8003384:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003388:	0711      	lsls	r1, r2, #28
 800338a:	bf44      	itt	mi
 800338c:	232b      	movmi	r3, #43	@ 0x2b
 800338e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003392:	f89a 3000 	ldrb.w	r3, [sl]
 8003396:	2b2a      	cmp	r3, #42	@ 0x2a
 8003398:	d015      	beq.n	80033c6 <_svfiprintf_r+0xfa>
 800339a:	9a07      	ldr	r2, [sp, #28]
 800339c:	4654      	mov	r4, sl
 800339e:	2000      	movs	r0, #0
 80033a0:	f04f 0c0a 	mov.w	ip, #10
 80033a4:	4621      	mov	r1, r4
 80033a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80033aa:	3b30      	subs	r3, #48	@ 0x30
 80033ac:	2b09      	cmp	r3, #9
 80033ae:	d94b      	bls.n	8003448 <_svfiprintf_r+0x17c>
 80033b0:	b1b0      	cbz	r0, 80033e0 <_svfiprintf_r+0x114>
 80033b2:	9207      	str	r2, [sp, #28]
 80033b4:	e014      	b.n	80033e0 <_svfiprintf_r+0x114>
 80033b6:	eba0 0308 	sub.w	r3, r0, r8
 80033ba:	fa09 f303 	lsl.w	r3, r9, r3
 80033be:	4313      	orrs	r3, r2
 80033c0:	9304      	str	r3, [sp, #16]
 80033c2:	46a2      	mov	sl, r4
 80033c4:	e7d2      	b.n	800336c <_svfiprintf_r+0xa0>
 80033c6:	9b03      	ldr	r3, [sp, #12]
 80033c8:	1d19      	adds	r1, r3, #4
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	9103      	str	r1, [sp, #12]
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	bfbb      	ittet	lt
 80033d2:	425b      	neglt	r3, r3
 80033d4:	f042 0202 	orrlt.w	r2, r2, #2
 80033d8:	9307      	strge	r3, [sp, #28]
 80033da:	9307      	strlt	r3, [sp, #28]
 80033dc:	bfb8      	it	lt
 80033de:	9204      	strlt	r2, [sp, #16]
 80033e0:	7823      	ldrb	r3, [r4, #0]
 80033e2:	2b2e      	cmp	r3, #46	@ 0x2e
 80033e4:	d10a      	bne.n	80033fc <_svfiprintf_r+0x130>
 80033e6:	7863      	ldrb	r3, [r4, #1]
 80033e8:	2b2a      	cmp	r3, #42	@ 0x2a
 80033ea:	d132      	bne.n	8003452 <_svfiprintf_r+0x186>
 80033ec:	9b03      	ldr	r3, [sp, #12]
 80033ee:	1d1a      	adds	r2, r3, #4
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	9203      	str	r2, [sp, #12]
 80033f4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80033f8:	3402      	adds	r4, #2
 80033fa:	9305      	str	r3, [sp, #20]
 80033fc:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 80034b4 <_svfiprintf_r+0x1e8>
 8003400:	7821      	ldrb	r1, [r4, #0]
 8003402:	2203      	movs	r2, #3
 8003404:	4650      	mov	r0, sl
 8003406:	f7fc feeb 	bl	80001e0 <memchr>
 800340a:	b138      	cbz	r0, 800341c <_svfiprintf_r+0x150>
 800340c:	9b04      	ldr	r3, [sp, #16]
 800340e:	eba0 000a 	sub.w	r0, r0, sl
 8003412:	2240      	movs	r2, #64	@ 0x40
 8003414:	4082      	lsls	r2, r0
 8003416:	4313      	orrs	r3, r2
 8003418:	3401      	adds	r4, #1
 800341a:	9304      	str	r3, [sp, #16]
 800341c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003420:	4825      	ldr	r0, [pc, #148]	@ (80034b8 <_svfiprintf_r+0x1ec>)
 8003422:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003426:	2206      	movs	r2, #6
 8003428:	f7fc feda 	bl	80001e0 <memchr>
 800342c:	2800      	cmp	r0, #0
 800342e:	d036      	beq.n	800349e <_svfiprintf_r+0x1d2>
 8003430:	4b22      	ldr	r3, [pc, #136]	@ (80034bc <_svfiprintf_r+0x1f0>)
 8003432:	bb1b      	cbnz	r3, 800347c <_svfiprintf_r+0x1b0>
 8003434:	9b03      	ldr	r3, [sp, #12]
 8003436:	3307      	adds	r3, #7
 8003438:	f023 0307 	bic.w	r3, r3, #7
 800343c:	3308      	adds	r3, #8
 800343e:	9303      	str	r3, [sp, #12]
 8003440:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003442:	4433      	add	r3, r6
 8003444:	9309      	str	r3, [sp, #36]	@ 0x24
 8003446:	e76a      	b.n	800331e <_svfiprintf_r+0x52>
 8003448:	fb0c 3202 	mla	r2, ip, r2, r3
 800344c:	460c      	mov	r4, r1
 800344e:	2001      	movs	r0, #1
 8003450:	e7a8      	b.n	80033a4 <_svfiprintf_r+0xd8>
 8003452:	2300      	movs	r3, #0
 8003454:	3401      	adds	r4, #1
 8003456:	9305      	str	r3, [sp, #20]
 8003458:	4619      	mov	r1, r3
 800345a:	f04f 0c0a 	mov.w	ip, #10
 800345e:	4620      	mov	r0, r4
 8003460:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003464:	3a30      	subs	r2, #48	@ 0x30
 8003466:	2a09      	cmp	r2, #9
 8003468:	d903      	bls.n	8003472 <_svfiprintf_r+0x1a6>
 800346a:	2b00      	cmp	r3, #0
 800346c:	d0c6      	beq.n	80033fc <_svfiprintf_r+0x130>
 800346e:	9105      	str	r1, [sp, #20]
 8003470:	e7c4      	b.n	80033fc <_svfiprintf_r+0x130>
 8003472:	fb0c 2101 	mla	r1, ip, r1, r2
 8003476:	4604      	mov	r4, r0
 8003478:	2301      	movs	r3, #1
 800347a:	e7f0      	b.n	800345e <_svfiprintf_r+0x192>
 800347c:	ab03      	add	r3, sp, #12
 800347e:	9300      	str	r3, [sp, #0]
 8003480:	462a      	mov	r2, r5
 8003482:	4b0f      	ldr	r3, [pc, #60]	@ (80034c0 <_svfiprintf_r+0x1f4>)
 8003484:	a904      	add	r1, sp, #16
 8003486:	4638      	mov	r0, r7
 8003488:	f7fe fa8c 	bl	80019a4 <_printf_float>
 800348c:	1c42      	adds	r2, r0, #1
 800348e:	4606      	mov	r6, r0
 8003490:	d1d6      	bne.n	8003440 <_svfiprintf_r+0x174>
 8003492:	89ab      	ldrh	r3, [r5, #12]
 8003494:	065b      	lsls	r3, r3, #25
 8003496:	f53f af2d 	bmi.w	80032f4 <_svfiprintf_r+0x28>
 800349a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800349c:	e72c      	b.n	80032f8 <_svfiprintf_r+0x2c>
 800349e:	ab03      	add	r3, sp, #12
 80034a0:	9300      	str	r3, [sp, #0]
 80034a2:	462a      	mov	r2, r5
 80034a4:	4b06      	ldr	r3, [pc, #24]	@ (80034c0 <_svfiprintf_r+0x1f4>)
 80034a6:	a904      	add	r1, sp, #16
 80034a8:	4638      	mov	r0, r7
 80034aa:	f7fe fdbf 	bl	800202c <_printf_i>
 80034ae:	e7ed      	b.n	800348c <_svfiprintf_r+0x1c0>
 80034b0:	0800472e 	.word	0x0800472e
 80034b4:	08004734 	.word	0x08004734
 80034b8:	08004738 	.word	0x08004738
 80034bc:	080019a5 	.word	0x080019a5
 80034c0:	08003215 	.word	0x08003215

080034c4 <__sflush_r>:
 80034c4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80034c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80034ca:	0716      	lsls	r6, r2, #28
 80034cc:	4605      	mov	r5, r0
 80034ce:	460c      	mov	r4, r1
 80034d0:	d454      	bmi.n	800357c <__sflush_r+0xb8>
 80034d2:	684b      	ldr	r3, [r1, #4]
 80034d4:	2b00      	cmp	r3, #0
 80034d6:	dc02      	bgt.n	80034de <__sflush_r+0x1a>
 80034d8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80034da:	2b00      	cmp	r3, #0
 80034dc:	dd48      	ble.n	8003570 <__sflush_r+0xac>
 80034de:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80034e0:	2e00      	cmp	r6, #0
 80034e2:	d045      	beq.n	8003570 <__sflush_r+0xac>
 80034e4:	2300      	movs	r3, #0
 80034e6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80034ea:	682f      	ldr	r7, [r5, #0]
 80034ec:	6a21      	ldr	r1, [r4, #32]
 80034ee:	602b      	str	r3, [r5, #0]
 80034f0:	d030      	beq.n	8003554 <__sflush_r+0x90>
 80034f2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80034f4:	89a3      	ldrh	r3, [r4, #12]
 80034f6:	0759      	lsls	r1, r3, #29
 80034f8:	d505      	bpl.n	8003506 <__sflush_r+0x42>
 80034fa:	6863      	ldr	r3, [r4, #4]
 80034fc:	1ad2      	subs	r2, r2, r3
 80034fe:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003500:	b10b      	cbz	r3, 8003506 <__sflush_r+0x42>
 8003502:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003504:	1ad2      	subs	r2, r2, r3
 8003506:	2300      	movs	r3, #0
 8003508:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800350a:	6a21      	ldr	r1, [r4, #32]
 800350c:	4628      	mov	r0, r5
 800350e:	47b0      	blx	r6
 8003510:	1c43      	adds	r3, r0, #1
 8003512:	89a3      	ldrh	r3, [r4, #12]
 8003514:	d106      	bne.n	8003524 <__sflush_r+0x60>
 8003516:	6829      	ldr	r1, [r5, #0]
 8003518:	291d      	cmp	r1, #29
 800351a:	d82b      	bhi.n	8003574 <__sflush_r+0xb0>
 800351c:	4a28      	ldr	r2, [pc, #160]	@ (80035c0 <__sflush_r+0xfc>)
 800351e:	410a      	asrs	r2, r1
 8003520:	07d6      	lsls	r6, r2, #31
 8003522:	d427      	bmi.n	8003574 <__sflush_r+0xb0>
 8003524:	2200      	movs	r2, #0
 8003526:	6062      	str	r2, [r4, #4]
 8003528:	04d9      	lsls	r1, r3, #19
 800352a:	6922      	ldr	r2, [r4, #16]
 800352c:	6022      	str	r2, [r4, #0]
 800352e:	d504      	bpl.n	800353a <__sflush_r+0x76>
 8003530:	1c42      	adds	r2, r0, #1
 8003532:	d101      	bne.n	8003538 <__sflush_r+0x74>
 8003534:	682b      	ldr	r3, [r5, #0]
 8003536:	b903      	cbnz	r3, 800353a <__sflush_r+0x76>
 8003538:	6560      	str	r0, [r4, #84]	@ 0x54
 800353a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800353c:	602f      	str	r7, [r5, #0]
 800353e:	b1b9      	cbz	r1, 8003570 <__sflush_r+0xac>
 8003540:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003544:	4299      	cmp	r1, r3
 8003546:	d002      	beq.n	800354e <__sflush_r+0x8a>
 8003548:	4628      	mov	r0, r5
 800354a:	f7ff fe19 	bl	8003180 <_free_r>
 800354e:	2300      	movs	r3, #0
 8003550:	6363      	str	r3, [r4, #52]	@ 0x34
 8003552:	e00d      	b.n	8003570 <__sflush_r+0xac>
 8003554:	2301      	movs	r3, #1
 8003556:	4628      	mov	r0, r5
 8003558:	47b0      	blx	r6
 800355a:	4602      	mov	r2, r0
 800355c:	1c50      	adds	r0, r2, #1
 800355e:	d1c9      	bne.n	80034f4 <__sflush_r+0x30>
 8003560:	682b      	ldr	r3, [r5, #0]
 8003562:	2b00      	cmp	r3, #0
 8003564:	d0c6      	beq.n	80034f4 <__sflush_r+0x30>
 8003566:	2b1d      	cmp	r3, #29
 8003568:	d001      	beq.n	800356e <__sflush_r+0xaa>
 800356a:	2b16      	cmp	r3, #22
 800356c:	d11d      	bne.n	80035aa <__sflush_r+0xe6>
 800356e:	602f      	str	r7, [r5, #0]
 8003570:	2000      	movs	r0, #0
 8003572:	e021      	b.n	80035b8 <__sflush_r+0xf4>
 8003574:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003578:	b21b      	sxth	r3, r3
 800357a:	e01a      	b.n	80035b2 <__sflush_r+0xee>
 800357c:	690f      	ldr	r7, [r1, #16]
 800357e:	2f00      	cmp	r7, #0
 8003580:	d0f6      	beq.n	8003570 <__sflush_r+0xac>
 8003582:	0793      	lsls	r3, r2, #30
 8003584:	680e      	ldr	r6, [r1, #0]
 8003586:	bf08      	it	eq
 8003588:	694b      	ldreq	r3, [r1, #20]
 800358a:	600f      	str	r7, [r1, #0]
 800358c:	bf18      	it	ne
 800358e:	2300      	movne	r3, #0
 8003590:	1bf6      	subs	r6, r6, r7
 8003592:	608b      	str	r3, [r1, #8]
 8003594:	2e00      	cmp	r6, #0
 8003596:	ddeb      	ble.n	8003570 <__sflush_r+0xac>
 8003598:	6a21      	ldr	r1, [r4, #32]
 800359a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800359e:	4633      	mov	r3, r6
 80035a0:	463a      	mov	r2, r7
 80035a2:	4628      	mov	r0, r5
 80035a4:	47e0      	blx	ip
 80035a6:	2800      	cmp	r0, #0
 80035a8:	dc07      	bgt.n	80035ba <__sflush_r+0xf6>
 80035aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80035ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80035b2:	81a3      	strh	r3, [r4, #12]
 80035b4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80035b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80035ba:	4407      	add	r7, r0
 80035bc:	1a36      	subs	r6, r6, r0
 80035be:	e7e9      	b.n	8003594 <__sflush_r+0xd0>
 80035c0:	dfbffffe 	.word	0xdfbffffe

080035c4 <_fflush_r>:
 80035c4:	b538      	push	{r3, r4, r5, lr}
 80035c6:	690b      	ldr	r3, [r1, #16]
 80035c8:	4605      	mov	r5, r0
 80035ca:	460c      	mov	r4, r1
 80035cc:	b913      	cbnz	r3, 80035d4 <_fflush_r+0x10>
 80035ce:	2500      	movs	r5, #0
 80035d0:	4628      	mov	r0, r5
 80035d2:	bd38      	pop	{r3, r4, r5, pc}
 80035d4:	b118      	cbz	r0, 80035de <_fflush_r+0x1a>
 80035d6:	6a03      	ldr	r3, [r0, #32]
 80035d8:	b90b      	cbnz	r3, 80035de <_fflush_r+0x1a>
 80035da:	f7fe feff 	bl	80023dc <__sinit>
 80035de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80035e2:	2b00      	cmp	r3, #0
 80035e4:	d0f3      	beq.n	80035ce <_fflush_r+0xa>
 80035e6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80035e8:	07d0      	lsls	r0, r2, #31
 80035ea:	d404      	bmi.n	80035f6 <_fflush_r+0x32>
 80035ec:	0599      	lsls	r1, r3, #22
 80035ee:	d402      	bmi.n	80035f6 <_fflush_r+0x32>
 80035f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80035f2:	f7fe ff70 	bl	80024d6 <__retarget_lock_acquire_recursive>
 80035f6:	4628      	mov	r0, r5
 80035f8:	4621      	mov	r1, r4
 80035fa:	f7ff ff63 	bl	80034c4 <__sflush_r>
 80035fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003600:	07da      	lsls	r2, r3, #31
 8003602:	4605      	mov	r5, r0
 8003604:	d4e4      	bmi.n	80035d0 <_fflush_r+0xc>
 8003606:	89a3      	ldrh	r3, [r4, #12]
 8003608:	059b      	lsls	r3, r3, #22
 800360a:	d4e1      	bmi.n	80035d0 <_fflush_r+0xc>
 800360c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800360e:	f7fe ff63 	bl	80024d8 <__retarget_lock_release_recursive>
 8003612:	e7dd      	b.n	80035d0 <_fflush_r+0xc>

08003614 <_Balloc>:
 8003614:	b570      	push	{r4, r5, r6, lr}
 8003616:	69c6      	ldr	r6, [r0, #28]
 8003618:	4604      	mov	r4, r0
 800361a:	460d      	mov	r5, r1
 800361c:	b976      	cbnz	r6, 800363c <_Balloc+0x28>
 800361e:	2010      	movs	r0, #16
 8003620:	f7fe fbec 	bl	8001dfc <malloc>
 8003624:	4602      	mov	r2, r0
 8003626:	61e0      	str	r0, [r4, #28]
 8003628:	b920      	cbnz	r0, 8003634 <_Balloc+0x20>
 800362a:	4b18      	ldr	r3, [pc, #96]	@ (800368c <_Balloc+0x78>)
 800362c:	4818      	ldr	r0, [pc, #96]	@ (8003690 <_Balloc+0x7c>)
 800362e:	216b      	movs	r1, #107	@ 0x6b
 8003630:	f000 fc50 	bl	8003ed4 <__assert_func>
 8003634:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003638:	6006      	str	r6, [r0, #0]
 800363a:	60c6      	str	r6, [r0, #12]
 800363c:	69e6      	ldr	r6, [r4, #28]
 800363e:	68f3      	ldr	r3, [r6, #12]
 8003640:	b183      	cbz	r3, 8003664 <_Balloc+0x50>
 8003642:	69e3      	ldr	r3, [r4, #28]
 8003644:	68db      	ldr	r3, [r3, #12]
 8003646:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800364a:	b9b8      	cbnz	r0, 800367c <_Balloc+0x68>
 800364c:	2101      	movs	r1, #1
 800364e:	fa01 f605 	lsl.w	r6, r1, r5
 8003652:	1d72      	adds	r2, r6, #5
 8003654:	0092      	lsls	r2, r2, #2
 8003656:	4620      	mov	r0, r4
 8003658:	f000 fc5a 	bl	8003f10 <_calloc_r>
 800365c:	b160      	cbz	r0, 8003678 <_Balloc+0x64>
 800365e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003662:	e00e      	b.n	8003682 <_Balloc+0x6e>
 8003664:	2221      	movs	r2, #33	@ 0x21
 8003666:	2104      	movs	r1, #4
 8003668:	4620      	mov	r0, r4
 800366a:	f000 fc51 	bl	8003f10 <_calloc_r>
 800366e:	69e3      	ldr	r3, [r4, #28]
 8003670:	60f0      	str	r0, [r6, #12]
 8003672:	68db      	ldr	r3, [r3, #12]
 8003674:	2b00      	cmp	r3, #0
 8003676:	d1e4      	bne.n	8003642 <_Balloc+0x2e>
 8003678:	2000      	movs	r0, #0
 800367a:	bd70      	pop	{r4, r5, r6, pc}
 800367c:	6802      	ldr	r2, [r0, #0]
 800367e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003682:	2300      	movs	r3, #0
 8003684:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003688:	e7f7      	b.n	800367a <_Balloc+0x66>
 800368a:	bf00      	nop
 800368c:	080046ae 	.word	0x080046ae
 8003690:	0800473f 	.word	0x0800473f

08003694 <_Bfree>:
 8003694:	b570      	push	{r4, r5, r6, lr}
 8003696:	69c6      	ldr	r6, [r0, #28]
 8003698:	4605      	mov	r5, r0
 800369a:	460c      	mov	r4, r1
 800369c:	b976      	cbnz	r6, 80036bc <_Bfree+0x28>
 800369e:	2010      	movs	r0, #16
 80036a0:	f7fe fbac 	bl	8001dfc <malloc>
 80036a4:	4602      	mov	r2, r0
 80036a6:	61e8      	str	r0, [r5, #28]
 80036a8:	b920      	cbnz	r0, 80036b4 <_Bfree+0x20>
 80036aa:	4b09      	ldr	r3, [pc, #36]	@ (80036d0 <_Bfree+0x3c>)
 80036ac:	4809      	ldr	r0, [pc, #36]	@ (80036d4 <_Bfree+0x40>)
 80036ae:	218f      	movs	r1, #143	@ 0x8f
 80036b0:	f000 fc10 	bl	8003ed4 <__assert_func>
 80036b4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80036b8:	6006      	str	r6, [r0, #0]
 80036ba:	60c6      	str	r6, [r0, #12]
 80036bc:	b13c      	cbz	r4, 80036ce <_Bfree+0x3a>
 80036be:	69eb      	ldr	r3, [r5, #28]
 80036c0:	6862      	ldr	r2, [r4, #4]
 80036c2:	68db      	ldr	r3, [r3, #12]
 80036c4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80036c8:	6021      	str	r1, [r4, #0]
 80036ca:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80036ce:	bd70      	pop	{r4, r5, r6, pc}
 80036d0:	080046ae 	.word	0x080046ae
 80036d4:	0800473f 	.word	0x0800473f

080036d8 <__multadd>:
 80036d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80036dc:	690d      	ldr	r5, [r1, #16]
 80036de:	4607      	mov	r7, r0
 80036e0:	460c      	mov	r4, r1
 80036e2:	461e      	mov	r6, r3
 80036e4:	f101 0c14 	add.w	ip, r1, #20
 80036e8:	2000      	movs	r0, #0
 80036ea:	f8dc 3000 	ldr.w	r3, [ip]
 80036ee:	b299      	uxth	r1, r3
 80036f0:	fb02 6101 	mla	r1, r2, r1, r6
 80036f4:	0c1e      	lsrs	r6, r3, #16
 80036f6:	0c0b      	lsrs	r3, r1, #16
 80036f8:	fb02 3306 	mla	r3, r2, r6, r3
 80036fc:	b289      	uxth	r1, r1
 80036fe:	3001      	adds	r0, #1
 8003700:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003704:	4285      	cmp	r5, r0
 8003706:	f84c 1b04 	str.w	r1, [ip], #4
 800370a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800370e:	dcec      	bgt.n	80036ea <__multadd+0x12>
 8003710:	b30e      	cbz	r6, 8003756 <__multadd+0x7e>
 8003712:	68a3      	ldr	r3, [r4, #8]
 8003714:	42ab      	cmp	r3, r5
 8003716:	dc19      	bgt.n	800374c <__multadd+0x74>
 8003718:	6861      	ldr	r1, [r4, #4]
 800371a:	4638      	mov	r0, r7
 800371c:	3101      	adds	r1, #1
 800371e:	f7ff ff79 	bl	8003614 <_Balloc>
 8003722:	4680      	mov	r8, r0
 8003724:	b928      	cbnz	r0, 8003732 <__multadd+0x5a>
 8003726:	4602      	mov	r2, r0
 8003728:	4b0c      	ldr	r3, [pc, #48]	@ (800375c <__multadd+0x84>)
 800372a:	480d      	ldr	r0, [pc, #52]	@ (8003760 <__multadd+0x88>)
 800372c:	21ba      	movs	r1, #186	@ 0xba
 800372e:	f000 fbd1 	bl	8003ed4 <__assert_func>
 8003732:	6922      	ldr	r2, [r4, #16]
 8003734:	3202      	adds	r2, #2
 8003736:	f104 010c 	add.w	r1, r4, #12
 800373a:	0092      	lsls	r2, r2, #2
 800373c:	300c      	adds	r0, #12
 800373e:	f000 fbbb 	bl	8003eb8 <memcpy>
 8003742:	4621      	mov	r1, r4
 8003744:	4638      	mov	r0, r7
 8003746:	f7ff ffa5 	bl	8003694 <_Bfree>
 800374a:	4644      	mov	r4, r8
 800374c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003750:	3501      	adds	r5, #1
 8003752:	615e      	str	r6, [r3, #20]
 8003754:	6125      	str	r5, [r4, #16]
 8003756:	4620      	mov	r0, r4
 8003758:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800375c:	0800471d 	.word	0x0800471d
 8003760:	0800473f 	.word	0x0800473f

08003764 <__hi0bits>:
 8003764:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003768:	4603      	mov	r3, r0
 800376a:	bf36      	itet	cc
 800376c:	0403      	lslcc	r3, r0, #16
 800376e:	2000      	movcs	r0, #0
 8003770:	2010      	movcc	r0, #16
 8003772:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003776:	bf3c      	itt	cc
 8003778:	021b      	lslcc	r3, r3, #8
 800377a:	3008      	addcc	r0, #8
 800377c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003780:	bf3c      	itt	cc
 8003782:	011b      	lslcc	r3, r3, #4
 8003784:	3004      	addcc	r0, #4
 8003786:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800378a:	bf3c      	itt	cc
 800378c:	009b      	lslcc	r3, r3, #2
 800378e:	3002      	addcc	r0, #2
 8003790:	2b00      	cmp	r3, #0
 8003792:	db05      	blt.n	80037a0 <__hi0bits+0x3c>
 8003794:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003798:	f100 0001 	add.w	r0, r0, #1
 800379c:	bf08      	it	eq
 800379e:	2020      	moveq	r0, #32
 80037a0:	4770      	bx	lr

080037a2 <__lo0bits>:
 80037a2:	6803      	ldr	r3, [r0, #0]
 80037a4:	4602      	mov	r2, r0
 80037a6:	f013 0007 	ands.w	r0, r3, #7
 80037aa:	d00b      	beq.n	80037c4 <__lo0bits+0x22>
 80037ac:	07d9      	lsls	r1, r3, #31
 80037ae:	d421      	bmi.n	80037f4 <__lo0bits+0x52>
 80037b0:	0798      	lsls	r0, r3, #30
 80037b2:	bf49      	itett	mi
 80037b4:	085b      	lsrmi	r3, r3, #1
 80037b6:	089b      	lsrpl	r3, r3, #2
 80037b8:	2001      	movmi	r0, #1
 80037ba:	6013      	strmi	r3, [r2, #0]
 80037bc:	bf5c      	itt	pl
 80037be:	6013      	strpl	r3, [r2, #0]
 80037c0:	2002      	movpl	r0, #2
 80037c2:	4770      	bx	lr
 80037c4:	b299      	uxth	r1, r3
 80037c6:	b909      	cbnz	r1, 80037cc <__lo0bits+0x2a>
 80037c8:	0c1b      	lsrs	r3, r3, #16
 80037ca:	2010      	movs	r0, #16
 80037cc:	b2d9      	uxtb	r1, r3
 80037ce:	b909      	cbnz	r1, 80037d4 <__lo0bits+0x32>
 80037d0:	3008      	adds	r0, #8
 80037d2:	0a1b      	lsrs	r3, r3, #8
 80037d4:	0719      	lsls	r1, r3, #28
 80037d6:	bf04      	itt	eq
 80037d8:	091b      	lsreq	r3, r3, #4
 80037da:	3004      	addeq	r0, #4
 80037dc:	0799      	lsls	r1, r3, #30
 80037de:	bf04      	itt	eq
 80037e0:	089b      	lsreq	r3, r3, #2
 80037e2:	3002      	addeq	r0, #2
 80037e4:	07d9      	lsls	r1, r3, #31
 80037e6:	d403      	bmi.n	80037f0 <__lo0bits+0x4e>
 80037e8:	085b      	lsrs	r3, r3, #1
 80037ea:	f100 0001 	add.w	r0, r0, #1
 80037ee:	d003      	beq.n	80037f8 <__lo0bits+0x56>
 80037f0:	6013      	str	r3, [r2, #0]
 80037f2:	4770      	bx	lr
 80037f4:	2000      	movs	r0, #0
 80037f6:	4770      	bx	lr
 80037f8:	2020      	movs	r0, #32
 80037fa:	4770      	bx	lr

080037fc <__i2b>:
 80037fc:	b510      	push	{r4, lr}
 80037fe:	460c      	mov	r4, r1
 8003800:	2101      	movs	r1, #1
 8003802:	f7ff ff07 	bl	8003614 <_Balloc>
 8003806:	4602      	mov	r2, r0
 8003808:	b928      	cbnz	r0, 8003816 <__i2b+0x1a>
 800380a:	4b05      	ldr	r3, [pc, #20]	@ (8003820 <__i2b+0x24>)
 800380c:	4805      	ldr	r0, [pc, #20]	@ (8003824 <__i2b+0x28>)
 800380e:	f240 1145 	movw	r1, #325	@ 0x145
 8003812:	f000 fb5f 	bl	8003ed4 <__assert_func>
 8003816:	2301      	movs	r3, #1
 8003818:	6144      	str	r4, [r0, #20]
 800381a:	6103      	str	r3, [r0, #16]
 800381c:	bd10      	pop	{r4, pc}
 800381e:	bf00      	nop
 8003820:	0800471d 	.word	0x0800471d
 8003824:	0800473f 	.word	0x0800473f

08003828 <__multiply>:
 8003828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800382c:	4614      	mov	r4, r2
 800382e:	690a      	ldr	r2, [r1, #16]
 8003830:	6923      	ldr	r3, [r4, #16]
 8003832:	429a      	cmp	r2, r3
 8003834:	bfa8      	it	ge
 8003836:	4623      	movge	r3, r4
 8003838:	460f      	mov	r7, r1
 800383a:	bfa4      	itt	ge
 800383c:	460c      	movge	r4, r1
 800383e:	461f      	movge	r7, r3
 8003840:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003844:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003848:	68a3      	ldr	r3, [r4, #8]
 800384a:	6861      	ldr	r1, [r4, #4]
 800384c:	eb0a 0609 	add.w	r6, sl, r9
 8003850:	42b3      	cmp	r3, r6
 8003852:	b085      	sub	sp, #20
 8003854:	bfb8      	it	lt
 8003856:	3101      	addlt	r1, #1
 8003858:	f7ff fedc 	bl	8003614 <_Balloc>
 800385c:	b930      	cbnz	r0, 800386c <__multiply+0x44>
 800385e:	4602      	mov	r2, r0
 8003860:	4b44      	ldr	r3, [pc, #272]	@ (8003974 <__multiply+0x14c>)
 8003862:	4845      	ldr	r0, [pc, #276]	@ (8003978 <__multiply+0x150>)
 8003864:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003868:	f000 fb34 	bl	8003ed4 <__assert_func>
 800386c:	f100 0514 	add.w	r5, r0, #20
 8003870:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003874:	462b      	mov	r3, r5
 8003876:	2200      	movs	r2, #0
 8003878:	4543      	cmp	r3, r8
 800387a:	d321      	bcc.n	80038c0 <__multiply+0x98>
 800387c:	f107 0114 	add.w	r1, r7, #20
 8003880:	f104 0214 	add.w	r2, r4, #20
 8003884:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003888:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800388c:	9302      	str	r3, [sp, #8]
 800388e:	1b13      	subs	r3, r2, r4
 8003890:	3b15      	subs	r3, #21
 8003892:	f023 0303 	bic.w	r3, r3, #3
 8003896:	3304      	adds	r3, #4
 8003898:	f104 0715 	add.w	r7, r4, #21
 800389c:	42ba      	cmp	r2, r7
 800389e:	bf38      	it	cc
 80038a0:	2304      	movcc	r3, #4
 80038a2:	9301      	str	r3, [sp, #4]
 80038a4:	9b02      	ldr	r3, [sp, #8]
 80038a6:	9103      	str	r1, [sp, #12]
 80038a8:	428b      	cmp	r3, r1
 80038aa:	d80c      	bhi.n	80038c6 <__multiply+0x9e>
 80038ac:	2e00      	cmp	r6, #0
 80038ae:	dd03      	ble.n	80038b8 <__multiply+0x90>
 80038b0:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	d05a      	beq.n	800396e <__multiply+0x146>
 80038b8:	6106      	str	r6, [r0, #16]
 80038ba:	b005      	add	sp, #20
 80038bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80038c0:	f843 2b04 	str.w	r2, [r3], #4
 80038c4:	e7d8      	b.n	8003878 <__multiply+0x50>
 80038c6:	f8b1 a000 	ldrh.w	sl, [r1]
 80038ca:	f1ba 0f00 	cmp.w	sl, #0
 80038ce:	d023      	beq.n	8003918 <__multiply+0xf0>
 80038d0:	f104 0e14 	add.w	lr, r4, #20
 80038d4:	46a9      	mov	r9, r5
 80038d6:	f04f 0c00 	mov.w	ip, #0
 80038da:	f85e 7b04 	ldr.w	r7, [lr], #4
 80038de:	f8d9 3000 	ldr.w	r3, [r9]
 80038e2:	fa1f fb87 	uxth.w	fp, r7
 80038e6:	b29b      	uxth	r3, r3
 80038e8:	fb0a 330b 	mla	r3, sl, fp, r3
 80038ec:	4463      	add	r3, ip
 80038ee:	f8d9 c000 	ldr.w	ip, [r9]
 80038f2:	0c3f      	lsrs	r7, r7, #16
 80038f4:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 80038f8:	fb0a c707 	mla	r7, sl, r7, ip
 80038fc:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8003900:	b29b      	uxth	r3, r3
 8003902:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003906:	4572      	cmp	r2, lr
 8003908:	f849 3b04 	str.w	r3, [r9], #4
 800390c:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003910:	d8e3      	bhi.n	80038da <__multiply+0xb2>
 8003912:	9b01      	ldr	r3, [sp, #4]
 8003914:	f845 c003 	str.w	ip, [r5, r3]
 8003918:	9b03      	ldr	r3, [sp, #12]
 800391a:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800391e:	3104      	adds	r1, #4
 8003920:	f1b9 0f00 	cmp.w	r9, #0
 8003924:	d021      	beq.n	800396a <__multiply+0x142>
 8003926:	682b      	ldr	r3, [r5, #0]
 8003928:	f104 0c14 	add.w	ip, r4, #20
 800392c:	46ae      	mov	lr, r5
 800392e:	f04f 0a00 	mov.w	sl, #0
 8003932:	f8bc b000 	ldrh.w	fp, [ip]
 8003936:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800393a:	fb09 770b 	mla	r7, r9, fp, r7
 800393e:	4457      	add	r7, sl
 8003940:	b29b      	uxth	r3, r3
 8003942:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003946:	f84e 3b04 	str.w	r3, [lr], #4
 800394a:	f85c 3b04 	ldr.w	r3, [ip], #4
 800394e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003952:	f8be 3000 	ldrh.w	r3, [lr]
 8003956:	fb09 330a 	mla	r3, r9, sl, r3
 800395a:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800395e:	4562      	cmp	r2, ip
 8003960:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003964:	d8e5      	bhi.n	8003932 <__multiply+0x10a>
 8003966:	9f01      	ldr	r7, [sp, #4]
 8003968:	51eb      	str	r3, [r5, r7]
 800396a:	3504      	adds	r5, #4
 800396c:	e79a      	b.n	80038a4 <__multiply+0x7c>
 800396e:	3e01      	subs	r6, #1
 8003970:	e79c      	b.n	80038ac <__multiply+0x84>
 8003972:	bf00      	nop
 8003974:	0800471d 	.word	0x0800471d
 8003978:	0800473f 	.word	0x0800473f

0800397c <__pow5mult>:
 800397c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003980:	4615      	mov	r5, r2
 8003982:	f012 0203 	ands.w	r2, r2, #3
 8003986:	4607      	mov	r7, r0
 8003988:	460e      	mov	r6, r1
 800398a:	d007      	beq.n	800399c <__pow5mult+0x20>
 800398c:	4c25      	ldr	r4, [pc, #148]	@ (8003a24 <__pow5mult+0xa8>)
 800398e:	3a01      	subs	r2, #1
 8003990:	2300      	movs	r3, #0
 8003992:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003996:	f7ff fe9f 	bl	80036d8 <__multadd>
 800399a:	4606      	mov	r6, r0
 800399c:	10ad      	asrs	r5, r5, #2
 800399e:	d03d      	beq.n	8003a1c <__pow5mult+0xa0>
 80039a0:	69fc      	ldr	r4, [r7, #28]
 80039a2:	b97c      	cbnz	r4, 80039c4 <__pow5mult+0x48>
 80039a4:	2010      	movs	r0, #16
 80039a6:	f7fe fa29 	bl	8001dfc <malloc>
 80039aa:	4602      	mov	r2, r0
 80039ac:	61f8      	str	r0, [r7, #28]
 80039ae:	b928      	cbnz	r0, 80039bc <__pow5mult+0x40>
 80039b0:	4b1d      	ldr	r3, [pc, #116]	@ (8003a28 <__pow5mult+0xac>)
 80039b2:	481e      	ldr	r0, [pc, #120]	@ (8003a2c <__pow5mult+0xb0>)
 80039b4:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80039b8:	f000 fa8c 	bl	8003ed4 <__assert_func>
 80039bc:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80039c0:	6004      	str	r4, [r0, #0]
 80039c2:	60c4      	str	r4, [r0, #12]
 80039c4:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80039c8:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80039cc:	b94c      	cbnz	r4, 80039e2 <__pow5mult+0x66>
 80039ce:	f240 2171 	movw	r1, #625	@ 0x271
 80039d2:	4638      	mov	r0, r7
 80039d4:	f7ff ff12 	bl	80037fc <__i2b>
 80039d8:	2300      	movs	r3, #0
 80039da:	f8c8 0008 	str.w	r0, [r8, #8]
 80039de:	4604      	mov	r4, r0
 80039e0:	6003      	str	r3, [r0, #0]
 80039e2:	f04f 0900 	mov.w	r9, #0
 80039e6:	07eb      	lsls	r3, r5, #31
 80039e8:	d50a      	bpl.n	8003a00 <__pow5mult+0x84>
 80039ea:	4631      	mov	r1, r6
 80039ec:	4622      	mov	r2, r4
 80039ee:	4638      	mov	r0, r7
 80039f0:	f7ff ff1a 	bl	8003828 <__multiply>
 80039f4:	4631      	mov	r1, r6
 80039f6:	4680      	mov	r8, r0
 80039f8:	4638      	mov	r0, r7
 80039fa:	f7ff fe4b 	bl	8003694 <_Bfree>
 80039fe:	4646      	mov	r6, r8
 8003a00:	106d      	asrs	r5, r5, #1
 8003a02:	d00b      	beq.n	8003a1c <__pow5mult+0xa0>
 8003a04:	6820      	ldr	r0, [r4, #0]
 8003a06:	b938      	cbnz	r0, 8003a18 <__pow5mult+0x9c>
 8003a08:	4622      	mov	r2, r4
 8003a0a:	4621      	mov	r1, r4
 8003a0c:	4638      	mov	r0, r7
 8003a0e:	f7ff ff0b 	bl	8003828 <__multiply>
 8003a12:	6020      	str	r0, [r4, #0]
 8003a14:	f8c0 9000 	str.w	r9, [r0]
 8003a18:	4604      	mov	r4, r0
 8003a1a:	e7e4      	b.n	80039e6 <__pow5mult+0x6a>
 8003a1c:	4630      	mov	r0, r6
 8003a1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003a22:	bf00      	nop
 8003a24:	08004798 	.word	0x08004798
 8003a28:	080046ae 	.word	0x080046ae
 8003a2c:	0800473f 	.word	0x0800473f

08003a30 <__lshift>:
 8003a30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a34:	460c      	mov	r4, r1
 8003a36:	6849      	ldr	r1, [r1, #4]
 8003a38:	6923      	ldr	r3, [r4, #16]
 8003a3a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003a3e:	68a3      	ldr	r3, [r4, #8]
 8003a40:	4607      	mov	r7, r0
 8003a42:	4691      	mov	r9, r2
 8003a44:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003a48:	f108 0601 	add.w	r6, r8, #1
 8003a4c:	42b3      	cmp	r3, r6
 8003a4e:	db0b      	blt.n	8003a68 <__lshift+0x38>
 8003a50:	4638      	mov	r0, r7
 8003a52:	f7ff fddf 	bl	8003614 <_Balloc>
 8003a56:	4605      	mov	r5, r0
 8003a58:	b948      	cbnz	r0, 8003a6e <__lshift+0x3e>
 8003a5a:	4602      	mov	r2, r0
 8003a5c:	4b28      	ldr	r3, [pc, #160]	@ (8003b00 <__lshift+0xd0>)
 8003a5e:	4829      	ldr	r0, [pc, #164]	@ (8003b04 <__lshift+0xd4>)
 8003a60:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003a64:	f000 fa36 	bl	8003ed4 <__assert_func>
 8003a68:	3101      	adds	r1, #1
 8003a6a:	005b      	lsls	r3, r3, #1
 8003a6c:	e7ee      	b.n	8003a4c <__lshift+0x1c>
 8003a6e:	2300      	movs	r3, #0
 8003a70:	f100 0114 	add.w	r1, r0, #20
 8003a74:	f100 0210 	add.w	r2, r0, #16
 8003a78:	4618      	mov	r0, r3
 8003a7a:	4553      	cmp	r3, sl
 8003a7c:	db33      	blt.n	8003ae6 <__lshift+0xb6>
 8003a7e:	6920      	ldr	r0, [r4, #16]
 8003a80:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003a84:	f104 0314 	add.w	r3, r4, #20
 8003a88:	f019 091f 	ands.w	r9, r9, #31
 8003a8c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003a90:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003a94:	d02b      	beq.n	8003aee <__lshift+0xbe>
 8003a96:	f1c9 0e20 	rsb	lr, r9, #32
 8003a9a:	468a      	mov	sl, r1
 8003a9c:	2200      	movs	r2, #0
 8003a9e:	6818      	ldr	r0, [r3, #0]
 8003aa0:	fa00 f009 	lsl.w	r0, r0, r9
 8003aa4:	4310      	orrs	r0, r2
 8003aa6:	f84a 0b04 	str.w	r0, [sl], #4
 8003aaa:	f853 2b04 	ldr.w	r2, [r3], #4
 8003aae:	459c      	cmp	ip, r3
 8003ab0:	fa22 f20e 	lsr.w	r2, r2, lr
 8003ab4:	d8f3      	bhi.n	8003a9e <__lshift+0x6e>
 8003ab6:	ebac 0304 	sub.w	r3, ip, r4
 8003aba:	3b15      	subs	r3, #21
 8003abc:	f023 0303 	bic.w	r3, r3, #3
 8003ac0:	3304      	adds	r3, #4
 8003ac2:	f104 0015 	add.w	r0, r4, #21
 8003ac6:	4584      	cmp	ip, r0
 8003ac8:	bf38      	it	cc
 8003aca:	2304      	movcc	r3, #4
 8003acc:	50ca      	str	r2, [r1, r3]
 8003ace:	b10a      	cbz	r2, 8003ad4 <__lshift+0xa4>
 8003ad0:	f108 0602 	add.w	r6, r8, #2
 8003ad4:	3e01      	subs	r6, #1
 8003ad6:	4638      	mov	r0, r7
 8003ad8:	612e      	str	r6, [r5, #16]
 8003ada:	4621      	mov	r1, r4
 8003adc:	f7ff fdda 	bl	8003694 <_Bfree>
 8003ae0:	4628      	mov	r0, r5
 8003ae2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003ae6:	f842 0f04 	str.w	r0, [r2, #4]!
 8003aea:	3301      	adds	r3, #1
 8003aec:	e7c5      	b.n	8003a7a <__lshift+0x4a>
 8003aee:	3904      	subs	r1, #4
 8003af0:	f853 2b04 	ldr.w	r2, [r3], #4
 8003af4:	f841 2f04 	str.w	r2, [r1, #4]!
 8003af8:	459c      	cmp	ip, r3
 8003afa:	d8f9      	bhi.n	8003af0 <__lshift+0xc0>
 8003afc:	e7ea      	b.n	8003ad4 <__lshift+0xa4>
 8003afe:	bf00      	nop
 8003b00:	0800471d 	.word	0x0800471d
 8003b04:	0800473f 	.word	0x0800473f

08003b08 <__mcmp>:
 8003b08:	690a      	ldr	r2, [r1, #16]
 8003b0a:	4603      	mov	r3, r0
 8003b0c:	6900      	ldr	r0, [r0, #16]
 8003b0e:	1a80      	subs	r0, r0, r2
 8003b10:	b530      	push	{r4, r5, lr}
 8003b12:	d10e      	bne.n	8003b32 <__mcmp+0x2a>
 8003b14:	3314      	adds	r3, #20
 8003b16:	3114      	adds	r1, #20
 8003b18:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003b1c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003b20:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003b24:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003b28:	4295      	cmp	r5, r2
 8003b2a:	d003      	beq.n	8003b34 <__mcmp+0x2c>
 8003b2c:	d205      	bcs.n	8003b3a <__mcmp+0x32>
 8003b2e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003b32:	bd30      	pop	{r4, r5, pc}
 8003b34:	42a3      	cmp	r3, r4
 8003b36:	d3f3      	bcc.n	8003b20 <__mcmp+0x18>
 8003b38:	e7fb      	b.n	8003b32 <__mcmp+0x2a>
 8003b3a:	2001      	movs	r0, #1
 8003b3c:	e7f9      	b.n	8003b32 <__mcmp+0x2a>
	...

08003b40 <__mdiff>:
 8003b40:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b44:	4689      	mov	r9, r1
 8003b46:	4606      	mov	r6, r0
 8003b48:	4611      	mov	r1, r2
 8003b4a:	4648      	mov	r0, r9
 8003b4c:	4614      	mov	r4, r2
 8003b4e:	f7ff ffdb 	bl	8003b08 <__mcmp>
 8003b52:	1e05      	subs	r5, r0, #0
 8003b54:	d112      	bne.n	8003b7c <__mdiff+0x3c>
 8003b56:	4629      	mov	r1, r5
 8003b58:	4630      	mov	r0, r6
 8003b5a:	f7ff fd5b 	bl	8003614 <_Balloc>
 8003b5e:	4602      	mov	r2, r0
 8003b60:	b928      	cbnz	r0, 8003b6e <__mdiff+0x2e>
 8003b62:	4b3e      	ldr	r3, [pc, #248]	@ (8003c5c <__mdiff+0x11c>)
 8003b64:	f240 2137 	movw	r1, #567	@ 0x237
 8003b68:	483d      	ldr	r0, [pc, #244]	@ (8003c60 <__mdiff+0x120>)
 8003b6a:	f000 f9b3 	bl	8003ed4 <__assert_func>
 8003b6e:	2301      	movs	r3, #1
 8003b70:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003b74:	4610      	mov	r0, r2
 8003b76:	b003      	add	sp, #12
 8003b78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b7c:	bfbc      	itt	lt
 8003b7e:	464b      	movlt	r3, r9
 8003b80:	46a1      	movlt	r9, r4
 8003b82:	4630      	mov	r0, r6
 8003b84:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003b88:	bfba      	itte	lt
 8003b8a:	461c      	movlt	r4, r3
 8003b8c:	2501      	movlt	r5, #1
 8003b8e:	2500      	movge	r5, #0
 8003b90:	f7ff fd40 	bl	8003614 <_Balloc>
 8003b94:	4602      	mov	r2, r0
 8003b96:	b918      	cbnz	r0, 8003ba0 <__mdiff+0x60>
 8003b98:	4b30      	ldr	r3, [pc, #192]	@ (8003c5c <__mdiff+0x11c>)
 8003b9a:	f240 2145 	movw	r1, #581	@ 0x245
 8003b9e:	e7e3      	b.n	8003b68 <__mdiff+0x28>
 8003ba0:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003ba4:	6926      	ldr	r6, [r4, #16]
 8003ba6:	60c5      	str	r5, [r0, #12]
 8003ba8:	f109 0310 	add.w	r3, r9, #16
 8003bac:	f109 0514 	add.w	r5, r9, #20
 8003bb0:	f104 0e14 	add.w	lr, r4, #20
 8003bb4:	f100 0b14 	add.w	fp, r0, #20
 8003bb8:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003bbc:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003bc0:	9301      	str	r3, [sp, #4]
 8003bc2:	46d9      	mov	r9, fp
 8003bc4:	f04f 0c00 	mov.w	ip, #0
 8003bc8:	9b01      	ldr	r3, [sp, #4]
 8003bca:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003bce:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003bd2:	9301      	str	r3, [sp, #4]
 8003bd4:	b281      	uxth	r1, r0
 8003bd6:	fa1f f38a 	uxth.w	r3, sl
 8003bda:	1a5b      	subs	r3, r3, r1
 8003bdc:	0c00      	lsrs	r0, r0, #16
 8003bde:	4463      	add	r3, ip
 8003be0:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003be4:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003be8:	b29b      	uxth	r3, r3
 8003bea:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003bee:	4576      	cmp	r6, lr
 8003bf0:	f849 3b04 	str.w	r3, [r9], #4
 8003bf4:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003bf8:	d8e6      	bhi.n	8003bc8 <__mdiff+0x88>
 8003bfa:	1b33      	subs	r3, r6, r4
 8003bfc:	3b15      	subs	r3, #21
 8003bfe:	f023 0303 	bic.w	r3, r3, #3
 8003c02:	3415      	adds	r4, #21
 8003c04:	3304      	adds	r3, #4
 8003c06:	42a6      	cmp	r6, r4
 8003c08:	bf38      	it	cc
 8003c0a:	2304      	movcc	r3, #4
 8003c0c:	441d      	add	r5, r3
 8003c0e:	445b      	add	r3, fp
 8003c10:	461e      	mov	r6, r3
 8003c12:	462c      	mov	r4, r5
 8003c14:	4544      	cmp	r4, r8
 8003c16:	d30e      	bcc.n	8003c36 <__mdiff+0xf6>
 8003c18:	f108 0103 	add.w	r1, r8, #3
 8003c1c:	1b49      	subs	r1, r1, r5
 8003c1e:	f021 0103 	bic.w	r1, r1, #3
 8003c22:	3d03      	subs	r5, #3
 8003c24:	45a8      	cmp	r8, r5
 8003c26:	bf38      	it	cc
 8003c28:	2100      	movcc	r1, #0
 8003c2a:	440b      	add	r3, r1
 8003c2c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003c30:	b191      	cbz	r1, 8003c58 <__mdiff+0x118>
 8003c32:	6117      	str	r7, [r2, #16]
 8003c34:	e79e      	b.n	8003b74 <__mdiff+0x34>
 8003c36:	f854 1b04 	ldr.w	r1, [r4], #4
 8003c3a:	46e6      	mov	lr, ip
 8003c3c:	0c08      	lsrs	r0, r1, #16
 8003c3e:	fa1c fc81 	uxtah	ip, ip, r1
 8003c42:	4471      	add	r1, lr
 8003c44:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003c48:	b289      	uxth	r1, r1
 8003c4a:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003c4e:	f846 1b04 	str.w	r1, [r6], #4
 8003c52:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003c56:	e7dd      	b.n	8003c14 <__mdiff+0xd4>
 8003c58:	3f01      	subs	r7, #1
 8003c5a:	e7e7      	b.n	8003c2c <__mdiff+0xec>
 8003c5c:	0800471d 	.word	0x0800471d
 8003c60:	0800473f 	.word	0x0800473f

08003c64 <__d2b>:
 8003c64:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8003c68:	2101      	movs	r1, #1
 8003c6a:	9e08      	ldr	r6, [sp, #32]
 8003c6c:	4690      	mov	r8, r2
 8003c6e:	4699      	mov	r9, r3
 8003c70:	f7ff fcd0 	bl	8003614 <_Balloc>
 8003c74:	4604      	mov	r4, r0
 8003c76:	b930      	cbnz	r0, 8003c86 <__d2b+0x22>
 8003c78:	4602      	mov	r2, r0
 8003c7a:	4b24      	ldr	r3, [pc, #144]	@ (8003d0c <__d2b+0xa8>)
 8003c7c:	4824      	ldr	r0, [pc, #144]	@ (8003d10 <__d2b+0xac>)
 8003c7e:	f240 310f 	movw	r1, #783	@ 0x30f
 8003c82:	f000 f927 	bl	8003ed4 <__assert_func>
 8003c86:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003c8a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003c8e:	b10d      	cbz	r5, 8003c94 <__d2b+0x30>
 8003c90:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003c94:	9301      	str	r3, [sp, #4]
 8003c96:	f1b8 0300 	subs.w	r3, r8, #0
 8003c9a:	d024      	beq.n	8003ce6 <__d2b+0x82>
 8003c9c:	4668      	mov	r0, sp
 8003c9e:	9300      	str	r3, [sp, #0]
 8003ca0:	f7ff fd7f 	bl	80037a2 <__lo0bits>
 8003ca4:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003ca8:	b1d8      	cbz	r0, 8003ce2 <__d2b+0x7e>
 8003caa:	f1c0 0320 	rsb	r3, r0, #32
 8003cae:	fa02 f303 	lsl.w	r3, r2, r3
 8003cb2:	430b      	orrs	r3, r1
 8003cb4:	40c2      	lsrs	r2, r0
 8003cb6:	6163      	str	r3, [r4, #20]
 8003cb8:	9201      	str	r2, [sp, #4]
 8003cba:	9b01      	ldr	r3, [sp, #4]
 8003cbc:	61a3      	str	r3, [r4, #24]
 8003cbe:	2b00      	cmp	r3, #0
 8003cc0:	bf0c      	ite	eq
 8003cc2:	2201      	moveq	r2, #1
 8003cc4:	2202      	movne	r2, #2
 8003cc6:	6122      	str	r2, [r4, #16]
 8003cc8:	b1ad      	cbz	r5, 8003cf6 <__d2b+0x92>
 8003cca:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003cce:	4405      	add	r5, r0
 8003cd0:	6035      	str	r5, [r6, #0]
 8003cd2:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003cd6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003cd8:	6018      	str	r0, [r3, #0]
 8003cda:	4620      	mov	r0, r4
 8003cdc:	b002      	add	sp, #8
 8003cde:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8003ce2:	6161      	str	r1, [r4, #20]
 8003ce4:	e7e9      	b.n	8003cba <__d2b+0x56>
 8003ce6:	a801      	add	r0, sp, #4
 8003ce8:	f7ff fd5b 	bl	80037a2 <__lo0bits>
 8003cec:	9b01      	ldr	r3, [sp, #4]
 8003cee:	6163      	str	r3, [r4, #20]
 8003cf0:	3020      	adds	r0, #32
 8003cf2:	2201      	movs	r2, #1
 8003cf4:	e7e7      	b.n	8003cc6 <__d2b+0x62>
 8003cf6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003cfa:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003cfe:	6030      	str	r0, [r6, #0]
 8003d00:	6918      	ldr	r0, [r3, #16]
 8003d02:	f7ff fd2f 	bl	8003764 <__hi0bits>
 8003d06:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003d0a:	e7e4      	b.n	8003cd6 <__d2b+0x72>
 8003d0c:	0800471d 	.word	0x0800471d
 8003d10:	0800473f 	.word	0x0800473f

08003d14 <__sread>:
 8003d14:	b510      	push	{r4, lr}
 8003d16:	460c      	mov	r4, r1
 8003d18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d1c:	f000 f8a8 	bl	8003e70 <_read_r>
 8003d20:	2800      	cmp	r0, #0
 8003d22:	bfab      	itete	ge
 8003d24:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8003d26:	89a3      	ldrhlt	r3, [r4, #12]
 8003d28:	181b      	addge	r3, r3, r0
 8003d2a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8003d2e:	bfac      	ite	ge
 8003d30:	6563      	strge	r3, [r4, #84]	@ 0x54
 8003d32:	81a3      	strhlt	r3, [r4, #12]
 8003d34:	bd10      	pop	{r4, pc}

08003d36 <__swrite>:
 8003d36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d3a:	461f      	mov	r7, r3
 8003d3c:	898b      	ldrh	r3, [r1, #12]
 8003d3e:	05db      	lsls	r3, r3, #23
 8003d40:	4605      	mov	r5, r0
 8003d42:	460c      	mov	r4, r1
 8003d44:	4616      	mov	r6, r2
 8003d46:	d505      	bpl.n	8003d54 <__swrite+0x1e>
 8003d48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d4c:	2302      	movs	r3, #2
 8003d4e:	2200      	movs	r2, #0
 8003d50:	f000 f87c 	bl	8003e4c <_lseek_r>
 8003d54:	89a3      	ldrh	r3, [r4, #12]
 8003d56:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003d5a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003d5e:	81a3      	strh	r3, [r4, #12]
 8003d60:	4632      	mov	r2, r6
 8003d62:	463b      	mov	r3, r7
 8003d64:	4628      	mov	r0, r5
 8003d66:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003d6a:	f000 b893 	b.w	8003e94 <_write_r>

08003d6e <__sseek>:
 8003d6e:	b510      	push	{r4, lr}
 8003d70:	460c      	mov	r4, r1
 8003d72:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d76:	f000 f869 	bl	8003e4c <_lseek_r>
 8003d7a:	1c43      	adds	r3, r0, #1
 8003d7c:	89a3      	ldrh	r3, [r4, #12]
 8003d7e:	bf15      	itete	ne
 8003d80:	6560      	strne	r0, [r4, #84]	@ 0x54
 8003d82:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8003d86:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8003d8a:	81a3      	strheq	r3, [r4, #12]
 8003d8c:	bf18      	it	ne
 8003d8e:	81a3      	strhne	r3, [r4, #12]
 8003d90:	bd10      	pop	{r4, pc}

08003d92 <__sclose>:
 8003d92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d96:	f000 b849 	b.w	8003e2c <_close_r>

08003d9a <_realloc_r>:
 8003d9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d9e:	4680      	mov	r8, r0
 8003da0:	4615      	mov	r5, r2
 8003da2:	460c      	mov	r4, r1
 8003da4:	b921      	cbnz	r1, 8003db0 <_realloc_r+0x16>
 8003da6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003daa:	4611      	mov	r1, r2
 8003dac:	f7fe b850 	b.w	8001e50 <_malloc_r>
 8003db0:	b92a      	cbnz	r2, 8003dbe <_realloc_r+0x24>
 8003db2:	f7ff f9e5 	bl	8003180 <_free_r>
 8003db6:	2400      	movs	r4, #0
 8003db8:	4620      	mov	r0, r4
 8003dba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003dbe:	f000 f8cd 	bl	8003f5c <_malloc_usable_size_r>
 8003dc2:	4285      	cmp	r5, r0
 8003dc4:	4606      	mov	r6, r0
 8003dc6:	d802      	bhi.n	8003dce <_realloc_r+0x34>
 8003dc8:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8003dcc:	d8f4      	bhi.n	8003db8 <_realloc_r+0x1e>
 8003dce:	4629      	mov	r1, r5
 8003dd0:	4640      	mov	r0, r8
 8003dd2:	f7fe f83d 	bl	8001e50 <_malloc_r>
 8003dd6:	4607      	mov	r7, r0
 8003dd8:	2800      	cmp	r0, #0
 8003dda:	d0ec      	beq.n	8003db6 <_realloc_r+0x1c>
 8003ddc:	42b5      	cmp	r5, r6
 8003dde:	462a      	mov	r2, r5
 8003de0:	4621      	mov	r1, r4
 8003de2:	bf28      	it	cs
 8003de4:	4632      	movcs	r2, r6
 8003de6:	f000 f867 	bl	8003eb8 <memcpy>
 8003dea:	4621      	mov	r1, r4
 8003dec:	4640      	mov	r0, r8
 8003dee:	f7ff f9c7 	bl	8003180 <_free_r>
 8003df2:	463c      	mov	r4, r7
 8003df4:	e7e0      	b.n	8003db8 <_realloc_r+0x1e>

08003df6 <memmove>:
 8003df6:	4288      	cmp	r0, r1
 8003df8:	b510      	push	{r4, lr}
 8003dfa:	eb01 0402 	add.w	r4, r1, r2
 8003dfe:	d902      	bls.n	8003e06 <memmove+0x10>
 8003e00:	4284      	cmp	r4, r0
 8003e02:	4623      	mov	r3, r4
 8003e04:	d807      	bhi.n	8003e16 <memmove+0x20>
 8003e06:	1e43      	subs	r3, r0, #1
 8003e08:	42a1      	cmp	r1, r4
 8003e0a:	d008      	beq.n	8003e1e <memmove+0x28>
 8003e0c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003e10:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003e14:	e7f8      	b.n	8003e08 <memmove+0x12>
 8003e16:	4402      	add	r2, r0
 8003e18:	4601      	mov	r1, r0
 8003e1a:	428a      	cmp	r2, r1
 8003e1c:	d100      	bne.n	8003e20 <memmove+0x2a>
 8003e1e:	bd10      	pop	{r4, pc}
 8003e20:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003e24:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003e28:	e7f7      	b.n	8003e1a <memmove+0x24>
	...

08003e2c <_close_r>:
 8003e2c:	b538      	push	{r3, r4, r5, lr}
 8003e2e:	4d06      	ldr	r5, [pc, #24]	@ (8003e48 <_close_r+0x1c>)
 8003e30:	2300      	movs	r3, #0
 8003e32:	4604      	mov	r4, r0
 8003e34:	4608      	mov	r0, r1
 8003e36:	602b      	str	r3, [r5, #0]
 8003e38:	f7fd fc85 	bl	8001746 <_close>
 8003e3c:	1c43      	adds	r3, r0, #1
 8003e3e:	d102      	bne.n	8003e46 <_close_r+0x1a>
 8003e40:	682b      	ldr	r3, [r5, #0]
 8003e42:	b103      	cbz	r3, 8003e46 <_close_r+0x1a>
 8003e44:	6023      	str	r3, [r4, #0]
 8003e46:	bd38      	pop	{r3, r4, r5, pc}
 8003e48:	2000035c 	.word	0x2000035c

08003e4c <_lseek_r>:
 8003e4c:	b538      	push	{r3, r4, r5, lr}
 8003e4e:	4d07      	ldr	r5, [pc, #28]	@ (8003e6c <_lseek_r+0x20>)
 8003e50:	4604      	mov	r4, r0
 8003e52:	4608      	mov	r0, r1
 8003e54:	4611      	mov	r1, r2
 8003e56:	2200      	movs	r2, #0
 8003e58:	602a      	str	r2, [r5, #0]
 8003e5a:	461a      	mov	r2, r3
 8003e5c:	f7fd fc97 	bl	800178e <_lseek>
 8003e60:	1c43      	adds	r3, r0, #1
 8003e62:	d102      	bne.n	8003e6a <_lseek_r+0x1e>
 8003e64:	682b      	ldr	r3, [r5, #0]
 8003e66:	b103      	cbz	r3, 8003e6a <_lseek_r+0x1e>
 8003e68:	6023      	str	r3, [r4, #0]
 8003e6a:	bd38      	pop	{r3, r4, r5, pc}
 8003e6c:	2000035c 	.word	0x2000035c

08003e70 <_read_r>:
 8003e70:	b538      	push	{r3, r4, r5, lr}
 8003e72:	4d07      	ldr	r5, [pc, #28]	@ (8003e90 <_read_r+0x20>)
 8003e74:	4604      	mov	r4, r0
 8003e76:	4608      	mov	r0, r1
 8003e78:	4611      	mov	r1, r2
 8003e7a:	2200      	movs	r2, #0
 8003e7c:	602a      	str	r2, [r5, #0]
 8003e7e:	461a      	mov	r2, r3
 8003e80:	f7fd fc28 	bl	80016d4 <_read>
 8003e84:	1c43      	adds	r3, r0, #1
 8003e86:	d102      	bne.n	8003e8e <_read_r+0x1e>
 8003e88:	682b      	ldr	r3, [r5, #0]
 8003e8a:	b103      	cbz	r3, 8003e8e <_read_r+0x1e>
 8003e8c:	6023      	str	r3, [r4, #0]
 8003e8e:	bd38      	pop	{r3, r4, r5, pc}
 8003e90:	2000035c 	.word	0x2000035c

08003e94 <_write_r>:
 8003e94:	b538      	push	{r3, r4, r5, lr}
 8003e96:	4d07      	ldr	r5, [pc, #28]	@ (8003eb4 <_write_r+0x20>)
 8003e98:	4604      	mov	r4, r0
 8003e9a:	4608      	mov	r0, r1
 8003e9c:	4611      	mov	r1, r2
 8003e9e:	2200      	movs	r2, #0
 8003ea0:	602a      	str	r2, [r5, #0]
 8003ea2:	461a      	mov	r2, r3
 8003ea4:	f7fd fc33 	bl	800170e <_write>
 8003ea8:	1c43      	adds	r3, r0, #1
 8003eaa:	d102      	bne.n	8003eb2 <_write_r+0x1e>
 8003eac:	682b      	ldr	r3, [r5, #0]
 8003eae:	b103      	cbz	r3, 8003eb2 <_write_r+0x1e>
 8003eb0:	6023      	str	r3, [r4, #0]
 8003eb2:	bd38      	pop	{r3, r4, r5, pc}
 8003eb4:	2000035c 	.word	0x2000035c

08003eb8 <memcpy>:
 8003eb8:	440a      	add	r2, r1
 8003eba:	4291      	cmp	r1, r2
 8003ebc:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8003ec0:	d100      	bne.n	8003ec4 <memcpy+0xc>
 8003ec2:	4770      	bx	lr
 8003ec4:	b510      	push	{r4, lr}
 8003ec6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003eca:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003ece:	4291      	cmp	r1, r2
 8003ed0:	d1f9      	bne.n	8003ec6 <memcpy+0xe>
 8003ed2:	bd10      	pop	{r4, pc}

08003ed4 <__assert_func>:
 8003ed4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003ed6:	4614      	mov	r4, r2
 8003ed8:	461a      	mov	r2, r3
 8003eda:	4b09      	ldr	r3, [pc, #36]	@ (8003f00 <__assert_func+0x2c>)
 8003edc:	681b      	ldr	r3, [r3, #0]
 8003ede:	4605      	mov	r5, r0
 8003ee0:	68d8      	ldr	r0, [r3, #12]
 8003ee2:	b954      	cbnz	r4, 8003efa <__assert_func+0x26>
 8003ee4:	4b07      	ldr	r3, [pc, #28]	@ (8003f04 <__assert_func+0x30>)
 8003ee6:	461c      	mov	r4, r3
 8003ee8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003eec:	9100      	str	r1, [sp, #0]
 8003eee:	462b      	mov	r3, r5
 8003ef0:	4905      	ldr	r1, [pc, #20]	@ (8003f08 <__assert_func+0x34>)
 8003ef2:	f000 f83b 	bl	8003f6c <fiprintf>
 8003ef6:	f000 f858 	bl	8003faa <abort>
 8003efa:	4b04      	ldr	r3, [pc, #16]	@ (8003f0c <__assert_func+0x38>)
 8003efc:	e7f4      	b.n	8003ee8 <__assert_func+0x14>
 8003efe:	bf00      	nop
 8003f00:	20000034 	.word	0x20000034
 8003f04:	080049de 	.word	0x080049de
 8003f08:	080049b0 	.word	0x080049b0
 8003f0c:	080049a3 	.word	0x080049a3

08003f10 <_calloc_r>:
 8003f10:	b570      	push	{r4, r5, r6, lr}
 8003f12:	fba1 5402 	umull	r5, r4, r1, r2
 8003f16:	b93c      	cbnz	r4, 8003f28 <_calloc_r+0x18>
 8003f18:	4629      	mov	r1, r5
 8003f1a:	f7fd ff99 	bl	8001e50 <_malloc_r>
 8003f1e:	4606      	mov	r6, r0
 8003f20:	b928      	cbnz	r0, 8003f2e <_calloc_r+0x1e>
 8003f22:	2600      	movs	r6, #0
 8003f24:	4630      	mov	r0, r6
 8003f26:	bd70      	pop	{r4, r5, r6, pc}
 8003f28:	220c      	movs	r2, #12
 8003f2a:	6002      	str	r2, [r0, #0]
 8003f2c:	e7f9      	b.n	8003f22 <_calloc_r+0x12>
 8003f2e:	462a      	mov	r2, r5
 8003f30:	4621      	mov	r1, r4
 8003f32:	f7fe fa89 	bl	8002448 <memset>
 8003f36:	e7f5      	b.n	8003f24 <_calloc_r+0x14>

08003f38 <__ascii_mbtowc>:
 8003f38:	b082      	sub	sp, #8
 8003f3a:	b901      	cbnz	r1, 8003f3e <__ascii_mbtowc+0x6>
 8003f3c:	a901      	add	r1, sp, #4
 8003f3e:	b142      	cbz	r2, 8003f52 <__ascii_mbtowc+0x1a>
 8003f40:	b14b      	cbz	r3, 8003f56 <__ascii_mbtowc+0x1e>
 8003f42:	7813      	ldrb	r3, [r2, #0]
 8003f44:	600b      	str	r3, [r1, #0]
 8003f46:	7812      	ldrb	r2, [r2, #0]
 8003f48:	1e10      	subs	r0, r2, #0
 8003f4a:	bf18      	it	ne
 8003f4c:	2001      	movne	r0, #1
 8003f4e:	b002      	add	sp, #8
 8003f50:	4770      	bx	lr
 8003f52:	4610      	mov	r0, r2
 8003f54:	e7fb      	b.n	8003f4e <__ascii_mbtowc+0x16>
 8003f56:	f06f 0001 	mvn.w	r0, #1
 8003f5a:	e7f8      	b.n	8003f4e <__ascii_mbtowc+0x16>

08003f5c <_malloc_usable_size_r>:
 8003f5c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003f60:	1f18      	subs	r0, r3, #4
 8003f62:	2b00      	cmp	r3, #0
 8003f64:	bfbc      	itt	lt
 8003f66:	580b      	ldrlt	r3, [r1, r0]
 8003f68:	18c0      	addlt	r0, r0, r3
 8003f6a:	4770      	bx	lr

08003f6c <fiprintf>:
 8003f6c:	b40e      	push	{r1, r2, r3}
 8003f6e:	b503      	push	{r0, r1, lr}
 8003f70:	4601      	mov	r1, r0
 8003f72:	ab03      	add	r3, sp, #12
 8003f74:	4805      	ldr	r0, [pc, #20]	@ (8003f8c <fiprintf+0x20>)
 8003f76:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f7a:	6800      	ldr	r0, [r0, #0]
 8003f7c:	9301      	str	r3, [sp, #4]
 8003f7e:	f000 f843 	bl	8004008 <_vfiprintf_r>
 8003f82:	b002      	add	sp, #8
 8003f84:	f85d eb04 	ldr.w	lr, [sp], #4
 8003f88:	b003      	add	sp, #12
 8003f8a:	4770      	bx	lr
 8003f8c:	20000034 	.word	0x20000034

08003f90 <__ascii_wctomb>:
 8003f90:	4603      	mov	r3, r0
 8003f92:	4608      	mov	r0, r1
 8003f94:	b141      	cbz	r1, 8003fa8 <__ascii_wctomb+0x18>
 8003f96:	2aff      	cmp	r2, #255	@ 0xff
 8003f98:	d904      	bls.n	8003fa4 <__ascii_wctomb+0x14>
 8003f9a:	228a      	movs	r2, #138	@ 0x8a
 8003f9c:	601a      	str	r2, [r3, #0]
 8003f9e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003fa2:	4770      	bx	lr
 8003fa4:	700a      	strb	r2, [r1, #0]
 8003fa6:	2001      	movs	r0, #1
 8003fa8:	4770      	bx	lr

08003faa <abort>:
 8003faa:	b508      	push	{r3, lr}
 8003fac:	2006      	movs	r0, #6
 8003fae:	f000 fa83 	bl	80044b8 <raise>
 8003fb2:	2001      	movs	r0, #1
 8003fb4:	f7fd fb83 	bl	80016be <_exit>

08003fb8 <__sfputc_r>:
 8003fb8:	6893      	ldr	r3, [r2, #8]
 8003fba:	3b01      	subs	r3, #1
 8003fbc:	2b00      	cmp	r3, #0
 8003fbe:	b410      	push	{r4}
 8003fc0:	6093      	str	r3, [r2, #8]
 8003fc2:	da07      	bge.n	8003fd4 <__sfputc_r+0x1c>
 8003fc4:	6994      	ldr	r4, [r2, #24]
 8003fc6:	42a3      	cmp	r3, r4
 8003fc8:	db01      	blt.n	8003fce <__sfputc_r+0x16>
 8003fca:	290a      	cmp	r1, #10
 8003fcc:	d102      	bne.n	8003fd4 <__sfputc_r+0x1c>
 8003fce:	bc10      	pop	{r4}
 8003fd0:	f000 b932 	b.w	8004238 <__swbuf_r>
 8003fd4:	6813      	ldr	r3, [r2, #0]
 8003fd6:	1c58      	adds	r0, r3, #1
 8003fd8:	6010      	str	r0, [r2, #0]
 8003fda:	7019      	strb	r1, [r3, #0]
 8003fdc:	4608      	mov	r0, r1
 8003fde:	bc10      	pop	{r4}
 8003fe0:	4770      	bx	lr

08003fe2 <__sfputs_r>:
 8003fe2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003fe4:	4606      	mov	r6, r0
 8003fe6:	460f      	mov	r7, r1
 8003fe8:	4614      	mov	r4, r2
 8003fea:	18d5      	adds	r5, r2, r3
 8003fec:	42ac      	cmp	r4, r5
 8003fee:	d101      	bne.n	8003ff4 <__sfputs_r+0x12>
 8003ff0:	2000      	movs	r0, #0
 8003ff2:	e007      	b.n	8004004 <__sfputs_r+0x22>
 8003ff4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003ff8:	463a      	mov	r2, r7
 8003ffa:	4630      	mov	r0, r6
 8003ffc:	f7ff ffdc 	bl	8003fb8 <__sfputc_r>
 8004000:	1c43      	adds	r3, r0, #1
 8004002:	d1f3      	bne.n	8003fec <__sfputs_r+0xa>
 8004004:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08004008 <_vfiprintf_r>:
 8004008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800400c:	460d      	mov	r5, r1
 800400e:	b09d      	sub	sp, #116	@ 0x74
 8004010:	4614      	mov	r4, r2
 8004012:	4698      	mov	r8, r3
 8004014:	4606      	mov	r6, r0
 8004016:	b118      	cbz	r0, 8004020 <_vfiprintf_r+0x18>
 8004018:	6a03      	ldr	r3, [r0, #32]
 800401a:	b90b      	cbnz	r3, 8004020 <_vfiprintf_r+0x18>
 800401c:	f7fe f9de 	bl	80023dc <__sinit>
 8004020:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004022:	07d9      	lsls	r1, r3, #31
 8004024:	d405      	bmi.n	8004032 <_vfiprintf_r+0x2a>
 8004026:	89ab      	ldrh	r3, [r5, #12]
 8004028:	059a      	lsls	r2, r3, #22
 800402a:	d402      	bmi.n	8004032 <_vfiprintf_r+0x2a>
 800402c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800402e:	f7fe fa52 	bl	80024d6 <__retarget_lock_acquire_recursive>
 8004032:	89ab      	ldrh	r3, [r5, #12]
 8004034:	071b      	lsls	r3, r3, #28
 8004036:	d501      	bpl.n	800403c <_vfiprintf_r+0x34>
 8004038:	692b      	ldr	r3, [r5, #16]
 800403a:	b99b      	cbnz	r3, 8004064 <_vfiprintf_r+0x5c>
 800403c:	4629      	mov	r1, r5
 800403e:	4630      	mov	r0, r6
 8004040:	f000 f938 	bl	80042b4 <__swsetup_r>
 8004044:	b170      	cbz	r0, 8004064 <_vfiprintf_r+0x5c>
 8004046:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004048:	07dc      	lsls	r4, r3, #31
 800404a:	d504      	bpl.n	8004056 <_vfiprintf_r+0x4e>
 800404c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8004050:	b01d      	add	sp, #116	@ 0x74
 8004052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004056:	89ab      	ldrh	r3, [r5, #12]
 8004058:	0598      	lsls	r0, r3, #22
 800405a:	d4f7      	bmi.n	800404c <_vfiprintf_r+0x44>
 800405c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800405e:	f7fe fa3b 	bl	80024d8 <__retarget_lock_release_recursive>
 8004062:	e7f3      	b.n	800404c <_vfiprintf_r+0x44>
 8004064:	2300      	movs	r3, #0
 8004066:	9309      	str	r3, [sp, #36]	@ 0x24
 8004068:	2320      	movs	r3, #32
 800406a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800406e:	f8cd 800c 	str.w	r8, [sp, #12]
 8004072:	2330      	movs	r3, #48	@ 0x30
 8004074:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8004224 <_vfiprintf_r+0x21c>
 8004078:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800407c:	f04f 0901 	mov.w	r9, #1
 8004080:	4623      	mov	r3, r4
 8004082:	469a      	mov	sl, r3
 8004084:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004088:	b10a      	cbz	r2, 800408e <_vfiprintf_r+0x86>
 800408a:	2a25      	cmp	r2, #37	@ 0x25
 800408c:	d1f9      	bne.n	8004082 <_vfiprintf_r+0x7a>
 800408e:	ebba 0b04 	subs.w	fp, sl, r4
 8004092:	d00b      	beq.n	80040ac <_vfiprintf_r+0xa4>
 8004094:	465b      	mov	r3, fp
 8004096:	4622      	mov	r2, r4
 8004098:	4629      	mov	r1, r5
 800409a:	4630      	mov	r0, r6
 800409c:	f7ff ffa1 	bl	8003fe2 <__sfputs_r>
 80040a0:	3001      	adds	r0, #1
 80040a2:	f000 80a7 	beq.w	80041f4 <_vfiprintf_r+0x1ec>
 80040a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80040a8:	445a      	add	r2, fp
 80040aa:	9209      	str	r2, [sp, #36]	@ 0x24
 80040ac:	f89a 3000 	ldrb.w	r3, [sl]
 80040b0:	2b00      	cmp	r3, #0
 80040b2:	f000 809f 	beq.w	80041f4 <_vfiprintf_r+0x1ec>
 80040b6:	2300      	movs	r3, #0
 80040b8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80040bc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80040c0:	f10a 0a01 	add.w	sl, sl, #1
 80040c4:	9304      	str	r3, [sp, #16]
 80040c6:	9307      	str	r3, [sp, #28]
 80040c8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80040cc:	931a      	str	r3, [sp, #104]	@ 0x68
 80040ce:	4654      	mov	r4, sl
 80040d0:	2205      	movs	r2, #5
 80040d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80040d6:	4853      	ldr	r0, [pc, #332]	@ (8004224 <_vfiprintf_r+0x21c>)
 80040d8:	f7fc f882 	bl	80001e0 <memchr>
 80040dc:	9a04      	ldr	r2, [sp, #16]
 80040de:	b9d8      	cbnz	r0, 8004118 <_vfiprintf_r+0x110>
 80040e0:	06d1      	lsls	r1, r2, #27
 80040e2:	bf44      	itt	mi
 80040e4:	2320      	movmi	r3, #32
 80040e6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80040ea:	0713      	lsls	r3, r2, #28
 80040ec:	bf44      	itt	mi
 80040ee:	232b      	movmi	r3, #43	@ 0x2b
 80040f0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80040f4:	f89a 3000 	ldrb.w	r3, [sl]
 80040f8:	2b2a      	cmp	r3, #42	@ 0x2a
 80040fa:	d015      	beq.n	8004128 <_vfiprintf_r+0x120>
 80040fc:	9a07      	ldr	r2, [sp, #28]
 80040fe:	4654      	mov	r4, sl
 8004100:	2000      	movs	r0, #0
 8004102:	f04f 0c0a 	mov.w	ip, #10
 8004106:	4621      	mov	r1, r4
 8004108:	f811 3b01 	ldrb.w	r3, [r1], #1
 800410c:	3b30      	subs	r3, #48	@ 0x30
 800410e:	2b09      	cmp	r3, #9
 8004110:	d94b      	bls.n	80041aa <_vfiprintf_r+0x1a2>
 8004112:	b1b0      	cbz	r0, 8004142 <_vfiprintf_r+0x13a>
 8004114:	9207      	str	r2, [sp, #28]
 8004116:	e014      	b.n	8004142 <_vfiprintf_r+0x13a>
 8004118:	eba0 0308 	sub.w	r3, r0, r8
 800411c:	fa09 f303 	lsl.w	r3, r9, r3
 8004120:	4313      	orrs	r3, r2
 8004122:	9304      	str	r3, [sp, #16]
 8004124:	46a2      	mov	sl, r4
 8004126:	e7d2      	b.n	80040ce <_vfiprintf_r+0xc6>
 8004128:	9b03      	ldr	r3, [sp, #12]
 800412a:	1d19      	adds	r1, r3, #4
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	9103      	str	r1, [sp, #12]
 8004130:	2b00      	cmp	r3, #0
 8004132:	bfbb      	ittet	lt
 8004134:	425b      	neglt	r3, r3
 8004136:	f042 0202 	orrlt.w	r2, r2, #2
 800413a:	9307      	strge	r3, [sp, #28]
 800413c:	9307      	strlt	r3, [sp, #28]
 800413e:	bfb8      	it	lt
 8004140:	9204      	strlt	r2, [sp, #16]
 8004142:	7823      	ldrb	r3, [r4, #0]
 8004144:	2b2e      	cmp	r3, #46	@ 0x2e
 8004146:	d10a      	bne.n	800415e <_vfiprintf_r+0x156>
 8004148:	7863      	ldrb	r3, [r4, #1]
 800414a:	2b2a      	cmp	r3, #42	@ 0x2a
 800414c:	d132      	bne.n	80041b4 <_vfiprintf_r+0x1ac>
 800414e:	9b03      	ldr	r3, [sp, #12]
 8004150:	1d1a      	adds	r2, r3, #4
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	9203      	str	r2, [sp, #12]
 8004156:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800415a:	3402      	adds	r4, #2
 800415c:	9305      	str	r3, [sp, #20]
 800415e:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8004228 <_vfiprintf_r+0x220>
 8004162:	7821      	ldrb	r1, [r4, #0]
 8004164:	2203      	movs	r2, #3
 8004166:	4650      	mov	r0, sl
 8004168:	f7fc f83a 	bl	80001e0 <memchr>
 800416c:	b138      	cbz	r0, 800417e <_vfiprintf_r+0x176>
 800416e:	9b04      	ldr	r3, [sp, #16]
 8004170:	eba0 000a 	sub.w	r0, r0, sl
 8004174:	2240      	movs	r2, #64	@ 0x40
 8004176:	4082      	lsls	r2, r0
 8004178:	4313      	orrs	r3, r2
 800417a:	3401      	adds	r4, #1
 800417c:	9304      	str	r3, [sp, #16]
 800417e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004182:	482a      	ldr	r0, [pc, #168]	@ (800422c <_vfiprintf_r+0x224>)
 8004184:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004188:	2206      	movs	r2, #6
 800418a:	f7fc f829 	bl	80001e0 <memchr>
 800418e:	2800      	cmp	r0, #0
 8004190:	d03f      	beq.n	8004212 <_vfiprintf_r+0x20a>
 8004192:	4b27      	ldr	r3, [pc, #156]	@ (8004230 <_vfiprintf_r+0x228>)
 8004194:	bb1b      	cbnz	r3, 80041de <_vfiprintf_r+0x1d6>
 8004196:	9b03      	ldr	r3, [sp, #12]
 8004198:	3307      	adds	r3, #7
 800419a:	f023 0307 	bic.w	r3, r3, #7
 800419e:	3308      	adds	r3, #8
 80041a0:	9303      	str	r3, [sp, #12]
 80041a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80041a4:	443b      	add	r3, r7
 80041a6:	9309      	str	r3, [sp, #36]	@ 0x24
 80041a8:	e76a      	b.n	8004080 <_vfiprintf_r+0x78>
 80041aa:	fb0c 3202 	mla	r2, ip, r2, r3
 80041ae:	460c      	mov	r4, r1
 80041b0:	2001      	movs	r0, #1
 80041b2:	e7a8      	b.n	8004106 <_vfiprintf_r+0xfe>
 80041b4:	2300      	movs	r3, #0
 80041b6:	3401      	adds	r4, #1
 80041b8:	9305      	str	r3, [sp, #20]
 80041ba:	4619      	mov	r1, r3
 80041bc:	f04f 0c0a 	mov.w	ip, #10
 80041c0:	4620      	mov	r0, r4
 80041c2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80041c6:	3a30      	subs	r2, #48	@ 0x30
 80041c8:	2a09      	cmp	r2, #9
 80041ca:	d903      	bls.n	80041d4 <_vfiprintf_r+0x1cc>
 80041cc:	2b00      	cmp	r3, #0
 80041ce:	d0c6      	beq.n	800415e <_vfiprintf_r+0x156>
 80041d0:	9105      	str	r1, [sp, #20]
 80041d2:	e7c4      	b.n	800415e <_vfiprintf_r+0x156>
 80041d4:	fb0c 2101 	mla	r1, ip, r1, r2
 80041d8:	4604      	mov	r4, r0
 80041da:	2301      	movs	r3, #1
 80041dc:	e7f0      	b.n	80041c0 <_vfiprintf_r+0x1b8>
 80041de:	ab03      	add	r3, sp, #12
 80041e0:	9300      	str	r3, [sp, #0]
 80041e2:	462a      	mov	r2, r5
 80041e4:	4b13      	ldr	r3, [pc, #76]	@ (8004234 <_vfiprintf_r+0x22c>)
 80041e6:	a904      	add	r1, sp, #16
 80041e8:	4630      	mov	r0, r6
 80041ea:	f7fd fbdb 	bl	80019a4 <_printf_float>
 80041ee:	4607      	mov	r7, r0
 80041f0:	1c78      	adds	r0, r7, #1
 80041f2:	d1d6      	bne.n	80041a2 <_vfiprintf_r+0x19a>
 80041f4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80041f6:	07d9      	lsls	r1, r3, #31
 80041f8:	d405      	bmi.n	8004206 <_vfiprintf_r+0x1fe>
 80041fa:	89ab      	ldrh	r3, [r5, #12]
 80041fc:	059a      	lsls	r2, r3, #22
 80041fe:	d402      	bmi.n	8004206 <_vfiprintf_r+0x1fe>
 8004200:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004202:	f7fe f969 	bl	80024d8 <__retarget_lock_release_recursive>
 8004206:	89ab      	ldrh	r3, [r5, #12]
 8004208:	065b      	lsls	r3, r3, #25
 800420a:	f53f af1f 	bmi.w	800404c <_vfiprintf_r+0x44>
 800420e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004210:	e71e      	b.n	8004050 <_vfiprintf_r+0x48>
 8004212:	ab03      	add	r3, sp, #12
 8004214:	9300      	str	r3, [sp, #0]
 8004216:	462a      	mov	r2, r5
 8004218:	4b06      	ldr	r3, [pc, #24]	@ (8004234 <_vfiprintf_r+0x22c>)
 800421a:	a904      	add	r1, sp, #16
 800421c:	4630      	mov	r0, r6
 800421e:	f7fd ff05 	bl	800202c <_printf_i>
 8004222:	e7e4      	b.n	80041ee <_vfiprintf_r+0x1e6>
 8004224:	0800472e 	.word	0x0800472e
 8004228:	08004734 	.word	0x08004734
 800422c:	08004738 	.word	0x08004738
 8004230:	080019a5 	.word	0x080019a5
 8004234:	08003fe3 	.word	0x08003fe3

08004238 <__swbuf_r>:
 8004238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800423a:	460e      	mov	r6, r1
 800423c:	4614      	mov	r4, r2
 800423e:	4605      	mov	r5, r0
 8004240:	b118      	cbz	r0, 800424a <__swbuf_r+0x12>
 8004242:	6a03      	ldr	r3, [r0, #32]
 8004244:	b90b      	cbnz	r3, 800424a <__swbuf_r+0x12>
 8004246:	f7fe f8c9 	bl	80023dc <__sinit>
 800424a:	69a3      	ldr	r3, [r4, #24]
 800424c:	60a3      	str	r3, [r4, #8]
 800424e:	89a3      	ldrh	r3, [r4, #12]
 8004250:	071a      	lsls	r2, r3, #28
 8004252:	d501      	bpl.n	8004258 <__swbuf_r+0x20>
 8004254:	6923      	ldr	r3, [r4, #16]
 8004256:	b943      	cbnz	r3, 800426a <__swbuf_r+0x32>
 8004258:	4621      	mov	r1, r4
 800425a:	4628      	mov	r0, r5
 800425c:	f000 f82a 	bl	80042b4 <__swsetup_r>
 8004260:	b118      	cbz	r0, 800426a <__swbuf_r+0x32>
 8004262:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8004266:	4638      	mov	r0, r7
 8004268:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800426a:	6823      	ldr	r3, [r4, #0]
 800426c:	6922      	ldr	r2, [r4, #16]
 800426e:	1a98      	subs	r0, r3, r2
 8004270:	6963      	ldr	r3, [r4, #20]
 8004272:	b2f6      	uxtb	r6, r6
 8004274:	4283      	cmp	r3, r0
 8004276:	4637      	mov	r7, r6
 8004278:	dc05      	bgt.n	8004286 <__swbuf_r+0x4e>
 800427a:	4621      	mov	r1, r4
 800427c:	4628      	mov	r0, r5
 800427e:	f7ff f9a1 	bl	80035c4 <_fflush_r>
 8004282:	2800      	cmp	r0, #0
 8004284:	d1ed      	bne.n	8004262 <__swbuf_r+0x2a>
 8004286:	68a3      	ldr	r3, [r4, #8]
 8004288:	3b01      	subs	r3, #1
 800428a:	60a3      	str	r3, [r4, #8]
 800428c:	6823      	ldr	r3, [r4, #0]
 800428e:	1c5a      	adds	r2, r3, #1
 8004290:	6022      	str	r2, [r4, #0]
 8004292:	701e      	strb	r6, [r3, #0]
 8004294:	6962      	ldr	r2, [r4, #20]
 8004296:	1c43      	adds	r3, r0, #1
 8004298:	429a      	cmp	r2, r3
 800429a:	d004      	beq.n	80042a6 <__swbuf_r+0x6e>
 800429c:	89a3      	ldrh	r3, [r4, #12]
 800429e:	07db      	lsls	r3, r3, #31
 80042a0:	d5e1      	bpl.n	8004266 <__swbuf_r+0x2e>
 80042a2:	2e0a      	cmp	r6, #10
 80042a4:	d1df      	bne.n	8004266 <__swbuf_r+0x2e>
 80042a6:	4621      	mov	r1, r4
 80042a8:	4628      	mov	r0, r5
 80042aa:	f7ff f98b 	bl	80035c4 <_fflush_r>
 80042ae:	2800      	cmp	r0, #0
 80042b0:	d0d9      	beq.n	8004266 <__swbuf_r+0x2e>
 80042b2:	e7d6      	b.n	8004262 <__swbuf_r+0x2a>

080042b4 <__swsetup_r>:
 80042b4:	b538      	push	{r3, r4, r5, lr}
 80042b6:	4b29      	ldr	r3, [pc, #164]	@ (800435c <__swsetup_r+0xa8>)
 80042b8:	4605      	mov	r5, r0
 80042ba:	6818      	ldr	r0, [r3, #0]
 80042bc:	460c      	mov	r4, r1
 80042be:	b118      	cbz	r0, 80042c8 <__swsetup_r+0x14>
 80042c0:	6a03      	ldr	r3, [r0, #32]
 80042c2:	b90b      	cbnz	r3, 80042c8 <__swsetup_r+0x14>
 80042c4:	f7fe f88a 	bl	80023dc <__sinit>
 80042c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80042cc:	0719      	lsls	r1, r3, #28
 80042ce:	d422      	bmi.n	8004316 <__swsetup_r+0x62>
 80042d0:	06da      	lsls	r2, r3, #27
 80042d2:	d407      	bmi.n	80042e4 <__swsetup_r+0x30>
 80042d4:	2209      	movs	r2, #9
 80042d6:	602a      	str	r2, [r5, #0]
 80042d8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80042dc:	81a3      	strh	r3, [r4, #12]
 80042de:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80042e2:	e033      	b.n	800434c <__swsetup_r+0x98>
 80042e4:	0758      	lsls	r0, r3, #29
 80042e6:	d512      	bpl.n	800430e <__swsetup_r+0x5a>
 80042e8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80042ea:	b141      	cbz	r1, 80042fe <__swsetup_r+0x4a>
 80042ec:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80042f0:	4299      	cmp	r1, r3
 80042f2:	d002      	beq.n	80042fa <__swsetup_r+0x46>
 80042f4:	4628      	mov	r0, r5
 80042f6:	f7fe ff43 	bl	8003180 <_free_r>
 80042fa:	2300      	movs	r3, #0
 80042fc:	6363      	str	r3, [r4, #52]	@ 0x34
 80042fe:	89a3      	ldrh	r3, [r4, #12]
 8004300:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8004304:	81a3      	strh	r3, [r4, #12]
 8004306:	2300      	movs	r3, #0
 8004308:	6063      	str	r3, [r4, #4]
 800430a:	6923      	ldr	r3, [r4, #16]
 800430c:	6023      	str	r3, [r4, #0]
 800430e:	89a3      	ldrh	r3, [r4, #12]
 8004310:	f043 0308 	orr.w	r3, r3, #8
 8004314:	81a3      	strh	r3, [r4, #12]
 8004316:	6923      	ldr	r3, [r4, #16]
 8004318:	b94b      	cbnz	r3, 800432e <__swsetup_r+0x7a>
 800431a:	89a3      	ldrh	r3, [r4, #12]
 800431c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8004320:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004324:	d003      	beq.n	800432e <__swsetup_r+0x7a>
 8004326:	4621      	mov	r1, r4
 8004328:	4628      	mov	r0, r5
 800432a:	f000 f83f 	bl	80043ac <__smakebuf_r>
 800432e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004332:	f013 0201 	ands.w	r2, r3, #1
 8004336:	d00a      	beq.n	800434e <__swsetup_r+0x9a>
 8004338:	2200      	movs	r2, #0
 800433a:	60a2      	str	r2, [r4, #8]
 800433c:	6962      	ldr	r2, [r4, #20]
 800433e:	4252      	negs	r2, r2
 8004340:	61a2      	str	r2, [r4, #24]
 8004342:	6922      	ldr	r2, [r4, #16]
 8004344:	b942      	cbnz	r2, 8004358 <__swsetup_r+0xa4>
 8004346:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800434a:	d1c5      	bne.n	80042d8 <__swsetup_r+0x24>
 800434c:	bd38      	pop	{r3, r4, r5, pc}
 800434e:	0799      	lsls	r1, r3, #30
 8004350:	bf58      	it	pl
 8004352:	6962      	ldrpl	r2, [r4, #20]
 8004354:	60a2      	str	r2, [r4, #8]
 8004356:	e7f4      	b.n	8004342 <__swsetup_r+0x8e>
 8004358:	2000      	movs	r0, #0
 800435a:	e7f7      	b.n	800434c <__swsetup_r+0x98>
 800435c:	20000034 	.word	0x20000034

08004360 <__swhatbuf_r>:
 8004360:	b570      	push	{r4, r5, r6, lr}
 8004362:	460c      	mov	r4, r1
 8004364:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004368:	2900      	cmp	r1, #0
 800436a:	b096      	sub	sp, #88	@ 0x58
 800436c:	4615      	mov	r5, r2
 800436e:	461e      	mov	r6, r3
 8004370:	da0d      	bge.n	800438e <__swhatbuf_r+0x2e>
 8004372:	89a3      	ldrh	r3, [r4, #12]
 8004374:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004378:	f04f 0100 	mov.w	r1, #0
 800437c:	bf14      	ite	ne
 800437e:	2340      	movne	r3, #64	@ 0x40
 8004380:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8004384:	2000      	movs	r0, #0
 8004386:	6031      	str	r1, [r6, #0]
 8004388:	602b      	str	r3, [r5, #0]
 800438a:	b016      	add	sp, #88	@ 0x58
 800438c:	bd70      	pop	{r4, r5, r6, pc}
 800438e:	466a      	mov	r2, sp
 8004390:	f000 f848 	bl	8004424 <_fstat_r>
 8004394:	2800      	cmp	r0, #0
 8004396:	dbec      	blt.n	8004372 <__swhatbuf_r+0x12>
 8004398:	9901      	ldr	r1, [sp, #4]
 800439a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800439e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80043a2:	4259      	negs	r1, r3
 80043a4:	4159      	adcs	r1, r3
 80043a6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80043aa:	e7eb      	b.n	8004384 <__swhatbuf_r+0x24>

080043ac <__smakebuf_r>:
 80043ac:	898b      	ldrh	r3, [r1, #12]
 80043ae:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80043b0:	079d      	lsls	r5, r3, #30
 80043b2:	4606      	mov	r6, r0
 80043b4:	460c      	mov	r4, r1
 80043b6:	d507      	bpl.n	80043c8 <__smakebuf_r+0x1c>
 80043b8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80043bc:	6023      	str	r3, [r4, #0]
 80043be:	6123      	str	r3, [r4, #16]
 80043c0:	2301      	movs	r3, #1
 80043c2:	6163      	str	r3, [r4, #20]
 80043c4:	b003      	add	sp, #12
 80043c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80043c8:	ab01      	add	r3, sp, #4
 80043ca:	466a      	mov	r2, sp
 80043cc:	f7ff ffc8 	bl	8004360 <__swhatbuf_r>
 80043d0:	9f00      	ldr	r7, [sp, #0]
 80043d2:	4605      	mov	r5, r0
 80043d4:	4639      	mov	r1, r7
 80043d6:	4630      	mov	r0, r6
 80043d8:	f7fd fd3a 	bl	8001e50 <_malloc_r>
 80043dc:	b948      	cbnz	r0, 80043f2 <__smakebuf_r+0x46>
 80043de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80043e2:	059a      	lsls	r2, r3, #22
 80043e4:	d4ee      	bmi.n	80043c4 <__smakebuf_r+0x18>
 80043e6:	f023 0303 	bic.w	r3, r3, #3
 80043ea:	f043 0302 	orr.w	r3, r3, #2
 80043ee:	81a3      	strh	r3, [r4, #12]
 80043f0:	e7e2      	b.n	80043b8 <__smakebuf_r+0xc>
 80043f2:	89a3      	ldrh	r3, [r4, #12]
 80043f4:	6020      	str	r0, [r4, #0]
 80043f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80043fa:	81a3      	strh	r3, [r4, #12]
 80043fc:	9b01      	ldr	r3, [sp, #4]
 80043fe:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8004402:	b15b      	cbz	r3, 800441c <__smakebuf_r+0x70>
 8004404:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004408:	4630      	mov	r0, r6
 800440a:	f000 f81d 	bl	8004448 <_isatty_r>
 800440e:	b128      	cbz	r0, 800441c <__smakebuf_r+0x70>
 8004410:	89a3      	ldrh	r3, [r4, #12]
 8004412:	f023 0303 	bic.w	r3, r3, #3
 8004416:	f043 0301 	orr.w	r3, r3, #1
 800441a:	81a3      	strh	r3, [r4, #12]
 800441c:	89a3      	ldrh	r3, [r4, #12]
 800441e:	431d      	orrs	r5, r3
 8004420:	81a5      	strh	r5, [r4, #12]
 8004422:	e7cf      	b.n	80043c4 <__smakebuf_r+0x18>

08004424 <_fstat_r>:
 8004424:	b538      	push	{r3, r4, r5, lr}
 8004426:	4d07      	ldr	r5, [pc, #28]	@ (8004444 <_fstat_r+0x20>)
 8004428:	2300      	movs	r3, #0
 800442a:	4604      	mov	r4, r0
 800442c:	4608      	mov	r0, r1
 800442e:	4611      	mov	r1, r2
 8004430:	602b      	str	r3, [r5, #0]
 8004432:	f7fd f993 	bl	800175c <_fstat>
 8004436:	1c43      	adds	r3, r0, #1
 8004438:	d102      	bne.n	8004440 <_fstat_r+0x1c>
 800443a:	682b      	ldr	r3, [r5, #0]
 800443c:	b103      	cbz	r3, 8004440 <_fstat_r+0x1c>
 800443e:	6023      	str	r3, [r4, #0]
 8004440:	bd38      	pop	{r3, r4, r5, pc}
 8004442:	bf00      	nop
 8004444:	2000035c 	.word	0x2000035c

08004448 <_isatty_r>:
 8004448:	b538      	push	{r3, r4, r5, lr}
 800444a:	4d06      	ldr	r5, [pc, #24]	@ (8004464 <_isatty_r+0x1c>)
 800444c:	2300      	movs	r3, #0
 800444e:	4604      	mov	r4, r0
 8004450:	4608      	mov	r0, r1
 8004452:	602b      	str	r3, [r5, #0]
 8004454:	f7fd f991 	bl	800177a <_isatty>
 8004458:	1c43      	adds	r3, r0, #1
 800445a:	d102      	bne.n	8004462 <_isatty_r+0x1a>
 800445c:	682b      	ldr	r3, [r5, #0]
 800445e:	b103      	cbz	r3, 8004462 <_isatty_r+0x1a>
 8004460:	6023      	str	r3, [r4, #0]
 8004462:	bd38      	pop	{r3, r4, r5, pc}
 8004464:	2000035c 	.word	0x2000035c

08004468 <_raise_r>:
 8004468:	291f      	cmp	r1, #31
 800446a:	b538      	push	{r3, r4, r5, lr}
 800446c:	4605      	mov	r5, r0
 800446e:	460c      	mov	r4, r1
 8004470:	d904      	bls.n	800447c <_raise_r+0x14>
 8004472:	2316      	movs	r3, #22
 8004474:	6003      	str	r3, [r0, #0]
 8004476:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800447a:	bd38      	pop	{r3, r4, r5, pc}
 800447c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800447e:	b112      	cbz	r2, 8004486 <_raise_r+0x1e>
 8004480:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004484:	b94b      	cbnz	r3, 800449a <_raise_r+0x32>
 8004486:	4628      	mov	r0, r5
 8004488:	f000 f830 	bl	80044ec <_getpid_r>
 800448c:	4622      	mov	r2, r4
 800448e:	4601      	mov	r1, r0
 8004490:	4628      	mov	r0, r5
 8004492:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004496:	f000 b817 	b.w	80044c8 <_kill_r>
 800449a:	2b01      	cmp	r3, #1
 800449c:	d00a      	beq.n	80044b4 <_raise_r+0x4c>
 800449e:	1c59      	adds	r1, r3, #1
 80044a0:	d103      	bne.n	80044aa <_raise_r+0x42>
 80044a2:	2316      	movs	r3, #22
 80044a4:	6003      	str	r3, [r0, #0]
 80044a6:	2001      	movs	r0, #1
 80044a8:	e7e7      	b.n	800447a <_raise_r+0x12>
 80044aa:	2100      	movs	r1, #0
 80044ac:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80044b0:	4620      	mov	r0, r4
 80044b2:	4798      	blx	r3
 80044b4:	2000      	movs	r0, #0
 80044b6:	e7e0      	b.n	800447a <_raise_r+0x12>

080044b8 <raise>:
 80044b8:	4b02      	ldr	r3, [pc, #8]	@ (80044c4 <raise+0xc>)
 80044ba:	4601      	mov	r1, r0
 80044bc:	6818      	ldr	r0, [r3, #0]
 80044be:	f7ff bfd3 	b.w	8004468 <_raise_r>
 80044c2:	bf00      	nop
 80044c4:	20000034 	.word	0x20000034

080044c8 <_kill_r>:
 80044c8:	b538      	push	{r3, r4, r5, lr}
 80044ca:	4d07      	ldr	r5, [pc, #28]	@ (80044e8 <_kill_r+0x20>)
 80044cc:	2300      	movs	r3, #0
 80044ce:	4604      	mov	r4, r0
 80044d0:	4608      	mov	r0, r1
 80044d2:	4611      	mov	r1, r2
 80044d4:	602b      	str	r3, [r5, #0]
 80044d6:	f7fd f8e2 	bl	800169e <_kill>
 80044da:	1c43      	adds	r3, r0, #1
 80044dc:	d102      	bne.n	80044e4 <_kill_r+0x1c>
 80044de:	682b      	ldr	r3, [r5, #0]
 80044e0:	b103      	cbz	r3, 80044e4 <_kill_r+0x1c>
 80044e2:	6023      	str	r3, [r4, #0]
 80044e4:	bd38      	pop	{r3, r4, r5, pc}
 80044e6:	bf00      	nop
 80044e8:	2000035c 	.word	0x2000035c

080044ec <_getpid_r>:
 80044ec:	f7fd b8d0 	b.w	8001690 <_getpid>

080044f0 <_init>:
 80044f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044f2:	bf00      	nop
 80044f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80044f6:	bc08      	pop	{r3}
 80044f8:	469e      	mov	lr, r3
 80044fa:	4770      	bx	lr

080044fc <_fini>:
 80044fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044fe:	bf00      	nop
 8004500:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004502:	bc08      	pop	{r3}
 8004504:	469e      	mov	lr, r3
 8004506:	4770      	bx	lr
